syntax = "proto3";

package logic_to_interface;

// all direction is a number in [0,360)

message Pos
{
	double x = 1;
	double y = 2;
}

// some basic information to be sent in the beginning
message PlayerBasicInfo
{
	int32 id = 1;
	int32 team = 2;
	int32 vocation = 3;
	int32 HP_max = 4;
	// maybe here should be more information
}

// for players on the ground
message PlayerInfo
{
	int32 id = 1;
	int32 HP = 2;
	Pos pos = 3;
	int32 weapon = 4;
	int32 armor = 5;
	double face_direction = 6;
	double height = 7;
	bool real_dead = 8;
	Fire fire_info = 9;
}

message Fire
{
	// -1 means miss, or player id
	int32 target = 2;
	int32 weapon = 3;
    // negative means heal, positive means harm
    float damage = 4;
}

message Item
{
	int32 id = 1;
	int32 type = 2;
	Pos pos = 3;
}

message Circle
{
	Pos center = 1;
	double radius = 2;
}

message CircleInfo
{
	// if it's 0, frames means rest frames to generate circle
	// if it's 1, frames means rest frames to move to next status
	// if it's 2, frames means rest frames to start to move
	// if it's 3, the poison ring won't move(has become a node)
	int32 status = 1;
	int32 frames = 2;
	Circle now = 3;
	Circle next = 4;
}


// only used in the beginning
message InitialInfo
{
	Pos start = 1;
	Pos over = 2;
	repeated PlayerBasicInfo players = 3;
}

// created in each frame
message FrameInfo
{
	int32 frame = 1;
	repeated PlayerInfo players = 2;
	repeated Item new_items = 3;
	repeated int32 removed_items = 4;
	CircleInfo circle = 5;
}

   
