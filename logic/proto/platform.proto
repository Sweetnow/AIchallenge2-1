syntax = "proto3";

package logic_to_platform;


message PolarPosition {
    //use the system of polar coordinates
    double distance=1;
    double angle=2;
}

message XYPosition {
    //use the system of rectangular coordinates
    double x=1;
    double y=2;
}

message Item {
    //items like gun, etc.
	// for bag, just type and durability
    int32 item_ID=1;
    int32 type=2;
    PolarPosition pos=3;
    int32 durability=4;
}

message PoisonInfo{
	// information for poison ring
	XYPosition current_center = 1;
	XYPosition next_center = 2;
	double current_radius = 3;
	double next_radius = 4;
	int32 rest_frames = 5;
	// if it's 1, rest_frames means rest frames to move to next status
	// if it's 0, rest_frames means rest frames to start to move 
	// if it's -1, the poison ring won't move(has become a node)
	int32 move_flag = 6;
}

message SelfInfo {
    //complete info of self
    double heal_point=1;
    double heal_point_limit=2;
    double move_angle=3;
    double view_angle=4;
    double move_speed=5;
    int32 vocation=6;
    int32 status=7;
    int32 move_cd=8;
	int32 attack_cd=9;
    XYPosition pos=10;
    repeated Item bag=11;
	double view_width = 12;
	double view_distance = 13;
}

message OtherInfo {
    //basic info of other characters in visual field
    int32 player_ID=1;
    int32 status=2;
    double move_angle=3;
    double view_angle=4;
    double move_speed=5;
	int32 vocation=6;
    PolarPosition pos=7;
}

message Sound {
    int32 sender=1;
    int32 delay=2;
    int32 parameter=3;
}

message PlayerInfo {
    //all info that send to each player per turn
    int32 player_ID=6;
    SelfInfo self=1;
    repeated int32 landform_id=2;
    repeated Item items=3;
    repeated OtherInfo others=4;
    repeated Sound sounds=5;
	PoisonInfo poison = 7;
}