// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: command.proto

#ifndef PROTOBUF_INCLUDED_command_2eproto
#define PROTOBUF_INCLUDED_command_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_command_2eproto 

namespace protobuf_command_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[1];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_command_2eproto
namespace platform {
class Command;
class CommandDefaultTypeInternal;
extern CommandDefaultTypeInternal _Command_default_instance_;
}  // namespace platform
namespace google {
namespace protobuf {
template<> ::platform::Command* Arena::CreateMaybeMessage<::platform::Command>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace platform {

enum CommandType {
  MOVE = 0,
  SHOOT = 1,
  PICKUP = 2,
  RADIO = 3,
  CommandType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  CommandType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool CommandType_IsValid(int value);
const CommandType CommandType_MIN = MOVE;
const CommandType CommandType_MAX = RADIO;
const int CommandType_ARRAYSIZE = CommandType_MAX + 1;

const ::google::protobuf::EnumDescriptor* CommandType_descriptor();
inline const ::std::string& CommandType_Name(CommandType value) {
  return ::google::protobuf::internal::NameOfEnum(
    CommandType_descriptor(), value);
}
inline bool CommandType_Parse(
    const ::std::string& name, CommandType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CommandType>(
    CommandType_descriptor(), name, value);
}
// ===================================================================

class Command : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:platform.Command) */ {
 public:
  Command();
  virtual ~Command();

  Command(const Command& from);

  inline Command& operator=(const Command& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Command(Command&& from) noexcept
    : Command() {
    *this = ::std::move(from);
  }

  inline Command& operator=(Command&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Command& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Command* internal_default_instance() {
    return reinterpret_cast<const Command*>(
               &_Command_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(Command* other);
  friend void swap(Command& a, Command& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Command* New() const final {
    return CreateMaybeMessage<Command>(NULL);
  }

  Command* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Command>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Command& from);
  void MergeFrom(const Command& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Command* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .platform.CommandType command_type = 1;
  void clear_command_type();
  static const int kCommandTypeFieldNumber = 1;
  ::platform::CommandType command_type() const;
  void set_command_type(::platform::CommandType value);

  // int32 target_ID = 2;
  void clear_target_id();
  static const int kTargetIDFieldNumber = 2;
  ::google::protobuf::int32 target_id() const;
  void set_target_id(::google::protobuf::int32 value);

  // double move_angle = 3;
  void clear_move_angle();
  static const int kMoveAngleFieldNumber = 3;
  double move_angle() const;
  void set_move_angle(double value);

  // double view_angle = 4;
  void clear_view_angle();
  static const int kViewAngleFieldNumber = 4;
  double view_angle() const;
  void set_view_angle(double value);

  // int32 parameter = 5;
  void clear_parameter();
  static const int kParameterFieldNumber = 5;
  ::google::protobuf::int32 parameter() const;
  void set_parameter(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:platform.Command)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  int command_type_;
  ::google::protobuf::int32 target_id_;
  double move_angle_;
  double view_angle_;
  ::google::protobuf::int32 parameter_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_command_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// Command

// .platform.CommandType command_type = 1;
inline void Command::clear_command_type() {
  command_type_ = 0;
}
inline ::platform::CommandType Command::command_type() const {
  // @@protoc_insertion_point(field_get:platform.Command.command_type)
  return static_cast< ::platform::CommandType >(command_type_);
}
inline void Command::set_command_type(::platform::CommandType value) {
  
  command_type_ = value;
  // @@protoc_insertion_point(field_set:platform.Command.command_type)
}

// int32 target_ID = 2;
inline void Command::clear_target_id() {
  target_id_ = 0;
}
inline ::google::protobuf::int32 Command::target_id() const {
  // @@protoc_insertion_point(field_get:platform.Command.target_ID)
  return target_id_;
}
inline void Command::set_target_id(::google::protobuf::int32 value) {
  
  target_id_ = value;
  // @@protoc_insertion_point(field_set:platform.Command.target_ID)
}

// double move_angle = 3;
inline void Command::clear_move_angle() {
  move_angle_ = 0;
}
inline double Command::move_angle() const {
  // @@protoc_insertion_point(field_get:platform.Command.move_angle)
  return move_angle_;
}
inline void Command::set_move_angle(double value) {
  
  move_angle_ = value;
  // @@protoc_insertion_point(field_set:platform.Command.move_angle)
}

// double view_angle = 4;
inline void Command::clear_view_angle() {
  view_angle_ = 0;
}
inline double Command::view_angle() const {
  // @@protoc_insertion_point(field_get:platform.Command.view_angle)
  return view_angle_;
}
inline void Command::set_view_angle(double value) {
  
  view_angle_ = value;
  // @@protoc_insertion_point(field_set:platform.Command.view_angle)
}

// int32 parameter = 5;
inline void Command::clear_parameter() {
  parameter_ = 0;
}
inline ::google::protobuf::int32 Command::parameter() const {
  // @@protoc_insertion_point(field_get:platform.Command.parameter)
  return parameter_;
}
inline void Command::set_parameter(::google::protobuf::int32 value) {
  
  parameter_ = value;
  // @@protoc_insertion_point(field_set:platform.Command.parameter)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace platform

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::platform::CommandType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::platform::CommandType>() {
  return ::platform::CommandType_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_command_2eproto
