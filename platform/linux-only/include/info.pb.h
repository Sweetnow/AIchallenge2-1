// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: info.proto

#ifndef PROTOBUF_INCLUDED_info_2eproto
#define PROTOBUF_INCLUDED_info_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_info_2eproto 

namespace protobuf_info_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[9];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_info_2eproto
namespace platform {
class Item;
class ItemDefaultTypeInternal;
extern ItemDefaultTypeInternal _Item_default_instance_;
class Object;
class ObjectDefaultTypeInternal;
extern ObjectDefaultTypeInternal _Object_default_instance_;
class OtherInfo;
class OtherInfoDefaultTypeInternal;
extern OtherInfoDefaultTypeInternal _OtherInfo_default_instance_;
class PlayerInfo;
class PlayerInfoDefaultTypeInternal;
extern PlayerInfoDefaultTypeInternal _PlayerInfo_default_instance_;
class PolarPosition;
class PolarPositionDefaultTypeInternal;
extern PolarPositionDefaultTypeInternal _PolarPosition_default_instance_;
class SelfInfo;
class SelfInfoDefaultTypeInternal;
extern SelfInfoDefaultTypeInternal _SelfInfo_default_instance_;
class Sound;
class SoundDefaultTypeInternal;
extern SoundDefaultTypeInternal _Sound_default_instance_;
class TeamInfo;
class TeamInfoDefaultTypeInternal;
extern TeamInfoDefaultTypeInternal _TeamInfo_default_instance_;
class XYPosition;
class XYPositionDefaultTypeInternal;
extern XYPositionDefaultTypeInternal _XYPosition_default_instance_;
}  // namespace platform
namespace google {
namespace protobuf {
template<> ::platform::Item* Arena::CreateMaybeMessage<::platform::Item>(Arena*);
template<> ::platform::Object* Arena::CreateMaybeMessage<::platform::Object>(Arena*);
template<> ::platform::OtherInfo* Arena::CreateMaybeMessage<::platform::OtherInfo>(Arena*);
template<> ::platform::PlayerInfo* Arena::CreateMaybeMessage<::platform::PlayerInfo>(Arena*);
template<> ::platform::PolarPosition* Arena::CreateMaybeMessage<::platform::PolarPosition>(Arena*);
template<> ::platform::SelfInfo* Arena::CreateMaybeMessage<::platform::SelfInfo>(Arena*);
template<> ::platform::Sound* Arena::CreateMaybeMessage<::platform::Sound>(Arena*);
template<> ::platform::TeamInfo* Arena::CreateMaybeMessage<::platform::TeamInfo>(Arena*);
template<> ::platform::XYPosition* Arena::CreateMaybeMessage<::platform::XYPosition>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace platform {

enum Object_ObjectType {
  Object_ObjectType_WALL = 0,
  Object_ObjectType_TREE = 1,
  Object_ObjectType_Object_ObjectType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Object_ObjectType_Object_ObjectType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Object_ObjectType_IsValid(int value);
const Object_ObjectType Object_ObjectType_ObjectType_MIN = Object_ObjectType_WALL;
const Object_ObjectType Object_ObjectType_ObjectType_MAX = Object_ObjectType_TREE;
const int Object_ObjectType_ObjectType_ARRAYSIZE = Object_ObjectType_ObjectType_MAX + 1;

const ::google::protobuf::EnumDescriptor* Object_ObjectType_descriptor();
inline const ::std::string& Object_ObjectType_Name(Object_ObjectType value) {
  return ::google::protobuf::internal::NameOfEnum(
    Object_ObjectType_descriptor(), value);
}
inline bool Object_ObjectType_Parse(
    const ::std::string& name, Object_ObjectType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Object_ObjectType>(
    Object_ObjectType_descriptor(), name, value);
}
enum Object_ObjectShape {
  Object_ObjectShape_CIRCLE = 0,
  Object_ObjectShape_RECTANGLE = 1,
  Object_ObjectShape_Object_ObjectShape_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Object_ObjectShape_Object_ObjectShape_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Object_ObjectShape_IsValid(int value);
const Object_ObjectShape Object_ObjectShape_ObjectShape_MIN = Object_ObjectShape_CIRCLE;
const Object_ObjectShape Object_ObjectShape_ObjectShape_MAX = Object_ObjectShape_RECTANGLE;
const int Object_ObjectShape_ObjectShape_ARRAYSIZE = Object_ObjectShape_ObjectShape_MAX + 1;

const ::google::protobuf::EnumDescriptor* Object_ObjectShape_descriptor();
inline const ::std::string& Object_ObjectShape_Name(Object_ObjectShape value) {
  return ::google::protobuf::internal::NameOfEnum(
    Object_ObjectShape_descriptor(), value);
}
inline bool Object_ObjectShape_Parse(
    const ::std::string& name, Object_ObjectShape* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Object_ObjectShape>(
    Object_ObjectShape_descriptor(), name, value);
}
enum Item_ItemType {
  Item_ItemType_WEAPON = 0,
  Item_ItemType_GOODS = 1,
  Item_ItemType_Item_ItemType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Item_ItemType_Item_ItemType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Item_ItemType_IsValid(int value);
const Item_ItemType Item_ItemType_ItemType_MIN = Item_ItemType_WEAPON;
const Item_ItemType Item_ItemType_ItemType_MAX = Item_ItemType_GOODS;
const int Item_ItemType_ItemType_ARRAYSIZE = Item_ItemType_ItemType_MAX + 1;

const ::google::protobuf::EnumDescriptor* Item_ItemType_descriptor();
inline const ::std::string& Item_ItemType_Name(Item_ItemType value) {
  return ::google::protobuf::internal::NameOfEnum(
    Item_ItemType_descriptor(), value);
}
inline bool Item_ItemType_Parse(
    const ::std::string& name, Item_ItemType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Item_ItemType>(
    Item_ItemType_descriptor(), name, value);
}
enum Sound_SoundType {
  Sound_SoundType_FOOTSTEP_SOUND = 0,
  Sound_SoundType_GUN_SOUND = 1,
  Sound_SoundType_RADIO_VOICE = 2,
  Sound_SoundType_Sound_SoundType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Sound_SoundType_Sound_SoundType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Sound_SoundType_IsValid(int value);
const Sound_SoundType Sound_SoundType_SoundType_MIN = Sound_SoundType_FOOTSTEP_SOUND;
const Sound_SoundType Sound_SoundType_SoundType_MAX = Sound_SoundType_RADIO_VOICE;
const int Sound_SoundType_SoundType_ARRAYSIZE = Sound_SoundType_SoundType_MAX + 1;

const ::google::protobuf::EnumDescriptor* Sound_SoundType_descriptor();
inline const ::std::string& Sound_SoundType_Name(Sound_SoundType value) {
  return ::google::protobuf::internal::NameOfEnum(
    Sound_SoundType_descriptor(), value);
}
inline bool Sound_SoundType_Parse(
    const ::std::string& name, Sound_SoundType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Sound_SoundType>(
    Sound_SoundType_descriptor(), name, value);
}
enum PlayerState {
  RELAX = 0,
  ON_PLANE = 1,
  JUMPING = 2,
  MOVING = 3,
  SHOOTING = 4,
  PICKUP = 5,
  PlayerState_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  PlayerState_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool PlayerState_IsValid(int value);
const PlayerState PlayerState_MIN = RELAX;
const PlayerState PlayerState_MAX = PICKUP;
const int PlayerState_ARRAYSIZE = PlayerState_MAX + 1;

const ::google::protobuf::EnumDescriptor* PlayerState_descriptor();
inline const ::std::string& PlayerState_Name(PlayerState value) {
  return ::google::protobuf::internal::NameOfEnum(
    PlayerState_descriptor(), value);
}
inline bool PlayerState_Parse(
    const ::std::string& name, PlayerState* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PlayerState>(
    PlayerState_descriptor(), name, value);
}
enum Vocation {
  MEDIC = 0,
  ENGINEER = 1,
  SIGNALMAN = 2,
  HACK = 3,
  SNIPER = 4,
  Vocation_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Vocation_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Vocation_IsValid(int value);
const Vocation Vocation_MIN = MEDIC;
const Vocation Vocation_MAX = SNIPER;
const int Vocation_ARRAYSIZE = Vocation_MAX + 1;

const ::google::protobuf::EnumDescriptor* Vocation_descriptor();
inline const ::std::string& Vocation_Name(Vocation value) {
  return ::google::protobuf::internal::NameOfEnum(
    Vocation_descriptor(), value);
}
inline bool Vocation_Parse(
    const ::std::string& name, Vocation* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Vocation>(
    Vocation_descriptor(), name, value);
}
// ===================================================================

class PolarPosition : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:platform.PolarPosition) */ {
 public:
  PolarPosition();
  virtual ~PolarPosition();

  PolarPosition(const PolarPosition& from);

  inline PolarPosition& operator=(const PolarPosition& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PolarPosition(PolarPosition&& from) noexcept
    : PolarPosition() {
    *this = ::std::move(from);
  }

  inline PolarPosition& operator=(PolarPosition&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PolarPosition& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PolarPosition* internal_default_instance() {
    return reinterpret_cast<const PolarPosition*>(
               &_PolarPosition_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(PolarPosition* other);
  friend void swap(PolarPosition& a, PolarPosition& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PolarPosition* New() const final {
    return CreateMaybeMessage<PolarPosition>(NULL);
  }

  PolarPosition* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PolarPosition>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PolarPosition& from);
  void MergeFrom(const PolarPosition& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PolarPosition* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // double distance = 1;
  void clear_distance();
  static const int kDistanceFieldNumber = 1;
  double distance() const;
  void set_distance(double value);

  // double angle = 2;
  void clear_angle();
  static const int kAngleFieldNumber = 2;
  double angle() const;
  void set_angle(double value);

  // @@protoc_insertion_point(class_scope:platform.PolarPosition)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  double distance_;
  double angle_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_info_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class XYPosition : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:platform.XYPosition) */ {
 public:
  XYPosition();
  virtual ~XYPosition();

  XYPosition(const XYPosition& from);

  inline XYPosition& operator=(const XYPosition& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  XYPosition(XYPosition&& from) noexcept
    : XYPosition() {
    *this = ::std::move(from);
  }

  inline XYPosition& operator=(XYPosition&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const XYPosition& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const XYPosition* internal_default_instance() {
    return reinterpret_cast<const XYPosition*>(
               &_XYPosition_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(XYPosition* other);
  friend void swap(XYPosition& a, XYPosition& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline XYPosition* New() const final {
    return CreateMaybeMessage<XYPosition>(NULL);
  }

  XYPosition* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<XYPosition>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const XYPosition& from);
  void MergeFrom(const XYPosition& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(XYPosition* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // double x = 1;
  void clear_x();
  static const int kXFieldNumber = 1;
  double x() const;
  void set_x(double value);

  // double y = 2;
  void clear_y();
  static const int kYFieldNumber = 2;
  double y() const;
  void set_y(double value);

  // @@protoc_insertion_point(class_scope:platform.XYPosition)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  double x_;
  double y_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_info_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Object : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:platform.Object) */ {
 public:
  Object();
  virtual ~Object();

  Object(const Object& from);

  inline Object& operator=(const Object& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Object(Object&& from) noexcept
    : Object() {
    *this = ::std::move(from);
  }

  inline Object& operator=(Object&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Object& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Object* internal_default_instance() {
    return reinterpret_cast<const Object*>(
               &_Object_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(Object* other);
  friend void swap(Object& a, Object& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Object* New() const final {
    return CreateMaybeMessage<Object>(NULL);
  }

  Object* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Object>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Object& from);
  void MergeFrom(const Object& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Object* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef Object_ObjectType ObjectType;
  static const ObjectType WALL =
    Object_ObjectType_WALL;
  static const ObjectType TREE =
    Object_ObjectType_TREE;
  static inline bool ObjectType_IsValid(int value) {
    return Object_ObjectType_IsValid(value);
  }
  static const ObjectType ObjectType_MIN =
    Object_ObjectType_ObjectType_MIN;
  static const ObjectType ObjectType_MAX =
    Object_ObjectType_ObjectType_MAX;
  static const int ObjectType_ARRAYSIZE =
    Object_ObjectType_ObjectType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  ObjectType_descriptor() {
    return Object_ObjectType_descriptor();
  }
  static inline const ::std::string& ObjectType_Name(ObjectType value) {
    return Object_ObjectType_Name(value);
  }
  static inline bool ObjectType_Parse(const ::std::string& name,
      ObjectType* value) {
    return Object_ObjectType_Parse(name, value);
  }

  typedef Object_ObjectShape ObjectShape;
  static const ObjectShape CIRCLE =
    Object_ObjectShape_CIRCLE;
  static const ObjectShape RECTANGLE =
    Object_ObjectShape_RECTANGLE;
  static inline bool ObjectShape_IsValid(int value) {
    return Object_ObjectShape_IsValid(value);
  }
  static const ObjectShape ObjectShape_MIN =
    Object_ObjectShape_ObjectShape_MIN;
  static const ObjectShape ObjectShape_MAX =
    Object_ObjectShape_ObjectShape_MAX;
  static const int ObjectShape_ARRAYSIZE =
    Object_ObjectShape_ObjectShape_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  ObjectShape_descriptor() {
    return Object_ObjectShape_descriptor();
  }
  static inline const ::std::string& ObjectShape_Name(ObjectShape value) {
    return Object_ObjectShape_Name(value);
  }
  static inline bool ObjectShape_Parse(const ::std::string& name,
      ObjectShape* value) {
    return Object_ObjectShape_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // .platform.PolarPosition pos = 1;
  bool has_pos() const;
  void clear_pos();
  static const int kPosFieldNumber = 1;
  private:
  const ::platform::PolarPosition& _internal_pos() const;
  public:
  const ::platform::PolarPosition& pos() const;
  ::platform::PolarPosition* release_pos();
  ::platform::PolarPosition* mutable_pos();
  void set_allocated_pos(::platform::PolarPosition* pos);

  // double radius = 2;
  void clear_radius();
  static const int kRadiusFieldNumber = 2;
  double radius() const;
  void set_radius(double value);

  // .platform.Object.ObjectType type = 3;
  void clear_type();
  static const int kTypeFieldNumber = 3;
  ::platform::Object_ObjectType type() const;
  void set_type(::platform::Object_ObjectType value);

  // .platform.Object.ObjectShape shape = 4;
  void clear_shape();
  static const int kShapeFieldNumber = 4;
  ::platform::Object_ObjectShape shape() const;
  void set_shape(::platform::Object_ObjectShape value);

  // @@protoc_insertion_point(class_scope:platform.Object)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::platform::PolarPosition* pos_;
  double radius_;
  int type_;
  int shape_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_info_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Item : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:platform.Item) */ {
 public:
  Item();
  virtual ~Item();

  Item(const Item& from);

  inline Item& operator=(const Item& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Item(Item&& from) noexcept
    : Item() {
    *this = ::std::move(from);
  }

  inline Item& operator=(Item&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Item& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Item* internal_default_instance() {
    return reinterpret_cast<const Item*>(
               &_Item_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(Item* other);
  friend void swap(Item& a, Item& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Item* New() const final {
    return CreateMaybeMessage<Item>(NULL);
  }

  Item* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Item>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Item& from);
  void MergeFrom(const Item& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Item* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef Item_ItemType ItemType;
  static const ItemType WEAPON =
    Item_ItemType_WEAPON;
  static const ItemType GOODS =
    Item_ItemType_GOODS;
  static inline bool ItemType_IsValid(int value) {
    return Item_ItemType_IsValid(value);
  }
  static const ItemType ItemType_MIN =
    Item_ItemType_ItemType_MIN;
  static const ItemType ItemType_MAX =
    Item_ItemType_ItemType_MAX;
  static const int ItemType_ARRAYSIZE =
    Item_ItemType_ItemType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  ItemType_descriptor() {
    return Item_ItemType_descriptor();
  }
  static inline const ::std::string& ItemType_Name(ItemType value) {
    return Item_ItemType_Name(value);
  }
  static inline bool ItemType_Parse(const ::std::string& name,
      ItemType* value) {
    return Item_ItemType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // .platform.PolarPosition pos = 3;
  bool has_pos() const;
  void clear_pos();
  static const int kPosFieldNumber = 3;
  private:
  const ::platform::PolarPosition& _internal_pos() const;
  public:
  const ::platform::PolarPosition& pos() const;
  ::platform::PolarPosition* release_pos();
  ::platform::PolarPosition* mutable_pos();
  void set_allocated_pos(::platform::PolarPosition* pos);

  // int32 item_ID = 1;
  void clear_item_id();
  static const int kItemIDFieldNumber = 1;
  ::google::protobuf::int32 item_id() const;
  void set_item_id(::google::protobuf::int32 value);

  // .platform.Item.ItemType type = 2;
  void clear_type();
  static const int kTypeFieldNumber = 2;
  ::platform::Item_ItemType type() const;
  void set_type(::platform::Item_ItemType value);

  // int32 durability = 4;
  void clear_durability();
  static const int kDurabilityFieldNumber = 4;
  ::google::protobuf::int32 durability() const;
  void set_durability(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:platform.Item)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::platform::PolarPosition* pos_;
  ::google::protobuf::int32 item_id_;
  int type_;
  ::google::protobuf::int32 durability_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_info_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SelfInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:platform.SelfInfo) */ {
 public:
  SelfInfo();
  virtual ~SelfInfo();

  SelfInfo(const SelfInfo& from);

  inline SelfInfo& operator=(const SelfInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SelfInfo(SelfInfo&& from) noexcept
    : SelfInfo() {
    *this = ::std::move(from);
  }

  inline SelfInfo& operator=(SelfInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SelfInfo& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SelfInfo* internal_default_instance() {
    return reinterpret_cast<const SelfInfo*>(
               &_SelfInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  void Swap(SelfInfo* other);
  friend void swap(SelfInfo& a, SelfInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SelfInfo* New() const final {
    return CreateMaybeMessage<SelfInfo>(NULL);
  }

  SelfInfo* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<SelfInfo>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const SelfInfo& from);
  void MergeFrom(const SelfInfo& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SelfInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .platform.Item bag = 10;
  int bag_size() const;
  void clear_bag();
  static const int kBagFieldNumber = 10;
  ::platform::Item* mutable_bag(int index);
  ::google::protobuf::RepeatedPtrField< ::platform::Item >*
      mutable_bag();
  const ::platform::Item& bag(int index) const;
  ::platform::Item* add_bag();
  const ::google::protobuf::RepeatedPtrField< ::platform::Item >&
      bag() const;

  // .platform.XYPosition pos = 9;
  bool has_pos() const;
  void clear_pos();
  static const int kPosFieldNumber = 9;
  private:
  const ::platform::XYPosition& _internal_pos() const;
  public:
  const ::platform::XYPosition& pos() const;
  ::platform::XYPosition* release_pos();
  ::platform::XYPosition* mutable_pos();
  void set_allocated_pos(::platform::XYPosition* pos);

  // int32 heal_point = 1;
  void clear_heal_point();
  static const int kHealPointFieldNumber = 1;
  ::google::protobuf::int32 heal_point() const;
  void set_heal_point(::google::protobuf::int32 value);

  // int32 heal_point_limit = 2;
  void clear_heal_point_limit();
  static const int kHealPointLimitFieldNumber = 2;
  ::google::protobuf::int32 heal_point_limit() const;
  void set_heal_point_limit(::google::protobuf::int32 value);

  // double move_angle = 3;
  void clear_move_angle();
  static const int kMoveAngleFieldNumber = 3;
  double move_angle() const;
  void set_move_angle(double value);

  // double view_angle = 4;
  void clear_view_angle();
  static const int kViewAngleFieldNumber = 4;
  double view_angle() const;
  void set_view_angle(double value);

  // double move_speed = 5;
  void clear_move_speed();
  static const int kMoveSpeedFieldNumber = 5;
  double move_speed() const;
  void set_move_speed(double value);

  // .platform.Vocation vocation = 6;
  void clear_vocation();
  static const int kVocationFieldNumber = 6;
  ::platform::Vocation vocation() const;
  void set_vocation(::platform::Vocation value);

  // .platform.PlayerState state = 7;
  void clear_state();
  static const int kStateFieldNumber = 7;
  ::platform::PlayerState state() const;
  void set_state(::platform::PlayerState value);

  // int32 state_cd = 8;
  void clear_state_cd();
  static const int kStateCdFieldNumber = 8;
  ::google::protobuf::int32 state_cd() const;
  void set_state_cd(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:platform.SelfInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::platform::Item > bag_;
  ::platform::XYPosition* pos_;
  ::google::protobuf::int32 heal_point_;
  ::google::protobuf::int32 heal_point_limit_;
  double move_angle_;
  double view_angle_;
  double move_speed_;
  int vocation_;
  int state_;
  ::google::protobuf::int32 state_cd_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_info_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class OtherInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:platform.OtherInfo) */ {
 public:
  OtherInfo();
  virtual ~OtherInfo();

  OtherInfo(const OtherInfo& from);

  inline OtherInfo& operator=(const OtherInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  OtherInfo(OtherInfo&& from) noexcept
    : OtherInfo() {
    *this = ::std::move(from);
  }

  inline OtherInfo& operator=(OtherInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const OtherInfo& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const OtherInfo* internal_default_instance() {
    return reinterpret_cast<const OtherInfo*>(
               &_OtherInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  void Swap(OtherInfo* other);
  friend void swap(OtherInfo& a, OtherInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline OtherInfo* New() const final {
    return CreateMaybeMessage<OtherInfo>(NULL);
  }

  OtherInfo* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<OtherInfo>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const OtherInfo& from);
  void MergeFrom(const OtherInfo& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(OtherInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .platform.PolarPosition pos = 6;
  bool has_pos() const;
  void clear_pos();
  static const int kPosFieldNumber = 6;
  private:
  const ::platform::PolarPosition& _internal_pos() const;
  public:
  const ::platform::PolarPosition& pos() const;
  ::platform::PolarPosition* release_pos();
  ::platform::PolarPosition* mutable_pos();
  void set_allocated_pos(::platform::PolarPosition* pos);

  // int32 player_ID = 1;
  void clear_player_id();
  static const int kPlayerIDFieldNumber = 1;
  ::google::protobuf::int32 player_id() const;
  void set_player_id(::google::protobuf::int32 value);

  // .platform.PlayerState state = 2;
  void clear_state();
  static const int kStateFieldNumber = 2;
  ::platform::PlayerState state() const;
  void set_state(::platform::PlayerState value);

  // double move_angle = 3;
  void clear_move_angle();
  static const int kMoveAngleFieldNumber = 3;
  double move_angle() const;
  void set_move_angle(double value);

  // double view_angle = 4;
  void clear_view_angle();
  static const int kViewAngleFieldNumber = 4;
  double view_angle() const;
  void set_view_angle(double value);

  // double move_speed = 5;
  void clear_move_speed();
  static const int kMoveSpeedFieldNumber = 5;
  double move_speed() const;
  void set_move_speed(double value);

  // @@protoc_insertion_point(class_scope:platform.OtherInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::platform::PolarPosition* pos_;
  ::google::protobuf::int32 player_id_;
  int state_;
  double move_angle_;
  double view_angle_;
  double move_speed_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_info_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Sound : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:platform.Sound) */ {
 public:
  Sound();
  virtual ~Sound();

  Sound(const Sound& from);

  inline Sound& operator=(const Sound& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Sound(Sound&& from) noexcept
    : Sound() {
    *this = ::std::move(from);
  }

  inline Sound& operator=(Sound&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Sound& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Sound* internal_default_instance() {
    return reinterpret_cast<const Sound*>(
               &_Sound_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  void Swap(Sound* other);
  friend void swap(Sound& a, Sound& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Sound* New() const final {
    return CreateMaybeMessage<Sound>(NULL);
  }

  Sound* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Sound>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Sound& from);
  void MergeFrom(const Sound& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Sound* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef Sound_SoundType SoundType;
  static const SoundType FOOTSTEP_SOUND =
    Sound_SoundType_FOOTSTEP_SOUND;
  static const SoundType GUN_SOUND =
    Sound_SoundType_GUN_SOUND;
  static const SoundType RADIO_VOICE =
    Sound_SoundType_RADIO_VOICE;
  static inline bool SoundType_IsValid(int value) {
    return Sound_SoundType_IsValid(value);
  }
  static const SoundType SoundType_MIN =
    Sound_SoundType_SoundType_MIN;
  static const SoundType SoundType_MAX =
    Sound_SoundType_SoundType_MAX;
  static const int SoundType_ARRAYSIZE =
    Sound_SoundType_SoundType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  SoundType_descriptor() {
    return Sound_SoundType_descriptor();
  }
  static inline const ::std::string& SoundType_Name(SoundType value) {
    return Sound_SoundType_Name(value);
  }
  static inline bool SoundType_Parse(const ::std::string& name,
      SoundType* value) {
    return Sound_SoundType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // int32 sender_ID = 1;
  void clear_sender_id();
  static const int kSenderIDFieldNumber = 1;
  ::google::protobuf::int32 sender_id() const;
  void set_sender_id(::google::protobuf::int32 value);

  // int32 time_delay = 2;
  void clear_time_delay();
  static const int kTimeDelayFieldNumber = 2;
  ::google::protobuf::int32 time_delay() const;
  void set_time_delay(::google::protobuf::int32 value);

  // .platform.Sound.SoundType type = 3;
  void clear_type();
  static const int kTypeFieldNumber = 3;
  ::platform::Sound_SoundType type() const;
  void set_type(::platform::Sound_SoundType value);

  // int32 parameter = 4;
  void clear_parameter();
  static const int kParameterFieldNumber = 4;
  ::google::protobuf::int32 parameter() const;
  void set_parameter(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:platform.Sound)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 sender_id_;
  ::google::protobuf::int32 time_delay_;
  int type_;
  ::google::protobuf::int32 parameter_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_info_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PlayerInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:platform.PlayerInfo) */ {
 public:
  PlayerInfo();
  virtual ~PlayerInfo();

  PlayerInfo(const PlayerInfo& from);

  inline PlayerInfo& operator=(const PlayerInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PlayerInfo(PlayerInfo&& from) noexcept
    : PlayerInfo() {
    *this = ::std::move(from);
  }

  inline PlayerInfo& operator=(PlayerInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PlayerInfo& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PlayerInfo* internal_default_instance() {
    return reinterpret_cast<const PlayerInfo*>(
               &_PlayerInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  void Swap(PlayerInfo* other);
  friend void swap(PlayerInfo& a, PlayerInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PlayerInfo* New() const final {
    return CreateMaybeMessage<PlayerInfo>(NULL);
  }

  PlayerInfo* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PlayerInfo>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PlayerInfo& from);
  void MergeFrom(const PlayerInfo& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PlayerInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .platform.Object objects = 2;
  int objects_size() const;
  void clear_objects();
  static const int kObjectsFieldNumber = 2;
  ::platform::Object* mutable_objects(int index);
  ::google::protobuf::RepeatedPtrField< ::platform::Object >*
      mutable_objects();
  const ::platform::Object& objects(int index) const;
  ::platform::Object* add_objects();
  const ::google::protobuf::RepeatedPtrField< ::platform::Object >&
      objects() const;

  // repeated .platform.Item items = 3;
  int items_size() const;
  void clear_items();
  static const int kItemsFieldNumber = 3;
  ::platform::Item* mutable_items(int index);
  ::google::protobuf::RepeatedPtrField< ::platform::Item >*
      mutable_items();
  const ::platform::Item& items(int index) const;
  ::platform::Item* add_items();
  const ::google::protobuf::RepeatedPtrField< ::platform::Item >&
      items() const;

  // repeated .platform.OtherInfo others = 4;
  int others_size() const;
  void clear_others();
  static const int kOthersFieldNumber = 4;
  ::platform::OtherInfo* mutable_others(int index);
  ::google::protobuf::RepeatedPtrField< ::platform::OtherInfo >*
      mutable_others();
  const ::platform::OtherInfo& others(int index) const;
  ::platform::OtherInfo* add_others();
  const ::google::protobuf::RepeatedPtrField< ::platform::OtherInfo >&
      others() const;

  // repeated .platform.Sound sounds = 5;
  int sounds_size() const;
  void clear_sounds();
  static const int kSoundsFieldNumber = 5;
  ::platform::Sound* mutable_sounds(int index);
  ::google::protobuf::RepeatedPtrField< ::platform::Sound >*
      mutable_sounds();
  const ::platform::Sound& sounds(int index) const;
  ::platform::Sound* add_sounds();
  const ::google::protobuf::RepeatedPtrField< ::platform::Sound >&
      sounds() const;

  // .platform.SelfInfo self_info = 1;
  bool has_self_info() const;
  void clear_self_info();
  static const int kSelfInfoFieldNumber = 1;
  private:
  const ::platform::SelfInfo& _internal_self_info() const;
  public:
  const ::platform::SelfInfo& self_info() const;
  ::platform::SelfInfo* release_self_info();
  ::platform::SelfInfo* mutable_self_info();
  void set_allocated_self_info(::platform::SelfInfo* self_info);

  // @@protoc_insertion_point(class_scope:platform.PlayerInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::platform::Object > objects_;
  ::google::protobuf::RepeatedPtrField< ::platform::Item > items_;
  ::google::protobuf::RepeatedPtrField< ::platform::OtherInfo > others_;
  ::google::protobuf::RepeatedPtrField< ::platform::Sound > sounds_;
  ::platform::SelfInfo* self_info_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_info_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TeamInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:platform.TeamInfo) */ {
 public:
  TeamInfo();
  virtual ~TeamInfo();

  TeamInfo(const TeamInfo& from);

  inline TeamInfo& operator=(const TeamInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TeamInfo(TeamInfo&& from) noexcept
    : TeamInfo() {
    *this = ::std::move(from);
  }

  inline TeamInfo& operator=(TeamInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TeamInfo& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TeamInfo* internal_default_instance() {
    return reinterpret_cast<const TeamInfo*>(
               &_TeamInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  void Swap(TeamInfo* other);
  friend void swap(TeamInfo& a, TeamInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TeamInfo* New() const final {
    return CreateMaybeMessage<TeamInfo>(NULL);
  }

  TeamInfo* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<TeamInfo>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const TeamInfo& from);
  void MergeFrom(const TeamInfo& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TeamInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .platform.PlayerInfo infos = 1;
  int infos_size() const;
  void clear_infos();
  static const int kInfosFieldNumber = 1;
  ::platform::PlayerInfo* mutable_infos(int index);
  ::google::protobuf::RepeatedPtrField< ::platform::PlayerInfo >*
      mutable_infos();
  const ::platform::PlayerInfo& infos(int index) const;
  ::platform::PlayerInfo* add_infos();
  const ::google::protobuf::RepeatedPtrField< ::platform::PlayerInfo >&
      infos() const;

  // @@protoc_insertion_point(class_scope:platform.TeamInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::platform::PlayerInfo > infos_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_info_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// PolarPosition

// double distance = 1;
inline void PolarPosition::clear_distance() {
  distance_ = 0;
}
inline double PolarPosition::distance() const {
  // @@protoc_insertion_point(field_get:platform.PolarPosition.distance)
  return distance_;
}
inline void PolarPosition::set_distance(double value) {
  
  distance_ = value;
  // @@protoc_insertion_point(field_set:platform.PolarPosition.distance)
}

// double angle = 2;
inline void PolarPosition::clear_angle() {
  angle_ = 0;
}
inline double PolarPosition::angle() const {
  // @@protoc_insertion_point(field_get:platform.PolarPosition.angle)
  return angle_;
}
inline void PolarPosition::set_angle(double value) {
  
  angle_ = value;
  // @@protoc_insertion_point(field_set:platform.PolarPosition.angle)
}

// -------------------------------------------------------------------

// XYPosition

// double x = 1;
inline void XYPosition::clear_x() {
  x_ = 0;
}
inline double XYPosition::x() const {
  // @@protoc_insertion_point(field_get:platform.XYPosition.x)
  return x_;
}
inline void XYPosition::set_x(double value) {
  
  x_ = value;
  // @@protoc_insertion_point(field_set:platform.XYPosition.x)
}

// double y = 2;
inline void XYPosition::clear_y() {
  y_ = 0;
}
inline double XYPosition::y() const {
  // @@protoc_insertion_point(field_get:platform.XYPosition.y)
  return y_;
}
inline void XYPosition::set_y(double value) {
  
  y_ = value;
  // @@protoc_insertion_point(field_set:platform.XYPosition.y)
}

// -------------------------------------------------------------------

// Object

// .platform.PolarPosition pos = 1;
inline bool Object::has_pos() const {
  return this != internal_default_instance() && pos_ != NULL;
}
inline void Object::clear_pos() {
  if (GetArenaNoVirtual() == NULL && pos_ != NULL) {
    delete pos_;
  }
  pos_ = NULL;
}
inline const ::platform::PolarPosition& Object::_internal_pos() const {
  return *pos_;
}
inline const ::platform::PolarPosition& Object::pos() const {
  const ::platform::PolarPosition* p = pos_;
  // @@protoc_insertion_point(field_get:platform.Object.pos)
  return p != NULL ? *p : *reinterpret_cast<const ::platform::PolarPosition*>(
      &::platform::_PolarPosition_default_instance_);
}
inline ::platform::PolarPosition* Object::release_pos() {
  // @@protoc_insertion_point(field_release:platform.Object.pos)
  
  ::platform::PolarPosition* temp = pos_;
  pos_ = NULL;
  return temp;
}
inline ::platform::PolarPosition* Object::mutable_pos() {
  
  if (pos_ == NULL) {
    auto* p = CreateMaybeMessage<::platform::PolarPosition>(GetArenaNoVirtual());
    pos_ = p;
  }
  // @@protoc_insertion_point(field_mutable:platform.Object.pos)
  return pos_;
}
inline void Object::set_allocated_pos(::platform::PolarPosition* pos) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete pos_;
  }
  if (pos) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      pos = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, pos, submessage_arena);
    }
    
  } else {
    
  }
  pos_ = pos;
  // @@protoc_insertion_point(field_set_allocated:platform.Object.pos)
}

// double radius = 2;
inline void Object::clear_radius() {
  radius_ = 0;
}
inline double Object::radius() const {
  // @@protoc_insertion_point(field_get:platform.Object.radius)
  return radius_;
}
inline void Object::set_radius(double value) {
  
  radius_ = value;
  // @@protoc_insertion_point(field_set:platform.Object.radius)
}

// .platform.Object.ObjectType type = 3;
inline void Object::clear_type() {
  type_ = 0;
}
inline ::platform::Object_ObjectType Object::type() const {
  // @@protoc_insertion_point(field_get:platform.Object.type)
  return static_cast< ::platform::Object_ObjectType >(type_);
}
inline void Object::set_type(::platform::Object_ObjectType value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:platform.Object.type)
}

// .platform.Object.ObjectShape shape = 4;
inline void Object::clear_shape() {
  shape_ = 0;
}
inline ::platform::Object_ObjectShape Object::shape() const {
  // @@protoc_insertion_point(field_get:platform.Object.shape)
  return static_cast< ::platform::Object_ObjectShape >(shape_);
}
inline void Object::set_shape(::platform::Object_ObjectShape value) {
  
  shape_ = value;
  // @@protoc_insertion_point(field_set:platform.Object.shape)
}

// -------------------------------------------------------------------

// Item

// int32 item_ID = 1;
inline void Item::clear_item_id() {
  item_id_ = 0;
}
inline ::google::protobuf::int32 Item::item_id() const {
  // @@protoc_insertion_point(field_get:platform.Item.item_ID)
  return item_id_;
}
inline void Item::set_item_id(::google::protobuf::int32 value) {
  
  item_id_ = value;
  // @@protoc_insertion_point(field_set:platform.Item.item_ID)
}

// .platform.Item.ItemType type = 2;
inline void Item::clear_type() {
  type_ = 0;
}
inline ::platform::Item_ItemType Item::type() const {
  // @@protoc_insertion_point(field_get:platform.Item.type)
  return static_cast< ::platform::Item_ItemType >(type_);
}
inline void Item::set_type(::platform::Item_ItemType value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:platform.Item.type)
}

// .platform.PolarPosition pos = 3;
inline bool Item::has_pos() const {
  return this != internal_default_instance() && pos_ != NULL;
}
inline void Item::clear_pos() {
  if (GetArenaNoVirtual() == NULL && pos_ != NULL) {
    delete pos_;
  }
  pos_ = NULL;
}
inline const ::platform::PolarPosition& Item::_internal_pos() const {
  return *pos_;
}
inline const ::platform::PolarPosition& Item::pos() const {
  const ::platform::PolarPosition* p = pos_;
  // @@protoc_insertion_point(field_get:platform.Item.pos)
  return p != NULL ? *p : *reinterpret_cast<const ::platform::PolarPosition*>(
      &::platform::_PolarPosition_default_instance_);
}
inline ::platform::PolarPosition* Item::release_pos() {
  // @@protoc_insertion_point(field_release:platform.Item.pos)
  
  ::platform::PolarPosition* temp = pos_;
  pos_ = NULL;
  return temp;
}
inline ::platform::PolarPosition* Item::mutable_pos() {
  
  if (pos_ == NULL) {
    auto* p = CreateMaybeMessage<::platform::PolarPosition>(GetArenaNoVirtual());
    pos_ = p;
  }
  // @@protoc_insertion_point(field_mutable:platform.Item.pos)
  return pos_;
}
inline void Item::set_allocated_pos(::platform::PolarPosition* pos) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete pos_;
  }
  if (pos) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      pos = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, pos, submessage_arena);
    }
    
  } else {
    
  }
  pos_ = pos;
  // @@protoc_insertion_point(field_set_allocated:platform.Item.pos)
}

// int32 durability = 4;
inline void Item::clear_durability() {
  durability_ = 0;
}
inline ::google::protobuf::int32 Item::durability() const {
  // @@protoc_insertion_point(field_get:platform.Item.durability)
  return durability_;
}
inline void Item::set_durability(::google::protobuf::int32 value) {
  
  durability_ = value;
  // @@protoc_insertion_point(field_set:platform.Item.durability)
}

// -------------------------------------------------------------------

// SelfInfo

// int32 heal_point = 1;
inline void SelfInfo::clear_heal_point() {
  heal_point_ = 0;
}
inline ::google::protobuf::int32 SelfInfo::heal_point() const {
  // @@protoc_insertion_point(field_get:platform.SelfInfo.heal_point)
  return heal_point_;
}
inline void SelfInfo::set_heal_point(::google::protobuf::int32 value) {
  
  heal_point_ = value;
  // @@protoc_insertion_point(field_set:platform.SelfInfo.heal_point)
}

// int32 heal_point_limit = 2;
inline void SelfInfo::clear_heal_point_limit() {
  heal_point_limit_ = 0;
}
inline ::google::protobuf::int32 SelfInfo::heal_point_limit() const {
  // @@protoc_insertion_point(field_get:platform.SelfInfo.heal_point_limit)
  return heal_point_limit_;
}
inline void SelfInfo::set_heal_point_limit(::google::protobuf::int32 value) {
  
  heal_point_limit_ = value;
  // @@protoc_insertion_point(field_set:platform.SelfInfo.heal_point_limit)
}

// double move_angle = 3;
inline void SelfInfo::clear_move_angle() {
  move_angle_ = 0;
}
inline double SelfInfo::move_angle() const {
  // @@protoc_insertion_point(field_get:platform.SelfInfo.move_angle)
  return move_angle_;
}
inline void SelfInfo::set_move_angle(double value) {
  
  move_angle_ = value;
  // @@protoc_insertion_point(field_set:platform.SelfInfo.move_angle)
}

// double view_angle = 4;
inline void SelfInfo::clear_view_angle() {
  view_angle_ = 0;
}
inline double SelfInfo::view_angle() const {
  // @@protoc_insertion_point(field_get:platform.SelfInfo.view_angle)
  return view_angle_;
}
inline void SelfInfo::set_view_angle(double value) {
  
  view_angle_ = value;
  // @@protoc_insertion_point(field_set:platform.SelfInfo.view_angle)
}

// double move_speed = 5;
inline void SelfInfo::clear_move_speed() {
  move_speed_ = 0;
}
inline double SelfInfo::move_speed() const {
  // @@protoc_insertion_point(field_get:platform.SelfInfo.move_speed)
  return move_speed_;
}
inline void SelfInfo::set_move_speed(double value) {
  
  move_speed_ = value;
  // @@protoc_insertion_point(field_set:platform.SelfInfo.move_speed)
}

// .platform.Vocation vocation = 6;
inline void SelfInfo::clear_vocation() {
  vocation_ = 0;
}
inline ::platform::Vocation SelfInfo::vocation() const {
  // @@protoc_insertion_point(field_get:platform.SelfInfo.vocation)
  return static_cast< ::platform::Vocation >(vocation_);
}
inline void SelfInfo::set_vocation(::platform::Vocation value) {
  
  vocation_ = value;
  // @@protoc_insertion_point(field_set:platform.SelfInfo.vocation)
}

// .platform.PlayerState state = 7;
inline void SelfInfo::clear_state() {
  state_ = 0;
}
inline ::platform::PlayerState SelfInfo::state() const {
  // @@protoc_insertion_point(field_get:platform.SelfInfo.state)
  return static_cast< ::platform::PlayerState >(state_);
}
inline void SelfInfo::set_state(::platform::PlayerState value) {
  
  state_ = value;
  // @@protoc_insertion_point(field_set:platform.SelfInfo.state)
}

// int32 state_cd = 8;
inline void SelfInfo::clear_state_cd() {
  state_cd_ = 0;
}
inline ::google::protobuf::int32 SelfInfo::state_cd() const {
  // @@protoc_insertion_point(field_get:platform.SelfInfo.state_cd)
  return state_cd_;
}
inline void SelfInfo::set_state_cd(::google::protobuf::int32 value) {
  
  state_cd_ = value;
  // @@protoc_insertion_point(field_set:platform.SelfInfo.state_cd)
}

// .platform.XYPosition pos = 9;
inline bool SelfInfo::has_pos() const {
  return this != internal_default_instance() && pos_ != NULL;
}
inline void SelfInfo::clear_pos() {
  if (GetArenaNoVirtual() == NULL && pos_ != NULL) {
    delete pos_;
  }
  pos_ = NULL;
}
inline const ::platform::XYPosition& SelfInfo::_internal_pos() const {
  return *pos_;
}
inline const ::platform::XYPosition& SelfInfo::pos() const {
  const ::platform::XYPosition* p = pos_;
  // @@protoc_insertion_point(field_get:platform.SelfInfo.pos)
  return p != NULL ? *p : *reinterpret_cast<const ::platform::XYPosition*>(
      &::platform::_XYPosition_default_instance_);
}
inline ::platform::XYPosition* SelfInfo::release_pos() {
  // @@protoc_insertion_point(field_release:platform.SelfInfo.pos)
  
  ::platform::XYPosition* temp = pos_;
  pos_ = NULL;
  return temp;
}
inline ::platform::XYPosition* SelfInfo::mutable_pos() {
  
  if (pos_ == NULL) {
    auto* p = CreateMaybeMessage<::platform::XYPosition>(GetArenaNoVirtual());
    pos_ = p;
  }
  // @@protoc_insertion_point(field_mutable:platform.SelfInfo.pos)
  return pos_;
}
inline void SelfInfo::set_allocated_pos(::platform::XYPosition* pos) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete pos_;
  }
  if (pos) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      pos = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, pos, submessage_arena);
    }
    
  } else {
    
  }
  pos_ = pos;
  // @@protoc_insertion_point(field_set_allocated:platform.SelfInfo.pos)
}

// repeated .platform.Item bag = 10;
inline int SelfInfo::bag_size() const {
  return bag_.size();
}
inline void SelfInfo::clear_bag() {
  bag_.Clear();
}
inline ::platform::Item* SelfInfo::mutable_bag(int index) {
  // @@protoc_insertion_point(field_mutable:platform.SelfInfo.bag)
  return bag_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::platform::Item >*
SelfInfo::mutable_bag() {
  // @@protoc_insertion_point(field_mutable_list:platform.SelfInfo.bag)
  return &bag_;
}
inline const ::platform::Item& SelfInfo::bag(int index) const {
  // @@protoc_insertion_point(field_get:platform.SelfInfo.bag)
  return bag_.Get(index);
}
inline ::platform::Item* SelfInfo::add_bag() {
  // @@protoc_insertion_point(field_add:platform.SelfInfo.bag)
  return bag_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::platform::Item >&
SelfInfo::bag() const {
  // @@protoc_insertion_point(field_list:platform.SelfInfo.bag)
  return bag_;
}

// -------------------------------------------------------------------

// OtherInfo

// int32 player_ID = 1;
inline void OtherInfo::clear_player_id() {
  player_id_ = 0;
}
inline ::google::protobuf::int32 OtherInfo::player_id() const {
  // @@protoc_insertion_point(field_get:platform.OtherInfo.player_ID)
  return player_id_;
}
inline void OtherInfo::set_player_id(::google::protobuf::int32 value) {
  
  player_id_ = value;
  // @@protoc_insertion_point(field_set:platform.OtherInfo.player_ID)
}

// .platform.PlayerState state = 2;
inline void OtherInfo::clear_state() {
  state_ = 0;
}
inline ::platform::PlayerState OtherInfo::state() const {
  // @@protoc_insertion_point(field_get:platform.OtherInfo.state)
  return static_cast< ::platform::PlayerState >(state_);
}
inline void OtherInfo::set_state(::platform::PlayerState value) {
  
  state_ = value;
  // @@protoc_insertion_point(field_set:platform.OtherInfo.state)
}

// double move_angle = 3;
inline void OtherInfo::clear_move_angle() {
  move_angle_ = 0;
}
inline double OtherInfo::move_angle() const {
  // @@protoc_insertion_point(field_get:platform.OtherInfo.move_angle)
  return move_angle_;
}
inline void OtherInfo::set_move_angle(double value) {
  
  move_angle_ = value;
  // @@protoc_insertion_point(field_set:platform.OtherInfo.move_angle)
}

// double view_angle = 4;
inline void OtherInfo::clear_view_angle() {
  view_angle_ = 0;
}
inline double OtherInfo::view_angle() const {
  // @@protoc_insertion_point(field_get:platform.OtherInfo.view_angle)
  return view_angle_;
}
inline void OtherInfo::set_view_angle(double value) {
  
  view_angle_ = value;
  // @@protoc_insertion_point(field_set:platform.OtherInfo.view_angle)
}

// double move_speed = 5;
inline void OtherInfo::clear_move_speed() {
  move_speed_ = 0;
}
inline double OtherInfo::move_speed() const {
  // @@protoc_insertion_point(field_get:platform.OtherInfo.move_speed)
  return move_speed_;
}
inline void OtherInfo::set_move_speed(double value) {
  
  move_speed_ = value;
  // @@protoc_insertion_point(field_set:platform.OtherInfo.move_speed)
}

// .platform.PolarPosition pos = 6;
inline bool OtherInfo::has_pos() const {
  return this != internal_default_instance() && pos_ != NULL;
}
inline void OtherInfo::clear_pos() {
  if (GetArenaNoVirtual() == NULL && pos_ != NULL) {
    delete pos_;
  }
  pos_ = NULL;
}
inline const ::platform::PolarPosition& OtherInfo::_internal_pos() const {
  return *pos_;
}
inline const ::platform::PolarPosition& OtherInfo::pos() const {
  const ::platform::PolarPosition* p = pos_;
  // @@protoc_insertion_point(field_get:platform.OtherInfo.pos)
  return p != NULL ? *p : *reinterpret_cast<const ::platform::PolarPosition*>(
      &::platform::_PolarPosition_default_instance_);
}
inline ::platform::PolarPosition* OtherInfo::release_pos() {
  // @@protoc_insertion_point(field_release:platform.OtherInfo.pos)
  
  ::platform::PolarPosition* temp = pos_;
  pos_ = NULL;
  return temp;
}
inline ::platform::PolarPosition* OtherInfo::mutable_pos() {
  
  if (pos_ == NULL) {
    auto* p = CreateMaybeMessage<::platform::PolarPosition>(GetArenaNoVirtual());
    pos_ = p;
  }
  // @@protoc_insertion_point(field_mutable:platform.OtherInfo.pos)
  return pos_;
}
inline void OtherInfo::set_allocated_pos(::platform::PolarPosition* pos) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete pos_;
  }
  if (pos) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      pos = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, pos, submessage_arena);
    }
    
  } else {
    
  }
  pos_ = pos;
  // @@protoc_insertion_point(field_set_allocated:platform.OtherInfo.pos)
}

// -------------------------------------------------------------------

// Sound

// int32 sender_ID = 1;
inline void Sound::clear_sender_id() {
  sender_id_ = 0;
}
inline ::google::protobuf::int32 Sound::sender_id() const {
  // @@protoc_insertion_point(field_get:platform.Sound.sender_ID)
  return sender_id_;
}
inline void Sound::set_sender_id(::google::protobuf::int32 value) {
  
  sender_id_ = value;
  // @@protoc_insertion_point(field_set:platform.Sound.sender_ID)
}

// int32 time_delay = 2;
inline void Sound::clear_time_delay() {
  time_delay_ = 0;
}
inline ::google::protobuf::int32 Sound::time_delay() const {
  // @@protoc_insertion_point(field_get:platform.Sound.time_delay)
  return time_delay_;
}
inline void Sound::set_time_delay(::google::protobuf::int32 value) {
  
  time_delay_ = value;
  // @@protoc_insertion_point(field_set:platform.Sound.time_delay)
}

// .platform.Sound.SoundType type = 3;
inline void Sound::clear_type() {
  type_ = 0;
}
inline ::platform::Sound_SoundType Sound::type() const {
  // @@protoc_insertion_point(field_get:platform.Sound.type)
  return static_cast< ::platform::Sound_SoundType >(type_);
}
inline void Sound::set_type(::platform::Sound_SoundType value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:platform.Sound.type)
}

// int32 parameter = 4;
inline void Sound::clear_parameter() {
  parameter_ = 0;
}
inline ::google::protobuf::int32 Sound::parameter() const {
  // @@protoc_insertion_point(field_get:platform.Sound.parameter)
  return parameter_;
}
inline void Sound::set_parameter(::google::protobuf::int32 value) {
  
  parameter_ = value;
  // @@protoc_insertion_point(field_set:platform.Sound.parameter)
}

// -------------------------------------------------------------------

// PlayerInfo

// .platform.SelfInfo self_info = 1;
inline bool PlayerInfo::has_self_info() const {
  return this != internal_default_instance() && self_info_ != NULL;
}
inline void PlayerInfo::clear_self_info() {
  if (GetArenaNoVirtual() == NULL && self_info_ != NULL) {
    delete self_info_;
  }
  self_info_ = NULL;
}
inline const ::platform::SelfInfo& PlayerInfo::_internal_self_info() const {
  return *self_info_;
}
inline const ::platform::SelfInfo& PlayerInfo::self_info() const {
  const ::platform::SelfInfo* p = self_info_;
  // @@protoc_insertion_point(field_get:platform.PlayerInfo.self_info)
  return p != NULL ? *p : *reinterpret_cast<const ::platform::SelfInfo*>(
      &::platform::_SelfInfo_default_instance_);
}
inline ::platform::SelfInfo* PlayerInfo::release_self_info() {
  // @@protoc_insertion_point(field_release:platform.PlayerInfo.self_info)
  
  ::platform::SelfInfo* temp = self_info_;
  self_info_ = NULL;
  return temp;
}
inline ::platform::SelfInfo* PlayerInfo::mutable_self_info() {
  
  if (self_info_ == NULL) {
    auto* p = CreateMaybeMessage<::platform::SelfInfo>(GetArenaNoVirtual());
    self_info_ = p;
  }
  // @@protoc_insertion_point(field_mutable:platform.PlayerInfo.self_info)
  return self_info_;
}
inline void PlayerInfo::set_allocated_self_info(::platform::SelfInfo* self_info) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete self_info_;
  }
  if (self_info) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      self_info = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, self_info, submessage_arena);
    }
    
  } else {
    
  }
  self_info_ = self_info;
  // @@protoc_insertion_point(field_set_allocated:platform.PlayerInfo.self_info)
}

// repeated .platform.Object objects = 2;
inline int PlayerInfo::objects_size() const {
  return objects_.size();
}
inline void PlayerInfo::clear_objects() {
  objects_.Clear();
}
inline ::platform::Object* PlayerInfo::mutable_objects(int index) {
  // @@protoc_insertion_point(field_mutable:platform.PlayerInfo.objects)
  return objects_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::platform::Object >*
PlayerInfo::mutable_objects() {
  // @@protoc_insertion_point(field_mutable_list:platform.PlayerInfo.objects)
  return &objects_;
}
inline const ::platform::Object& PlayerInfo::objects(int index) const {
  // @@protoc_insertion_point(field_get:platform.PlayerInfo.objects)
  return objects_.Get(index);
}
inline ::platform::Object* PlayerInfo::add_objects() {
  // @@protoc_insertion_point(field_add:platform.PlayerInfo.objects)
  return objects_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::platform::Object >&
PlayerInfo::objects() const {
  // @@protoc_insertion_point(field_list:platform.PlayerInfo.objects)
  return objects_;
}

// repeated .platform.Item items = 3;
inline int PlayerInfo::items_size() const {
  return items_.size();
}
inline void PlayerInfo::clear_items() {
  items_.Clear();
}
inline ::platform::Item* PlayerInfo::mutable_items(int index) {
  // @@protoc_insertion_point(field_mutable:platform.PlayerInfo.items)
  return items_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::platform::Item >*
PlayerInfo::mutable_items() {
  // @@protoc_insertion_point(field_mutable_list:platform.PlayerInfo.items)
  return &items_;
}
inline const ::platform::Item& PlayerInfo::items(int index) const {
  // @@protoc_insertion_point(field_get:platform.PlayerInfo.items)
  return items_.Get(index);
}
inline ::platform::Item* PlayerInfo::add_items() {
  // @@protoc_insertion_point(field_add:platform.PlayerInfo.items)
  return items_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::platform::Item >&
PlayerInfo::items() const {
  // @@protoc_insertion_point(field_list:platform.PlayerInfo.items)
  return items_;
}

// repeated .platform.OtherInfo others = 4;
inline int PlayerInfo::others_size() const {
  return others_.size();
}
inline void PlayerInfo::clear_others() {
  others_.Clear();
}
inline ::platform::OtherInfo* PlayerInfo::mutable_others(int index) {
  // @@protoc_insertion_point(field_mutable:platform.PlayerInfo.others)
  return others_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::platform::OtherInfo >*
PlayerInfo::mutable_others() {
  // @@protoc_insertion_point(field_mutable_list:platform.PlayerInfo.others)
  return &others_;
}
inline const ::platform::OtherInfo& PlayerInfo::others(int index) const {
  // @@protoc_insertion_point(field_get:platform.PlayerInfo.others)
  return others_.Get(index);
}
inline ::platform::OtherInfo* PlayerInfo::add_others() {
  // @@protoc_insertion_point(field_add:platform.PlayerInfo.others)
  return others_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::platform::OtherInfo >&
PlayerInfo::others() const {
  // @@protoc_insertion_point(field_list:platform.PlayerInfo.others)
  return others_;
}

// repeated .platform.Sound sounds = 5;
inline int PlayerInfo::sounds_size() const {
  return sounds_.size();
}
inline void PlayerInfo::clear_sounds() {
  sounds_.Clear();
}
inline ::platform::Sound* PlayerInfo::mutable_sounds(int index) {
  // @@protoc_insertion_point(field_mutable:platform.PlayerInfo.sounds)
  return sounds_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::platform::Sound >*
PlayerInfo::mutable_sounds() {
  // @@protoc_insertion_point(field_mutable_list:platform.PlayerInfo.sounds)
  return &sounds_;
}
inline const ::platform::Sound& PlayerInfo::sounds(int index) const {
  // @@protoc_insertion_point(field_get:platform.PlayerInfo.sounds)
  return sounds_.Get(index);
}
inline ::platform::Sound* PlayerInfo::add_sounds() {
  // @@protoc_insertion_point(field_add:platform.PlayerInfo.sounds)
  return sounds_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::platform::Sound >&
PlayerInfo::sounds() const {
  // @@protoc_insertion_point(field_list:platform.PlayerInfo.sounds)
  return sounds_;
}

// -------------------------------------------------------------------

// TeamInfo

// repeated .platform.PlayerInfo infos = 1;
inline int TeamInfo::infos_size() const {
  return infos_.size();
}
inline void TeamInfo::clear_infos() {
  infos_.Clear();
}
inline ::platform::PlayerInfo* TeamInfo::mutable_infos(int index) {
  // @@protoc_insertion_point(field_mutable:platform.TeamInfo.infos)
  return infos_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::platform::PlayerInfo >*
TeamInfo::mutable_infos() {
  // @@protoc_insertion_point(field_mutable_list:platform.TeamInfo.infos)
  return &infos_;
}
inline const ::platform::PlayerInfo& TeamInfo::infos(int index) const {
  // @@protoc_insertion_point(field_get:platform.TeamInfo.infos)
  return infos_.Get(index);
}
inline ::platform::PlayerInfo* TeamInfo::add_infos() {
  // @@protoc_insertion_point(field_add:platform.TeamInfo.infos)
  return infos_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::platform::PlayerInfo >&
TeamInfo::infos() const {
  // @@protoc_insertion_point(field_list:platform.TeamInfo.infos)
  return infos_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace platform

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::platform::Object_ObjectType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::platform::Object_ObjectType>() {
  return ::platform::Object_ObjectType_descriptor();
}
template <> struct is_proto_enum< ::platform::Object_ObjectShape> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::platform::Object_ObjectShape>() {
  return ::platform::Object_ObjectShape_descriptor();
}
template <> struct is_proto_enum< ::platform::Item_ItemType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::platform::Item_ItemType>() {
  return ::platform::Item_ItemType_descriptor();
}
template <> struct is_proto_enum< ::platform::Sound_SoundType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::platform::Sound_SoundType>() {
  return ::platform::Sound_SoundType_descriptor();
}
template <> struct is_proto_enum< ::platform::PlayerState> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::platform::PlayerState>() {
  return ::platform::PlayerState_descriptor();
}
template <> struct is_proto_enum< ::platform::Vocation> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::platform::Vocation>() {
  return ::platform::Vocation_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_info_2eproto
