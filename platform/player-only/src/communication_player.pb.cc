// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: proto/communication_player.proto

#include "communication_player.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

extern PROTOBUF_INTERNAL_EXPORT_proto_2fcommunication_5fplayer_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_PolarPosition_proto_2fcommunication_5fplayer_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_proto_2fcommunication_5fplayer_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Sound_proto_2fcommunication_5fplayer_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_proto_2fcommunication_5fplayer_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_XYPosition_proto_2fcommunication_5fplayer_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_proto_2fcommunication_5fplayer_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Item_proto_2fcommunication_5fplayer_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_proto_2fcommunication_5fplayer_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_OtherInfo_proto_2fcommunication_5fplayer_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_proto_2fcommunication_5fplayer_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_SelfInfo_proto_2fcommunication_5fplayer_2eproto;
namespace comm_player {
class PolarPositionDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PolarPosition> _instance;
} _PolarPosition_default_instance_;
class XYPositionDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<XYPosition> _instance;
} _XYPosition_default_instance_;
class ItemDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Item> _instance;
} _Item_default_instance_;
class SelfInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SelfInfo> _instance;
} _SelfInfo_default_instance_;
class OtherInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<OtherInfo> _instance;
} _OtherInfo_default_instance_;
class SoundDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Sound> _instance;
} _Sound_default_instance_;
class PlayerInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PlayerInfo> _instance;
} _PlayerInfo_default_instance_;
class CommandDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Command> _instance;
} _Command_default_instance_;
class RouteDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Route> _instance;
} _Route_default_instance_;
class ParachuteDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Parachute> _instance;
} _Parachute_default_instance_;
}  // namespace comm_player
static void InitDefaultsPolarPosition_proto_2fcommunication_5fplayer_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::comm_player::_PolarPosition_default_instance_;
    new (ptr) ::comm_player::PolarPosition();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::comm_player::PolarPosition::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_PolarPosition_proto_2fcommunication_5fplayer_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsPolarPosition_proto_2fcommunication_5fplayer_2eproto}, {}};

static void InitDefaultsXYPosition_proto_2fcommunication_5fplayer_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::comm_player::_XYPosition_default_instance_;
    new (ptr) ::comm_player::XYPosition();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::comm_player::XYPosition::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_XYPosition_proto_2fcommunication_5fplayer_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsXYPosition_proto_2fcommunication_5fplayer_2eproto}, {}};

static void InitDefaultsItem_proto_2fcommunication_5fplayer_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::comm_player::_Item_default_instance_;
    new (ptr) ::comm_player::Item();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::comm_player::Item::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Item_proto_2fcommunication_5fplayer_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsItem_proto_2fcommunication_5fplayer_2eproto}, {
      &scc_info_PolarPosition_proto_2fcommunication_5fplayer_2eproto.base,}};

static void InitDefaultsSelfInfo_proto_2fcommunication_5fplayer_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::comm_player::_SelfInfo_default_instance_;
    new (ptr) ::comm_player::SelfInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::comm_player::SelfInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_SelfInfo_proto_2fcommunication_5fplayer_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsSelfInfo_proto_2fcommunication_5fplayer_2eproto}, {
      &scc_info_XYPosition_proto_2fcommunication_5fplayer_2eproto.base,
      &scc_info_Item_proto_2fcommunication_5fplayer_2eproto.base,}};

static void InitDefaultsOtherInfo_proto_2fcommunication_5fplayer_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::comm_player::_OtherInfo_default_instance_;
    new (ptr) ::comm_player::OtherInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::comm_player::OtherInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_OtherInfo_proto_2fcommunication_5fplayer_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsOtherInfo_proto_2fcommunication_5fplayer_2eproto}, {
      &scc_info_PolarPosition_proto_2fcommunication_5fplayer_2eproto.base,}};

static void InitDefaultsSound_proto_2fcommunication_5fplayer_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::comm_player::_Sound_default_instance_;
    new (ptr) ::comm_player::Sound();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::comm_player::Sound::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Sound_proto_2fcommunication_5fplayer_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSound_proto_2fcommunication_5fplayer_2eproto}, {}};

static void InitDefaultsPlayerInfo_proto_2fcommunication_5fplayer_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::comm_player::_PlayerInfo_default_instance_;
    new (ptr) ::comm_player::PlayerInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::comm_player::PlayerInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<4> scc_info_PlayerInfo_proto_2fcommunication_5fplayer_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 4, InitDefaultsPlayerInfo_proto_2fcommunication_5fplayer_2eproto}, {
      &scc_info_SelfInfo_proto_2fcommunication_5fplayer_2eproto.base,
      &scc_info_Item_proto_2fcommunication_5fplayer_2eproto.base,
      &scc_info_OtherInfo_proto_2fcommunication_5fplayer_2eproto.base,
      &scc_info_Sound_proto_2fcommunication_5fplayer_2eproto.base,}};

static void InitDefaultsCommand_proto_2fcommunication_5fplayer_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::comm_player::_Command_default_instance_;
    new (ptr) ::comm_player::Command();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::comm_player::Command::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Command_proto_2fcommunication_5fplayer_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCommand_proto_2fcommunication_5fplayer_2eproto}, {}};

static void InitDefaultsRoute_proto_2fcommunication_5fplayer_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::comm_player::_Route_default_instance_;
    new (ptr) ::comm_player::Route();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::comm_player::Route::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Route_proto_2fcommunication_5fplayer_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsRoute_proto_2fcommunication_5fplayer_2eproto}, {
      &scc_info_XYPosition_proto_2fcommunication_5fplayer_2eproto.base,}};

static void InitDefaultsParachute_proto_2fcommunication_5fplayer_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::comm_player::_Parachute_default_instance_;
    new (ptr) ::comm_player::Parachute();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::comm_player::Parachute::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Parachute_proto_2fcommunication_5fplayer_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsParachute_proto_2fcommunication_5fplayer_2eproto}, {
      &scc_info_XYPosition_proto_2fcommunication_5fplayer_2eproto.base,}};

void InitDefaults_proto_2fcommunication_5fplayer_2eproto() {
  ::google::protobuf::internal::InitSCC(&scc_info_PolarPosition_proto_2fcommunication_5fplayer_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_XYPosition_proto_2fcommunication_5fplayer_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Item_proto_2fcommunication_5fplayer_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SelfInfo_proto_2fcommunication_5fplayer_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_OtherInfo_proto_2fcommunication_5fplayer_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Sound_proto_2fcommunication_5fplayer_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PlayerInfo_proto_2fcommunication_5fplayer_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Command_proto_2fcommunication_5fplayer_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Route_proto_2fcommunication_5fplayer_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Parachute_proto_2fcommunication_5fplayer_2eproto.base);
}

::google::protobuf::Metadata file_level_metadata_proto_2fcommunication_5fplayer_2eproto[10];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors_proto_2fcommunication_5fplayer_2eproto[1];
constexpr ::google::protobuf::ServiceDescriptor const** file_level_service_descriptors_proto_2fcommunication_5fplayer_2eproto = nullptr;

const ::google::protobuf::uint32 TableStruct_proto_2fcommunication_5fplayer_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::comm_player::PolarPosition, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::comm_player::PolarPosition, distance_),
  PROTOBUF_FIELD_OFFSET(::comm_player::PolarPosition, angle_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::comm_player::XYPosition, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::comm_player::XYPosition, x_),
  PROTOBUF_FIELD_OFFSET(::comm_player::XYPosition, y_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::comm_player::Item, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::comm_player::Item, item_id_),
  PROTOBUF_FIELD_OFFSET(::comm_player::Item, type_),
  PROTOBUF_FIELD_OFFSET(::comm_player::Item, pos_),
  PROTOBUF_FIELD_OFFSET(::comm_player::Item, durability_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::comm_player::SelfInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::comm_player::SelfInfo, heal_point_),
  PROTOBUF_FIELD_OFFSET(::comm_player::SelfInfo, heal_point_limit_),
  PROTOBUF_FIELD_OFFSET(::comm_player::SelfInfo, move_angle_),
  PROTOBUF_FIELD_OFFSET(::comm_player::SelfInfo, view_angle_),
  PROTOBUF_FIELD_OFFSET(::comm_player::SelfInfo, move_speed_),
  PROTOBUF_FIELD_OFFSET(::comm_player::SelfInfo, vocation_),
  PROTOBUF_FIELD_OFFSET(::comm_player::SelfInfo, status_),
  PROTOBUF_FIELD_OFFSET(::comm_player::SelfInfo, move_cd_),
  PROTOBUF_FIELD_OFFSET(::comm_player::SelfInfo, attack_cd_),
  PROTOBUF_FIELD_OFFSET(::comm_player::SelfInfo, pos_),
  PROTOBUF_FIELD_OFFSET(::comm_player::SelfInfo, bag_),
  PROTOBUF_FIELD_OFFSET(::comm_player::SelfInfo, view_width_),
  PROTOBUF_FIELD_OFFSET(::comm_player::SelfInfo, view_distance_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::comm_player::OtherInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::comm_player::OtherInfo, player_id_),
  PROTOBUF_FIELD_OFFSET(::comm_player::OtherInfo, status_),
  PROTOBUF_FIELD_OFFSET(::comm_player::OtherInfo, move_angle_),
  PROTOBUF_FIELD_OFFSET(::comm_player::OtherInfo, view_angle_),
  PROTOBUF_FIELD_OFFSET(::comm_player::OtherInfo, move_speed_),
  PROTOBUF_FIELD_OFFSET(::comm_player::OtherInfo, vocation_),
  PROTOBUF_FIELD_OFFSET(::comm_player::OtherInfo, pos_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::comm_player::Sound, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::comm_player::Sound, sender_),
  PROTOBUF_FIELD_OFFSET(::comm_player::Sound, delay_),
  PROTOBUF_FIELD_OFFSET(::comm_player::Sound, parameter_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::comm_player::PlayerInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::comm_player::PlayerInfo, player_id_),
  PROTOBUF_FIELD_OFFSET(::comm_player::PlayerInfo, self_),
  PROTOBUF_FIELD_OFFSET(::comm_player::PlayerInfo, landform_id_),
  PROTOBUF_FIELD_OFFSET(::comm_player::PlayerInfo, items_),
  PROTOBUF_FIELD_OFFSET(::comm_player::PlayerInfo, others_),
  PROTOBUF_FIELD_OFFSET(::comm_player::PlayerInfo, sounds_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::comm_player::Command, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::comm_player::Command, command_type_),
  PROTOBUF_FIELD_OFFSET(::comm_player::Command, target_id_),
  PROTOBUF_FIELD_OFFSET(::comm_player::Command, move_angle_),
  PROTOBUF_FIELD_OFFSET(::comm_player::Command, view_angle_),
  PROTOBUF_FIELD_OFFSET(::comm_player::Command, parameter_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::comm_player::Route, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::comm_player::Route, start_pos_),
  PROTOBUF_FIELD_OFFSET(::comm_player::Route, over_pos_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::comm_player::Parachute, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::comm_player::Parachute, role_),
  PROTOBUF_FIELD_OFFSET(::comm_player::Parachute, landing_point_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::comm_player::PolarPosition)},
  { 7, -1, sizeof(::comm_player::XYPosition)},
  { 14, -1, sizeof(::comm_player::Item)},
  { 23, -1, sizeof(::comm_player::SelfInfo)},
  { 41, -1, sizeof(::comm_player::OtherInfo)},
  { 53, -1, sizeof(::comm_player::Sound)},
  { 61, -1, sizeof(::comm_player::PlayerInfo)},
  { 72, -1, sizeof(::comm_player::Command)},
  { 82, -1, sizeof(::comm_player::Route)},
  { 89, -1, sizeof(::comm_player::Parachute)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::comm_player::_PolarPosition_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::comm_player::_XYPosition_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::comm_player::_Item_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::comm_player::_SelfInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::comm_player::_OtherInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::comm_player::_Sound_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::comm_player::_PlayerInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::comm_player::_Command_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::comm_player::_Route_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::comm_player::_Parachute_default_instance_),
};

::google::protobuf::internal::AssignDescriptorsTable assign_descriptors_table_proto_2fcommunication_5fplayer_2eproto = {
  {}, AddDescriptors_proto_2fcommunication_5fplayer_2eproto, "proto/communication_player.proto", schemas,
  file_default_instances, TableStruct_proto_2fcommunication_5fplayer_2eproto::offsets,
  file_level_metadata_proto_2fcommunication_5fplayer_2eproto, 10, file_level_enum_descriptors_proto_2fcommunication_5fplayer_2eproto, file_level_service_descriptors_proto_2fcommunication_5fplayer_2eproto,
};

const char descriptor_table_protodef_proto_2fcommunication_5fplayer_2eproto[] =
  "\n proto/communication_player.proto\022\013comm"
  "_player\"0\n\rPolarPosition\022\020\n\010distance\030\001 \001"
  "(\001\022\r\n\005angle\030\002 \001(\001\"\"\n\nXYPosition\022\t\n\001x\030\001 \001"
  "(\001\022\t\n\001y\030\002 \001(\001\"b\n\004Item\022\017\n\007item_ID\030\001 \001(\005\022\014"
  "\n\004type\030\002 \001(\005\022\'\n\003pos\030\003 \001(\0132\032.comm_player."
  "PolarPosition\022\022\n\ndurability\030\004 \001(\005\"\253\002\n\010Se"
  "lfInfo\022\022\n\nheal_point\030\001 \001(\001\022\030\n\020heal_point"
  "_limit\030\002 \001(\001\022\022\n\nmove_angle\030\003 \001(\001\022\022\n\nview"
  "_angle\030\004 \001(\001\022\022\n\nmove_speed\030\005 \001(\001\022\020\n\010voca"
  "tion\030\006 \001(\005\022\016\n\006status\030\007 \001(\005\022\017\n\007move_cd\030\010 "
  "\001(\005\022\021\n\tattack_cd\030\t \001(\005\022$\n\003pos\030\n \001(\0132\027.co"
  "mm_player.XYPosition\022\036\n\003bag\030\013 \003(\0132\021.comm"
  "_player.Item\022\022\n\nview_width\030\014 \001(\001\022\025\n\rview"
  "_distance\030\r \001(\001\"\245\001\n\tOtherInfo\022\021\n\tplayer_"
  "ID\030\001 \001(\005\022\016\n\006status\030\002 \001(\005\022\022\n\nmove_angle\030\003"
  " \001(\001\022\022\n\nview_angle\030\004 \001(\001\022\022\n\nmove_speed\030\005"
  " \001(\001\022\020\n\010vocation\030\006 \001(\005\022\'\n\003pos\030\007 \001(\0132\032.co"
  "mm_player.PolarPosition\"9\n\005Sound\022\016\n\006send"
  "er\030\001 \001(\005\022\r\n\005delay\030\002 \001(\005\022\021\n\tparameter\030\003 \001"
  "(\005\"\307\001\n\nPlayerInfo\022\021\n\tplayer_ID\030\006 \001(\005\022#\n\004"
  "self\030\001 \001(\0132\025.comm_player.SelfInfo\022\023\n\013lan"
  "dform_id\030\002 \003(\005\022 \n\005items\030\003 \003(\0132\021.comm_pla"
  "yer.Item\022&\n\006others\030\004 \003(\0132\026.comm_player.O"
  "therInfo\022\"\n\006sounds\030\005 \003(\0132\022.comm_player.S"
  "ound\"\207\001\n\007Command\022.\n\014command_type\030\001 \001(\0162\030"
  ".comm_player.CommandType\022\021\n\ttarget_ID\030\002 "
  "\001(\005\022\022\n\nmove_angle\030\003 \001(\001\022\022\n\nview_angle\030\004 "
  "\001(\001\022\021\n\tparameter\030\005 \001(\005\"^\n\005Route\022*\n\tstart"
  "_pos\030\001 \001(\0132\027.comm_player.XYPosition\022)\n\010o"
  "ver_pos\030\002 \001(\0132\027.comm_player.XYPosition\"I"
  "\n\tParachute\022\014\n\004role\030\001 \001(\005\022.\n\rlanding_poi"
  "nt\030\002 \001(\0132\027.comm_player.XYPosition*9\n\013Com"
  "mandType\022\010\n\004MOVE\020\000\022\t\n\005SHOOT\020\001\022\n\n\006PICKUP\020"
  "\002\022\t\n\005RADIO\020\003b\006proto3"
  ;
::google::protobuf::internal::DescriptorTable descriptor_table_proto_2fcommunication_5fplayer_2eproto = {
  false, InitDefaults_proto_2fcommunication_5fplayer_2eproto, 
  descriptor_table_protodef_proto_2fcommunication_5fplayer_2eproto,
  "proto/communication_player.proto", &assign_descriptors_table_proto_2fcommunication_5fplayer_2eproto, 1340,
};

void AddDescriptors_proto_2fcommunication_5fplayer_2eproto() {
  static constexpr ::google::protobuf::internal::InitFunc deps[1] =
  {
  };
 ::google::protobuf::internal::AddDescriptors(&descriptor_table_proto_2fcommunication_5fplayer_2eproto, deps, 0);
}

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_proto_2fcommunication_5fplayer_2eproto = []() { AddDescriptors_proto_2fcommunication_5fplayer_2eproto(); return true; }();
namespace comm_player {
const ::google::protobuf::EnumDescriptor* CommandType_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&assign_descriptors_table_proto_2fcommunication_5fplayer_2eproto);
  return file_level_enum_descriptors_proto_2fcommunication_5fplayer_2eproto[0];
}
bool CommandType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void PolarPosition::InitAsDefaultInstance() {
}
class PolarPosition::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PolarPosition::kDistanceFieldNumber;
const int PolarPosition::kAngleFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PolarPosition::PolarPosition()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:comm_player.PolarPosition)
}
PolarPosition::PolarPosition(const PolarPosition& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&distance_, &from.distance_,
    static_cast<size_t>(reinterpret_cast<char*>(&angle_) -
    reinterpret_cast<char*>(&distance_)) + sizeof(angle_));
  // @@protoc_insertion_point(copy_constructor:comm_player.PolarPosition)
}

void PolarPosition::SharedCtor() {
  ::memset(&distance_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&angle_) -
      reinterpret_cast<char*>(&distance_)) + sizeof(angle_));
}

PolarPosition::~PolarPosition() {
  // @@protoc_insertion_point(destructor:comm_player.PolarPosition)
  SharedDtor();
}

void PolarPosition::SharedDtor() {
}

void PolarPosition::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PolarPosition& PolarPosition::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_PolarPosition_proto_2fcommunication_5fplayer_2eproto.base);
  return *internal_default_instance();
}


void PolarPosition::Clear() {
// @@protoc_insertion_point(message_clear_start:comm_player.PolarPosition)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&distance_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&angle_) -
      reinterpret_cast<char*>(&distance_)) + sizeof(angle_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* PolarPosition::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<PolarPosition*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // double distance = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 9) goto handle_unusual;
        msg->set_distance(::google::protobuf::io::UnalignedLoad<double>(ptr));
        ptr += sizeof(double);
        break;
      }
      // double angle = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 17) goto handle_unusual;
        msg->set_angle(::google::protobuf::io::UnalignedLoad<double>(ptr));
        ptr += sizeof(double);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool PolarPosition::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:comm_player.PolarPosition)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // double distance = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (9 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &distance_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double angle = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (17 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &angle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:comm_player.PolarPosition)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:comm_player.PolarPosition)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void PolarPosition::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:comm_player.PolarPosition)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double distance = 1;
  if (this->distance() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->distance(), output);
  }

  // double angle = 2;
  if (this->angle() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->angle(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:comm_player.PolarPosition)
}

::google::protobuf::uint8* PolarPosition::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:comm_player.PolarPosition)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double distance = 1;
  if (this->distance() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->distance(), target);
  }

  // double angle = 2;
  if (this->angle() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->angle(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:comm_player.PolarPosition)
  return target;
}

size_t PolarPosition::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:comm_player.PolarPosition)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // double distance = 1;
  if (this->distance() != 0) {
    total_size += 1 + 8;
  }

  // double angle = 2;
  if (this->angle() != 0) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PolarPosition::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:comm_player.PolarPosition)
  GOOGLE_DCHECK_NE(&from, this);
  const PolarPosition* source =
      ::google::protobuf::DynamicCastToGenerated<PolarPosition>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:comm_player.PolarPosition)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:comm_player.PolarPosition)
    MergeFrom(*source);
  }
}

void PolarPosition::MergeFrom(const PolarPosition& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:comm_player.PolarPosition)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.distance() != 0) {
    set_distance(from.distance());
  }
  if (from.angle() != 0) {
    set_angle(from.angle());
  }
}

void PolarPosition::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:comm_player.PolarPosition)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PolarPosition::CopyFrom(const PolarPosition& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:comm_player.PolarPosition)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PolarPosition::IsInitialized() const {
  return true;
}

void PolarPosition::Swap(PolarPosition* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PolarPosition::InternalSwap(PolarPosition* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(distance_, other->distance_);
  swap(angle_, other->angle_);
}

::google::protobuf::Metadata PolarPosition::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_proto_2fcommunication_5fplayer_2eproto);
  return ::file_level_metadata_proto_2fcommunication_5fplayer_2eproto[kIndexInFileMessages];
}


// ===================================================================

void XYPosition::InitAsDefaultInstance() {
}
class XYPosition::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int XYPosition::kXFieldNumber;
const int XYPosition::kYFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

XYPosition::XYPosition()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:comm_player.XYPosition)
}
XYPosition::XYPosition(const XYPosition& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&x_, &from.x_,
    static_cast<size_t>(reinterpret_cast<char*>(&y_) -
    reinterpret_cast<char*>(&x_)) + sizeof(y_));
  // @@protoc_insertion_point(copy_constructor:comm_player.XYPosition)
}

void XYPosition::SharedCtor() {
  ::memset(&x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&y_) -
      reinterpret_cast<char*>(&x_)) + sizeof(y_));
}

XYPosition::~XYPosition() {
  // @@protoc_insertion_point(destructor:comm_player.XYPosition)
  SharedDtor();
}

void XYPosition::SharedDtor() {
}

void XYPosition::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const XYPosition& XYPosition::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_XYPosition_proto_2fcommunication_5fplayer_2eproto.base);
  return *internal_default_instance();
}


void XYPosition::Clear() {
// @@protoc_insertion_point(message_clear_start:comm_player.XYPosition)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&y_) -
      reinterpret_cast<char*>(&x_)) + sizeof(y_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* XYPosition::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<XYPosition*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // double x = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 9) goto handle_unusual;
        msg->set_x(::google::protobuf::io::UnalignedLoad<double>(ptr));
        ptr += sizeof(double);
        break;
      }
      // double y = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 17) goto handle_unusual;
        msg->set_y(::google::protobuf::io::UnalignedLoad<double>(ptr));
        ptr += sizeof(double);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool XYPosition::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:comm_player.XYPosition)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // double x = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (9 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double y = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (17 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &y_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:comm_player.XYPosition)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:comm_player.XYPosition)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void XYPosition::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:comm_player.XYPosition)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double x = 1;
  if (this->x() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->x(), output);
  }

  // double y = 2;
  if (this->y() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->y(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:comm_player.XYPosition)
}

::google::protobuf::uint8* XYPosition::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:comm_player.XYPosition)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double x = 1;
  if (this->x() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->x(), target);
  }

  // double y = 2;
  if (this->y() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->y(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:comm_player.XYPosition)
  return target;
}

size_t XYPosition::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:comm_player.XYPosition)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // double x = 1;
  if (this->x() != 0) {
    total_size += 1 + 8;
  }

  // double y = 2;
  if (this->y() != 0) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void XYPosition::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:comm_player.XYPosition)
  GOOGLE_DCHECK_NE(&from, this);
  const XYPosition* source =
      ::google::protobuf::DynamicCastToGenerated<XYPosition>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:comm_player.XYPosition)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:comm_player.XYPosition)
    MergeFrom(*source);
  }
}

void XYPosition::MergeFrom(const XYPosition& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:comm_player.XYPosition)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.x() != 0) {
    set_x(from.x());
  }
  if (from.y() != 0) {
    set_y(from.y());
  }
}

void XYPosition::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:comm_player.XYPosition)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void XYPosition::CopyFrom(const XYPosition& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:comm_player.XYPosition)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool XYPosition::IsInitialized() const {
  return true;
}

void XYPosition::Swap(XYPosition* other) {
  if (other == this) return;
  InternalSwap(other);
}
void XYPosition::InternalSwap(XYPosition* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(x_, other->x_);
  swap(y_, other->y_);
}

::google::protobuf::Metadata XYPosition::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_proto_2fcommunication_5fplayer_2eproto);
  return ::file_level_metadata_proto_2fcommunication_5fplayer_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Item::InitAsDefaultInstance() {
  ::comm_player::_Item_default_instance_._instance.get_mutable()->pos_ = const_cast< ::comm_player::PolarPosition*>(
      ::comm_player::PolarPosition::internal_default_instance());
}
class Item::HasBitSetters {
 public:
  static const ::comm_player::PolarPosition& pos(const Item* msg);
};

const ::comm_player::PolarPosition&
Item::HasBitSetters::pos(const Item* msg) {
  return *msg->pos_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Item::kItemIDFieldNumber;
const int Item::kTypeFieldNumber;
const int Item::kPosFieldNumber;
const int Item::kDurabilityFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Item::Item()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:comm_player.Item)
}
Item::Item(const Item& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_pos()) {
    pos_ = new ::comm_player::PolarPosition(*from.pos_);
  } else {
    pos_ = nullptr;
  }
  ::memcpy(&item_id_, &from.item_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&durability_) -
    reinterpret_cast<char*>(&item_id_)) + sizeof(durability_));
  // @@protoc_insertion_point(copy_constructor:comm_player.Item)
}

void Item::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_Item_proto_2fcommunication_5fplayer_2eproto.base);
  ::memset(&pos_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&durability_) -
      reinterpret_cast<char*>(&pos_)) + sizeof(durability_));
}

Item::~Item() {
  // @@protoc_insertion_point(destructor:comm_player.Item)
  SharedDtor();
}

void Item::SharedDtor() {
  if (this != internal_default_instance()) delete pos_;
}

void Item::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Item& Item::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Item_proto_2fcommunication_5fplayer_2eproto.base);
  return *internal_default_instance();
}


void Item::Clear() {
// @@protoc_insertion_point(message_clear_start:comm_player.Item)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && pos_ != nullptr) {
    delete pos_;
  }
  pos_ = nullptr;
  ::memset(&item_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&durability_) -
      reinterpret_cast<char*>(&item_id_)) + sizeof(durability_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Item::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Item*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // int32 item_ID = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_item_id(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // int32 type = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_type(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // .comm_player.PolarPosition pos = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::comm_player::PolarPosition::_InternalParse;
        object = msg->mutable_pos();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // int32 durability = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 32) goto handle_unusual;
        msg->set_durability(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Item::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:comm_player.Item)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 item_ID = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &item_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .comm_player.PolarPosition pos = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_pos()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 durability = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (32 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &durability_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:comm_player.Item)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:comm_player.Item)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Item::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:comm_player.Item)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 item_ID = 1;
  if (this->item_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->item_id(), output);
  }

  // int32 type = 2;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->type(), output);
  }

  // .comm_player.PolarPosition pos = 3;
  if (this->has_pos()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, HasBitSetters::pos(this), output);
  }

  // int32 durability = 4;
  if (this->durability() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->durability(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:comm_player.Item)
}

::google::protobuf::uint8* Item::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:comm_player.Item)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 item_ID = 1;
  if (this->item_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->item_id(), target);
  }

  // int32 type = 2;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->type(), target);
  }

  // .comm_player.PolarPosition pos = 3;
  if (this->has_pos()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, HasBitSetters::pos(this), target);
  }

  // int32 durability = 4;
  if (this->durability() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->durability(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:comm_player.Item)
  return target;
}

size_t Item::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:comm_player.Item)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .comm_player.PolarPosition pos = 3;
  if (this->has_pos()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *pos_);
  }

  // int32 item_ID = 1;
  if (this->item_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->item_id());
  }

  // int32 type = 2;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->type());
  }

  // int32 durability = 4;
  if (this->durability() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->durability());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Item::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:comm_player.Item)
  GOOGLE_DCHECK_NE(&from, this);
  const Item* source =
      ::google::protobuf::DynamicCastToGenerated<Item>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:comm_player.Item)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:comm_player.Item)
    MergeFrom(*source);
  }
}

void Item::MergeFrom(const Item& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:comm_player.Item)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_pos()) {
    mutable_pos()->::comm_player::PolarPosition::MergeFrom(from.pos());
  }
  if (from.item_id() != 0) {
    set_item_id(from.item_id());
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
  if (from.durability() != 0) {
    set_durability(from.durability());
  }
}

void Item::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:comm_player.Item)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Item::CopyFrom(const Item& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:comm_player.Item)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Item::IsInitialized() const {
  return true;
}

void Item::Swap(Item* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Item::InternalSwap(Item* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(pos_, other->pos_);
  swap(item_id_, other->item_id_);
  swap(type_, other->type_);
  swap(durability_, other->durability_);
}

::google::protobuf::Metadata Item::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_proto_2fcommunication_5fplayer_2eproto);
  return ::file_level_metadata_proto_2fcommunication_5fplayer_2eproto[kIndexInFileMessages];
}


// ===================================================================

void SelfInfo::InitAsDefaultInstance() {
  ::comm_player::_SelfInfo_default_instance_._instance.get_mutable()->pos_ = const_cast< ::comm_player::XYPosition*>(
      ::comm_player::XYPosition::internal_default_instance());
}
class SelfInfo::HasBitSetters {
 public:
  static const ::comm_player::XYPosition& pos(const SelfInfo* msg);
};

const ::comm_player::XYPosition&
SelfInfo::HasBitSetters::pos(const SelfInfo* msg) {
  return *msg->pos_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SelfInfo::kHealPointFieldNumber;
const int SelfInfo::kHealPointLimitFieldNumber;
const int SelfInfo::kMoveAngleFieldNumber;
const int SelfInfo::kViewAngleFieldNumber;
const int SelfInfo::kMoveSpeedFieldNumber;
const int SelfInfo::kVocationFieldNumber;
const int SelfInfo::kStatusFieldNumber;
const int SelfInfo::kMoveCdFieldNumber;
const int SelfInfo::kAttackCdFieldNumber;
const int SelfInfo::kPosFieldNumber;
const int SelfInfo::kBagFieldNumber;
const int SelfInfo::kViewWidthFieldNumber;
const int SelfInfo::kViewDistanceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SelfInfo::SelfInfo()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:comm_player.SelfInfo)
}
SelfInfo::SelfInfo(const SelfInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      bag_(from.bag_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_pos()) {
    pos_ = new ::comm_player::XYPosition(*from.pos_);
  } else {
    pos_ = nullptr;
  }
  ::memcpy(&heal_point_, &from.heal_point_,
    static_cast<size_t>(reinterpret_cast<char*>(&view_distance_) -
    reinterpret_cast<char*>(&heal_point_)) + sizeof(view_distance_));
  // @@protoc_insertion_point(copy_constructor:comm_player.SelfInfo)
}

void SelfInfo::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_SelfInfo_proto_2fcommunication_5fplayer_2eproto.base);
  ::memset(&pos_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&view_distance_) -
      reinterpret_cast<char*>(&pos_)) + sizeof(view_distance_));
}

SelfInfo::~SelfInfo() {
  // @@protoc_insertion_point(destructor:comm_player.SelfInfo)
  SharedDtor();
}

void SelfInfo::SharedDtor() {
  if (this != internal_default_instance()) delete pos_;
}

void SelfInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SelfInfo& SelfInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_SelfInfo_proto_2fcommunication_5fplayer_2eproto.base);
  return *internal_default_instance();
}


void SelfInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:comm_player.SelfInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  bag_.Clear();
  if (GetArenaNoVirtual() == nullptr && pos_ != nullptr) {
    delete pos_;
  }
  pos_ = nullptr;
  ::memset(&heal_point_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&view_distance_) -
      reinterpret_cast<char*>(&heal_point_)) + sizeof(view_distance_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* SelfInfo::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<SelfInfo*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // double heal_point = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 9) goto handle_unusual;
        msg->set_heal_point(::google::protobuf::io::UnalignedLoad<double>(ptr));
        ptr += sizeof(double);
        break;
      }
      // double heal_point_limit = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 17) goto handle_unusual;
        msg->set_heal_point_limit(::google::protobuf::io::UnalignedLoad<double>(ptr));
        ptr += sizeof(double);
        break;
      }
      // double move_angle = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 25) goto handle_unusual;
        msg->set_move_angle(::google::protobuf::io::UnalignedLoad<double>(ptr));
        ptr += sizeof(double);
        break;
      }
      // double view_angle = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 33) goto handle_unusual;
        msg->set_view_angle(::google::protobuf::io::UnalignedLoad<double>(ptr));
        ptr += sizeof(double);
        break;
      }
      // double move_speed = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 41) goto handle_unusual;
        msg->set_move_speed(::google::protobuf::io::UnalignedLoad<double>(ptr));
        ptr += sizeof(double);
        break;
      }
      // int32 vocation = 6;
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) != 48) goto handle_unusual;
        msg->set_vocation(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // int32 status = 7;
      case 7: {
        if (static_cast<::google::protobuf::uint8>(tag) != 56) goto handle_unusual;
        msg->set_status(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // int32 move_cd = 8;
      case 8: {
        if (static_cast<::google::protobuf::uint8>(tag) != 64) goto handle_unusual;
        msg->set_move_cd(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // int32 attack_cd = 9;
      case 9: {
        if (static_cast<::google::protobuf::uint8>(tag) != 72) goto handle_unusual;
        msg->set_attack_cd(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // .comm_player.XYPosition pos = 10;
      case 10: {
        if (static_cast<::google::protobuf::uint8>(tag) != 82) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::comm_player::XYPosition::_InternalParse;
        object = msg->mutable_pos();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // repeated .comm_player.Item bag = 11;
      case 11: {
        if (static_cast<::google::protobuf::uint8>(tag) != 90) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::comm_player::Item::_InternalParse;
          object = msg->add_bag();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 90 && (ptr += 1));
        break;
      }
      // double view_width = 12;
      case 12: {
        if (static_cast<::google::protobuf::uint8>(tag) != 97) goto handle_unusual;
        msg->set_view_width(::google::protobuf::io::UnalignedLoad<double>(ptr));
        ptr += sizeof(double);
        break;
      }
      // double view_distance = 13;
      case 13: {
        if (static_cast<::google::protobuf::uint8>(tag) != 105) goto handle_unusual;
        msg->set_view_distance(::google::protobuf::io::UnalignedLoad<double>(ptr));
        ptr += sizeof(double);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool SelfInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:comm_player.SelfInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // double heal_point = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (9 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &heal_point_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double heal_point_limit = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (17 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &heal_point_limit_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double move_angle = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (25 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &move_angle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double view_angle = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (33 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &view_angle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double move_speed = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (41 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &move_speed_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 vocation = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (48 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &vocation_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 status = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (56 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &status_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 move_cd = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (64 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &move_cd_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 attack_cd = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (72 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &attack_cd_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .comm_player.XYPosition pos = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (82 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_pos()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .comm_player.Item bag = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (90 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_bag()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double view_width = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (97 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &view_width_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double view_distance = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (105 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &view_distance_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:comm_player.SelfInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:comm_player.SelfInfo)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void SelfInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:comm_player.SelfInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double heal_point = 1;
  if (this->heal_point() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->heal_point(), output);
  }

  // double heal_point_limit = 2;
  if (this->heal_point_limit() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->heal_point_limit(), output);
  }

  // double move_angle = 3;
  if (this->move_angle() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->move_angle(), output);
  }

  // double view_angle = 4;
  if (this->view_angle() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(4, this->view_angle(), output);
  }

  // double move_speed = 5;
  if (this->move_speed() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(5, this->move_speed(), output);
  }

  // int32 vocation = 6;
  if (this->vocation() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->vocation(), output);
  }

  // int32 status = 7;
  if (this->status() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->status(), output);
  }

  // int32 move_cd = 8;
  if (this->move_cd() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->move_cd(), output);
  }

  // int32 attack_cd = 9;
  if (this->attack_cd() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->attack_cd(), output);
  }

  // .comm_player.XYPosition pos = 10;
  if (this->has_pos()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, HasBitSetters::pos(this), output);
  }

  // repeated .comm_player.Item bag = 11;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->bag_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11,
      this->bag(static_cast<int>(i)),
      output);
  }

  // double view_width = 12;
  if (this->view_width() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(12, this->view_width(), output);
  }

  // double view_distance = 13;
  if (this->view_distance() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(13, this->view_distance(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:comm_player.SelfInfo)
}

::google::protobuf::uint8* SelfInfo::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:comm_player.SelfInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double heal_point = 1;
  if (this->heal_point() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->heal_point(), target);
  }

  // double heal_point_limit = 2;
  if (this->heal_point_limit() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->heal_point_limit(), target);
  }

  // double move_angle = 3;
  if (this->move_angle() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->move_angle(), target);
  }

  // double view_angle = 4;
  if (this->view_angle() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(4, this->view_angle(), target);
  }

  // double move_speed = 5;
  if (this->move_speed() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(5, this->move_speed(), target);
  }

  // int32 vocation = 6;
  if (this->vocation() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->vocation(), target);
  }

  // int32 status = 7;
  if (this->status() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->status(), target);
  }

  // int32 move_cd = 8;
  if (this->move_cd() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->move_cd(), target);
  }

  // int32 attack_cd = 9;
  if (this->attack_cd() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->attack_cd(), target);
  }

  // .comm_player.XYPosition pos = 10;
  if (this->has_pos()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        10, HasBitSetters::pos(this), target);
  }

  // repeated .comm_player.Item bag = 11;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->bag_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        11, this->bag(static_cast<int>(i)), target);
  }

  // double view_width = 12;
  if (this->view_width() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(12, this->view_width(), target);
  }

  // double view_distance = 13;
  if (this->view_distance() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(13, this->view_distance(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:comm_player.SelfInfo)
  return target;
}

size_t SelfInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:comm_player.SelfInfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .comm_player.Item bag = 11;
  {
    unsigned int count = static_cast<unsigned int>(this->bag_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->bag(static_cast<int>(i)));
    }
  }

  // .comm_player.XYPosition pos = 10;
  if (this->has_pos()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *pos_);
  }

  // double heal_point = 1;
  if (this->heal_point() != 0) {
    total_size += 1 + 8;
  }

  // double heal_point_limit = 2;
  if (this->heal_point_limit() != 0) {
    total_size += 1 + 8;
  }

  // double move_angle = 3;
  if (this->move_angle() != 0) {
    total_size += 1 + 8;
  }

  // double view_angle = 4;
  if (this->view_angle() != 0) {
    total_size += 1 + 8;
  }

  // double move_speed = 5;
  if (this->move_speed() != 0) {
    total_size += 1 + 8;
  }

  // int32 vocation = 6;
  if (this->vocation() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->vocation());
  }

  // int32 status = 7;
  if (this->status() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->status());
  }

  // int32 move_cd = 8;
  if (this->move_cd() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->move_cd());
  }

  // int32 attack_cd = 9;
  if (this->attack_cd() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->attack_cd());
  }

  // double view_width = 12;
  if (this->view_width() != 0) {
    total_size += 1 + 8;
  }

  // double view_distance = 13;
  if (this->view_distance() != 0) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SelfInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:comm_player.SelfInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const SelfInfo* source =
      ::google::protobuf::DynamicCastToGenerated<SelfInfo>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:comm_player.SelfInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:comm_player.SelfInfo)
    MergeFrom(*source);
  }
}

void SelfInfo::MergeFrom(const SelfInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:comm_player.SelfInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  bag_.MergeFrom(from.bag_);
  if (from.has_pos()) {
    mutable_pos()->::comm_player::XYPosition::MergeFrom(from.pos());
  }
  if (from.heal_point() != 0) {
    set_heal_point(from.heal_point());
  }
  if (from.heal_point_limit() != 0) {
    set_heal_point_limit(from.heal_point_limit());
  }
  if (from.move_angle() != 0) {
    set_move_angle(from.move_angle());
  }
  if (from.view_angle() != 0) {
    set_view_angle(from.view_angle());
  }
  if (from.move_speed() != 0) {
    set_move_speed(from.move_speed());
  }
  if (from.vocation() != 0) {
    set_vocation(from.vocation());
  }
  if (from.status() != 0) {
    set_status(from.status());
  }
  if (from.move_cd() != 0) {
    set_move_cd(from.move_cd());
  }
  if (from.attack_cd() != 0) {
    set_attack_cd(from.attack_cd());
  }
  if (from.view_width() != 0) {
    set_view_width(from.view_width());
  }
  if (from.view_distance() != 0) {
    set_view_distance(from.view_distance());
  }
}

void SelfInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:comm_player.SelfInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SelfInfo::CopyFrom(const SelfInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:comm_player.SelfInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SelfInfo::IsInitialized() const {
  return true;
}

void SelfInfo::Swap(SelfInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SelfInfo::InternalSwap(SelfInfo* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  CastToBase(&bag_)->InternalSwap(CastToBase(&other->bag_));
  swap(pos_, other->pos_);
  swap(heal_point_, other->heal_point_);
  swap(heal_point_limit_, other->heal_point_limit_);
  swap(move_angle_, other->move_angle_);
  swap(view_angle_, other->view_angle_);
  swap(move_speed_, other->move_speed_);
  swap(vocation_, other->vocation_);
  swap(status_, other->status_);
  swap(move_cd_, other->move_cd_);
  swap(attack_cd_, other->attack_cd_);
  swap(view_width_, other->view_width_);
  swap(view_distance_, other->view_distance_);
}

::google::protobuf::Metadata SelfInfo::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_proto_2fcommunication_5fplayer_2eproto);
  return ::file_level_metadata_proto_2fcommunication_5fplayer_2eproto[kIndexInFileMessages];
}


// ===================================================================

void OtherInfo::InitAsDefaultInstance() {
  ::comm_player::_OtherInfo_default_instance_._instance.get_mutable()->pos_ = const_cast< ::comm_player::PolarPosition*>(
      ::comm_player::PolarPosition::internal_default_instance());
}
class OtherInfo::HasBitSetters {
 public:
  static const ::comm_player::PolarPosition& pos(const OtherInfo* msg);
};

const ::comm_player::PolarPosition&
OtherInfo::HasBitSetters::pos(const OtherInfo* msg) {
  return *msg->pos_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OtherInfo::kPlayerIDFieldNumber;
const int OtherInfo::kStatusFieldNumber;
const int OtherInfo::kMoveAngleFieldNumber;
const int OtherInfo::kViewAngleFieldNumber;
const int OtherInfo::kMoveSpeedFieldNumber;
const int OtherInfo::kVocationFieldNumber;
const int OtherInfo::kPosFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OtherInfo::OtherInfo()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:comm_player.OtherInfo)
}
OtherInfo::OtherInfo(const OtherInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_pos()) {
    pos_ = new ::comm_player::PolarPosition(*from.pos_);
  } else {
    pos_ = nullptr;
  }
  ::memcpy(&player_id_, &from.player_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&vocation_) -
    reinterpret_cast<char*>(&player_id_)) + sizeof(vocation_));
  // @@protoc_insertion_point(copy_constructor:comm_player.OtherInfo)
}

void OtherInfo::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_OtherInfo_proto_2fcommunication_5fplayer_2eproto.base);
  ::memset(&pos_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&vocation_) -
      reinterpret_cast<char*>(&pos_)) + sizeof(vocation_));
}

OtherInfo::~OtherInfo() {
  // @@protoc_insertion_point(destructor:comm_player.OtherInfo)
  SharedDtor();
}

void OtherInfo::SharedDtor() {
  if (this != internal_default_instance()) delete pos_;
}

void OtherInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const OtherInfo& OtherInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_OtherInfo_proto_2fcommunication_5fplayer_2eproto.base);
  return *internal_default_instance();
}


void OtherInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:comm_player.OtherInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && pos_ != nullptr) {
    delete pos_;
  }
  pos_ = nullptr;
  ::memset(&player_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&vocation_) -
      reinterpret_cast<char*>(&player_id_)) + sizeof(vocation_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* OtherInfo::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<OtherInfo*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // int32 player_ID = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_player_id(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // int32 status = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_status(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // double move_angle = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 25) goto handle_unusual;
        msg->set_move_angle(::google::protobuf::io::UnalignedLoad<double>(ptr));
        ptr += sizeof(double);
        break;
      }
      // double view_angle = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 33) goto handle_unusual;
        msg->set_view_angle(::google::protobuf::io::UnalignedLoad<double>(ptr));
        ptr += sizeof(double);
        break;
      }
      // double move_speed = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 41) goto handle_unusual;
        msg->set_move_speed(::google::protobuf::io::UnalignedLoad<double>(ptr));
        ptr += sizeof(double);
        break;
      }
      // int32 vocation = 6;
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) != 48) goto handle_unusual;
        msg->set_vocation(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // .comm_player.PolarPosition pos = 7;
      case 7: {
        if (static_cast<::google::protobuf::uint8>(tag) != 58) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::comm_player::PolarPosition::_InternalParse;
        object = msg->mutable_pos();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool OtherInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:comm_player.OtherInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 player_ID = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &player_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 status = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &status_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double move_angle = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (25 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &move_angle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double view_angle = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (33 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &view_angle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double move_speed = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (41 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &move_speed_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 vocation = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (48 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &vocation_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .comm_player.PolarPosition pos = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (58 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_pos()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:comm_player.OtherInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:comm_player.OtherInfo)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void OtherInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:comm_player.OtherInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 player_ID = 1;
  if (this->player_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->player_id(), output);
  }

  // int32 status = 2;
  if (this->status() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->status(), output);
  }

  // double move_angle = 3;
  if (this->move_angle() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->move_angle(), output);
  }

  // double view_angle = 4;
  if (this->view_angle() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(4, this->view_angle(), output);
  }

  // double move_speed = 5;
  if (this->move_speed() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(5, this->move_speed(), output);
  }

  // int32 vocation = 6;
  if (this->vocation() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->vocation(), output);
  }

  // .comm_player.PolarPosition pos = 7;
  if (this->has_pos()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, HasBitSetters::pos(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:comm_player.OtherInfo)
}

::google::protobuf::uint8* OtherInfo::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:comm_player.OtherInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 player_ID = 1;
  if (this->player_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->player_id(), target);
  }

  // int32 status = 2;
  if (this->status() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->status(), target);
  }

  // double move_angle = 3;
  if (this->move_angle() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->move_angle(), target);
  }

  // double view_angle = 4;
  if (this->view_angle() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(4, this->view_angle(), target);
  }

  // double move_speed = 5;
  if (this->move_speed() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(5, this->move_speed(), target);
  }

  // int32 vocation = 6;
  if (this->vocation() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->vocation(), target);
  }

  // .comm_player.PolarPosition pos = 7;
  if (this->has_pos()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, HasBitSetters::pos(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:comm_player.OtherInfo)
  return target;
}

size_t OtherInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:comm_player.OtherInfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .comm_player.PolarPosition pos = 7;
  if (this->has_pos()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *pos_);
  }

  // int32 player_ID = 1;
  if (this->player_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->player_id());
  }

  // int32 status = 2;
  if (this->status() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->status());
  }

  // double move_angle = 3;
  if (this->move_angle() != 0) {
    total_size += 1 + 8;
  }

  // double view_angle = 4;
  if (this->view_angle() != 0) {
    total_size += 1 + 8;
  }

  // double move_speed = 5;
  if (this->move_speed() != 0) {
    total_size += 1 + 8;
  }

  // int32 vocation = 6;
  if (this->vocation() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->vocation());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void OtherInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:comm_player.OtherInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const OtherInfo* source =
      ::google::protobuf::DynamicCastToGenerated<OtherInfo>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:comm_player.OtherInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:comm_player.OtherInfo)
    MergeFrom(*source);
  }
}

void OtherInfo::MergeFrom(const OtherInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:comm_player.OtherInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_pos()) {
    mutable_pos()->::comm_player::PolarPosition::MergeFrom(from.pos());
  }
  if (from.player_id() != 0) {
    set_player_id(from.player_id());
  }
  if (from.status() != 0) {
    set_status(from.status());
  }
  if (from.move_angle() != 0) {
    set_move_angle(from.move_angle());
  }
  if (from.view_angle() != 0) {
    set_view_angle(from.view_angle());
  }
  if (from.move_speed() != 0) {
    set_move_speed(from.move_speed());
  }
  if (from.vocation() != 0) {
    set_vocation(from.vocation());
  }
}

void OtherInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:comm_player.OtherInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OtherInfo::CopyFrom(const OtherInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:comm_player.OtherInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OtherInfo::IsInitialized() const {
  return true;
}

void OtherInfo::Swap(OtherInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OtherInfo::InternalSwap(OtherInfo* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(pos_, other->pos_);
  swap(player_id_, other->player_id_);
  swap(status_, other->status_);
  swap(move_angle_, other->move_angle_);
  swap(view_angle_, other->view_angle_);
  swap(move_speed_, other->move_speed_);
  swap(vocation_, other->vocation_);
}

::google::protobuf::Metadata OtherInfo::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_proto_2fcommunication_5fplayer_2eproto);
  return ::file_level_metadata_proto_2fcommunication_5fplayer_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Sound::InitAsDefaultInstance() {
}
class Sound::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Sound::kSenderFieldNumber;
const int Sound::kDelayFieldNumber;
const int Sound::kParameterFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Sound::Sound()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:comm_player.Sound)
}
Sound::Sound(const Sound& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&sender_, &from.sender_,
    static_cast<size_t>(reinterpret_cast<char*>(&parameter_) -
    reinterpret_cast<char*>(&sender_)) + sizeof(parameter_));
  // @@protoc_insertion_point(copy_constructor:comm_player.Sound)
}

void Sound::SharedCtor() {
  ::memset(&sender_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&parameter_) -
      reinterpret_cast<char*>(&sender_)) + sizeof(parameter_));
}

Sound::~Sound() {
  // @@protoc_insertion_point(destructor:comm_player.Sound)
  SharedDtor();
}

void Sound::SharedDtor() {
}

void Sound::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Sound& Sound::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Sound_proto_2fcommunication_5fplayer_2eproto.base);
  return *internal_default_instance();
}


void Sound::Clear() {
// @@protoc_insertion_point(message_clear_start:comm_player.Sound)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&sender_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&parameter_) -
      reinterpret_cast<char*>(&sender_)) + sizeof(parameter_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Sound::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Sound*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // int32 sender = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_sender(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // int32 delay = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_delay(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // int32 parameter = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_parameter(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Sound::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:comm_player.Sound)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 sender = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &sender_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 delay = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &delay_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 parameter = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &parameter_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:comm_player.Sound)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:comm_player.Sound)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Sound::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:comm_player.Sound)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 sender = 1;
  if (this->sender() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->sender(), output);
  }

  // int32 delay = 2;
  if (this->delay() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->delay(), output);
  }

  // int32 parameter = 3;
  if (this->parameter() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->parameter(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:comm_player.Sound)
}

::google::protobuf::uint8* Sound::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:comm_player.Sound)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 sender = 1;
  if (this->sender() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->sender(), target);
  }

  // int32 delay = 2;
  if (this->delay() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->delay(), target);
  }

  // int32 parameter = 3;
  if (this->parameter() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->parameter(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:comm_player.Sound)
  return target;
}

size_t Sound::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:comm_player.Sound)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 sender = 1;
  if (this->sender() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->sender());
  }

  // int32 delay = 2;
  if (this->delay() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->delay());
  }

  // int32 parameter = 3;
  if (this->parameter() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->parameter());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Sound::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:comm_player.Sound)
  GOOGLE_DCHECK_NE(&from, this);
  const Sound* source =
      ::google::protobuf::DynamicCastToGenerated<Sound>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:comm_player.Sound)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:comm_player.Sound)
    MergeFrom(*source);
  }
}

void Sound::MergeFrom(const Sound& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:comm_player.Sound)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.sender() != 0) {
    set_sender(from.sender());
  }
  if (from.delay() != 0) {
    set_delay(from.delay());
  }
  if (from.parameter() != 0) {
    set_parameter(from.parameter());
  }
}

void Sound::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:comm_player.Sound)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Sound::CopyFrom(const Sound& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:comm_player.Sound)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Sound::IsInitialized() const {
  return true;
}

void Sound::Swap(Sound* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Sound::InternalSwap(Sound* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(sender_, other->sender_);
  swap(delay_, other->delay_);
  swap(parameter_, other->parameter_);
}

::google::protobuf::Metadata Sound::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_proto_2fcommunication_5fplayer_2eproto);
  return ::file_level_metadata_proto_2fcommunication_5fplayer_2eproto[kIndexInFileMessages];
}


// ===================================================================

void PlayerInfo::InitAsDefaultInstance() {
  ::comm_player::_PlayerInfo_default_instance_._instance.get_mutable()->self_ = const_cast< ::comm_player::SelfInfo*>(
      ::comm_player::SelfInfo::internal_default_instance());
}
class PlayerInfo::HasBitSetters {
 public:
  static const ::comm_player::SelfInfo& self(const PlayerInfo* msg);
};

const ::comm_player::SelfInfo&
PlayerInfo::HasBitSetters::self(const PlayerInfo* msg) {
  return *msg->self_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PlayerInfo::kPlayerIDFieldNumber;
const int PlayerInfo::kSelfFieldNumber;
const int PlayerInfo::kLandformIdFieldNumber;
const int PlayerInfo::kItemsFieldNumber;
const int PlayerInfo::kOthersFieldNumber;
const int PlayerInfo::kSoundsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PlayerInfo::PlayerInfo()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:comm_player.PlayerInfo)
}
PlayerInfo::PlayerInfo(const PlayerInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      landform_id_(from.landform_id_),
      items_(from.items_),
      others_(from.others_),
      sounds_(from.sounds_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_self()) {
    self_ = new ::comm_player::SelfInfo(*from.self_);
  } else {
    self_ = nullptr;
  }
  player_id_ = from.player_id_;
  // @@protoc_insertion_point(copy_constructor:comm_player.PlayerInfo)
}

void PlayerInfo::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_PlayerInfo_proto_2fcommunication_5fplayer_2eproto.base);
  ::memset(&self_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&player_id_) -
      reinterpret_cast<char*>(&self_)) + sizeof(player_id_));
}

PlayerInfo::~PlayerInfo() {
  // @@protoc_insertion_point(destructor:comm_player.PlayerInfo)
  SharedDtor();
}

void PlayerInfo::SharedDtor() {
  if (this != internal_default_instance()) delete self_;
}

void PlayerInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PlayerInfo& PlayerInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_PlayerInfo_proto_2fcommunication_5fplayer_2eproto.base);
  return *internal_default_instance();
}


void PlayerInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:comm_player.PlayerInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  landform_id_.Clear();
  items_.Clear();
  others_.Clear();
  sounds_.Clear();
  if (GetArenaNoVirtual() == nullptr && self_ != nullptr) {
    delete self_;
  }
  self_ = nullptr;
  player_id_ = 0;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* PlayerInfo::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<PlayerInfo*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .comm_player.SelfInfo self = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::comm_player::SelfInfo::_InternalParse;
        object = msg->mutable_self();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // repeated int32 landform_id = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) == 18) {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::google::protobuf::internal::PackedInt32Parser;
          object = msg->mutable_landform_id();
          if (size > end - ptr) goto len_delim_till_end;
          auto newend = ptr + size;
          if (size) ptr = parser_till_end(ptr, newend, object, ctx);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr == newend);
          break;
        } else if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        do {
          msg->add_landform_id(::google::protobuf::internal::ReadVarint(&ptr));
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 16 && (ptr += 1));
        break;
      }
      // repeated .comm_player.Item items = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::comm_player::Item::_InternalParse;
          object = msg->add_items();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 26 && (ptr += 1));
        break;
      }
      // repeated .comm_player.OtherInfo others = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::comm_player::OtherInfo::_InternalParse;
          object = msg->add_others();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 34 && (ptr += 1));
        break;
      }
      // repeated .comm_player.Sound sounds = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 42) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::comm_player::Sound::_InternalParse;
          object = msg->add_sounds();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 42 && (ptr += 1));
        break;
      }
      // int32 player_ID = 6;
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) != 48) goto handle_unusual;
        msg->set_player_id(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool PlayerInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:comm_player.PlayerInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .comm_player.SelfInfo self = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_self()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 landform_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_landform_id())));
        } else if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 18u, input, this->mutable_landform_id())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .comm_player.Item items = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_items()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .comm_player.OtherInfo others = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_others()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .comm_player.Sound sounds = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (42 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_sounds()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 player_ID = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (48 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &player_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:comm_player.PlayerInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:comm_player.PlayerInfo)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void PlayerInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:comm_player.PlayerInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .comm_player.SelfInfo self = 1;
  if (this->has_self()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::self(this), output);
  }

  // repeated int32 landform_id = 2;
  if (this->landform_id_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_landform_id_cached_byte_size_.load(
        std::memory_order_relaxed));
  }
  for (int i = 0, n = this->landform_id_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->landform_id(i), output);
  }

  // repeated .comm_player.Item items = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->items_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->items(static_cast<int>(i)),
      output);
  }

  // repeated .comm_player.OtherInfo others = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->others_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4,
      this->others(static_cast<int>(i)),
      output);
  }

  // repeated .comm_player.Sound sounds = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->sounds_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5,
      this->sounds(static_cast<int>(i)),
      output);
  }

  // int32 player_ID = 6;
  if (this->player_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->player_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:comm_player.PlayerInfo)
}

::google::protobuf::uint8* PlayerInfo::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:comm_player.PlayerInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .comm_player.SelfInfo self = 1;
  if (this->has_self()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::self(this), target);
  }

  // repeated int32 landform_id = 2;
  if (this->landform_id_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        _landform_id_cached_byte_size_.load(std::memory_order_relaxed),
         target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->landform_id_, target);
  }

  // repeated .comm_player.Item items = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->items_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->items(static_cast<int>(i)), target);
  }

  // repeated .comm_player.OtherInfo others = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->others_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->others(static_cast<int>(i)), target);
  }

  // repeated .comm_player.Sound sounds = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->sounds_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->sounds(static_cast<int>(i)), target);
  }

  // int32 player_ID = 6;
  if (this->player_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->player_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:comm_player.PlayerInfo)
  return target;
}

size_t PlayerInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:comm_player.PlayerInfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated int32 landform_id = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->landform_id_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast<::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    _landform_id_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // repeated .comm_player.Item items = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->items_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->items(static_cast<int>(i)));
    }
  }

  // repeated .comm_player.OtherInfo others = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->others_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->others(static_cast<int>(i)));
    }
  }

  // repeated .comm_player.Sound sounds = 5;
  {
    unsigned int count = static_cast<unsigned int>(this->sounds_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->sounds(static_cast<int>(i)));
    }
  }

  // .comm_player.SelfInfo self = 1;
  if (this->has_self()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *self_);
  }

  // int32 player_ID = 6;
  if (this->player_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->player_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PlayerInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:comm_player.PlayerInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const PlayerInfo* source =
      ::google::protobuf::DynamicCastToGenerated<PlayerInfo>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:comm_player.PlayerInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:comm_player.PlayerInfo)
    MergeFrom(*source);
  }
}

void PlayerInfo::MergeFrom(const PlayerInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:comm_player.PlayerInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  landform_id_.MergeFrom(from.landform_id_);
  items_.MergeFrom(from.items_);
  others_.MergeFrom(from.others_);
  sounds_.MergeFrom(from.sounds_);
  if (from.has_self()) {
    mutable_self()->::comm_player::SelfInfo::MergeFrom(from.self());
  }
  if (from.player_id() != 0) {
    set_player_id(from.player_id());
  }
}

void PlayerInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:comm_player.PlayerInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PlayerInfo::CopyFrom(const PlayerInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:comm_player.PlayerInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PlayerInfo::IsInitialized() const {
  return true;
}

void PlayerInfo::Swap(PlayerInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PlayerInfo::InternalSwap(PlayerInfo* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  landform_id_.InternalSwap(&other->landform_id_);
  CastToBase(&items_)->InternalSwap(CastToBase(&other->items_));
  CastToBase(&others_)->InternalSwap(CastToBase(&other->others_));
  CastToBase(&sounds_)->InternalSwap(CastToBase(&other->sounds_));
  swap(self_, other->self_);
  swap(player_id_, other->player_id_);
}

::google::protobuf::Metadata PlayerInfo::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_proto_2fcommunication_5fplayer_2eproto);
  return ::file_level_metadata_proto_2fcommunication_5fplayer_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Command::InitAsDefaultInstance() {
}
class Command::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Command::kCommandTypeFieldNumber;
const int Command::kTargetIDFieldNumber;
const int Command::kMoveAngleFieldNumber;
const int Command::kViewAngleFieldNumber;
const int Command::kParameterFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Command::Command()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:comm_player.Command)
}
Command::Command(const Command& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&command_type_, &from.command_type_,
    static_cast<size_t>(reinterpret_cast<char*>(&parameter_) -
    reinterpret_cast<char*>(&command_type_)) + sizeof(parameter_));
  // @@protoc_insertion_point(copy_constructor:comm_player.Command)
}

void Command::SharedCtor() {
  ::memset(&command_type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&parameter_) -
      reinterpret_cast<char*>(&command_type_)) + sizeof(parameter_));
}

Command::~Command() {
  // @@protoc_insertion_point(destructor:comm_player.Command)
  SharedDtor();
}

void Command::SharedDtor() {
}

void Command::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Command& Command::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Command_proto_2fcommunication_5fplayer_2eproto.base);
  return *internal_default_instance();
}


void Command::Clear() {
// @@protoc_insertion_point(message_clear_start:comm_player.Command)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&command_type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&parameter_) -
      reinterpret_cast<char*>(&command_type_)) + sizeof(parameter_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Command::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Command*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .comm_player.CommandType command_type = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        ::google::protobuf::uint64 val = ::google::protobuf::internal::ReadVarint(&ptr);
        msg->set_command_type(static_cast<::comm_player::CommandType>(val));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // int32 target_ID = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_target_id(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // double move_angle = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 25) goto handle_unusual;
        msg->set_move_angle(::google::protobuf::io::UnalignedLoad<double>(ptr));
        ptr += sizeof(double);
        break;
      }
      // double view_angle = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 33) goto handle_unusual;
        msg->set_view_angle(::google::protobuf::io::UnalignedLoad<double>(ptr));
        ptr += sizeof(double);
        break;
      }
      // int32 parameter = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 40) goto handle_unusual;
        msg->set_parameter(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Command::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:comm_player.Command)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .comm_player.CommandType command_type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          int value = 0;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_command_type(static_cast< ::comm_player::CommandType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 target_ID = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &target_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double move_angle = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (25 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &move_angle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double view_angle = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (33 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &view_angle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 parameter = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (40 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &parameter_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:comm_player.Command)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:comm_player.Command)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Command::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:comm_player.Command)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .comm_player.CommandType command_type = 1;
  if (this->command_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->command_type(), output);
  }

  // int32 target_ID = 2;
  if (this->target_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->target_id(), output);
  }

  // double move_angle = 3;
  if (this->move_angle() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->move_angle(), output);
  }

  // double view_angle = 4;
  if (this->view_angle() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(4, this->view_angle(), output);
  }

  // int32 parameter = 5;
  if (this->parameter() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->parameter(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:comm_player.Command)
}

::google::protobuf::uint8* Command::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:comm_player.Command)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .comm_player.CommandType command_type = 1;
  if (this->command_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->command_type(), target);
  }

  // int32 target_ID = 2;
  if (this->target_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->target_id(), target);
  }

  // double move_angle = 3;
  if (this->move_angle() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->move_angle(), target);
  }

  // double view_angle = 4;
  if (this->view_angle() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(4, this->view_angle(), target);
  }

  // int32 parameter = 5;
  if (this->parameter() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->parameter(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:comm_player.Command)
  return target;
}

size_t Command::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:comm_player.Command)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .comm_player.CommandType command_type = 1;
  if (this->command_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->command_type());
  }

  // int32 target_ID = 2;
  if (this->target_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->target_id());
  }

  // double move_angle = 3;
  if (this->move_angle() != 0) {
    total_size += 1 + 8;
  }

  // double view_angle = 4;
  if (this->view_angle() != 0) {
    total_size += 1 + 8;
  }

  // int32 parameter = 5;
  if (this->parameter() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->parameter());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Command::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:comm_player.Command)
  GOOGLE_DCHECK_NE(&from, this);
  const Command* source =
      ::google::protobuf::DynamicCastToGenerated<Command>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:comm_player.Command)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:comm_player.Command)
    MergeFrom(*source);
  }
}

void Command::MergeFrom(const Command& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:comm_player.Command)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.command_type() != 0) {
    set_command_type(from.command_type());
  }
  if (from.target_id() != 0) {
    set_target_id(from.target_id());
  }
  if (from.move_angle() != 0) {
    set_move_angle(from.move_angle());
  }
  if (from.view_angle() != 0) {
    set_view_angle(from.view_angle());
  }
  if (from.parameter() != 0) {
    set_parameter(from.parameter());
  }
}

void Command::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:comm_player.Command)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Command::CopyFrom(const Command& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:comm_player.Command)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Command::IsInitialized() const {
  return true;
}

void Command::Swap(Command* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Command::InternalSwap(Command* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(command_type_, other->command_type_);
  swap(target_id_, other->target_id_);
  swap(move_angle_, other->move_angle_);
  swap(view_angle_, other->view_angle_);
  swap(parameter_, other->parameter_);
}

::google::protobuf::Metadata Command::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_proto_2fcommunication_5fplayer_2eproto);
  return ::file_level_metadata_proto_2fcommunication_5fplayer_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Route::InitAsDefaultInstance() {
  ::comm_player::_Route_default_instance_._instance.get_mutable()->start_pos_ = const_cast< ::comm_player::XYPosition*>(
      ::comm_player::XYPosition::internal_default_instance());
  ::comm_player::_Route_default_instance_._instance.get_mutable()->over_pos_ = const_cast< ::comm_player::XYPosition*>(
      ::comm_player::XYPosition::internal_default_instance());
}
class Route::HasBitSetters {
 public:
  static const ::comm_player::XYPosition& start_pos(const Route* msg);
  static const ::comm_player::XYPosition& over_pos(const Route* msg);
};

const ::comm_player::XYPosition&
Route::HasBitSetters::start_pos(const Route* msg) {
  return *msg->start_pos_;
}
const ::comm_player::XYPosition&
Route::HasBitSetters::over_pos(const Route* msg) {
  return *msg->over_pos_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Route::kStartPosFieldNumber;
const int Route::kOverPosFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Route::Route()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:comm_player.Route)
}
Route::Route(const Route& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_start_pos()) {
    start_pos_ = new ::comm_player::XYPosition(*from.start_pos_);
  } else {
    start_pos_ = nullptr;
  }
  if (from.has_over_pos()) {
    over_pos_ = new ::comm_player::XYPosition(*from.over_pos_);
  } else {
    over_pos_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:comm_player.Route)
}

void Route::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_Route_proto_2fcommunication_5fplayer_2eproto.base);
  ::memset(&start_pos_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&over_pos_) -
      reinterpret_cast<char*>(&start_pos_)) + sizeof(over_pos_));
}

Route::~Route() {
  // @@protoc_insertion_point(destructor:comm_player.Route)
  SharedDtor();
}

void Route::SharedDtor() {
  if (this != internal_default_instance()) delete start_pos_;
  if (this != internal_default_instance()) delete over_pos_;
}

void Route::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Route& Route::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Route_proto_2fcommunication_5fplayer_2eproto.base);
  return *internal_default_instance();
}


void Route::Clear() {
// @@protoc_insertion_point(message_clear_start:comm_player.Route)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && start_pos_ != nullptr) {
    delete start_pos_;
  }
  start_pos_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && over_pos_ != nullptr) {
    delete over_pos_;
  }
  over_pos_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Route::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Route*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .comm_player.XYPosition start_pos = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::comm_player::XYPosition::_InternalParse;
        object = msg->mutable_start_pos();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .comm_player.XYPosition over_pos = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::comm_player::XYPosition::_InternalParse;
        object = msg->mutable_over_pos();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Route::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:comm_player.Route)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .comm_player.XYPosition start_pos = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_start_pos()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .comm_player.XYPosition over_pos = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_over_pos()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:comm_player.Route)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:comm_player.Route)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Route::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:comm_player.Route)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .comm_player.XYPosition start_pos = 1;
  if (this->has_start_pos()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::start_pos(this), output);
  }

  // .comm_player.XYPosition over_pos = 2;
  if (this->has_over_pos()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, HasBitSetters::over_pos(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:comm_player.Route)
}

::google::protobuf::uint8* Route::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:comm_player.Route)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .comm_player.XYPosition start_pos = 1;
  if (this->has_start_pos()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::start_pos(this), target);
  }

  // .comm_player.XYPosition over_pos = 2;
  if (this->has_over_pos()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, HasBitSetters::over_pos(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:comm_player.Route)
  return target;
}

size_t Route::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:comm_player.Route)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .comm_player.XYPosition start_pos = 1;
  if (this->has_start_pos()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *start_pos_);
  }

  // .comm_player.XYPosition over_pos = 2;
  if (this->has_over_pos()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *over_pos_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Route::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:comm_player.Route)
  GOOGLE_DCHECK_NE(&from, this);
  const Route* source =
      ::google::protobuf::DynamicCastToGenerated<Route>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:comm_player.Route)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:comm_player.Route)
    MergeFrom(*source);
  }
}

void Route::MergeFrom(const Route& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:comm_player.Route)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_start_pos()) {
    mutable_start_pos()->::comm_player::XYPosition::MergeFrom(from.start_pos());
  }
  if (from.has_over_pos()) {
    mutable_over_pos()->::comm_player::XYPosition::MergeFrom(from.over_pos());
  }
}

void Route::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:comm_player.Route)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Route::CopyFrom(const Route& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:comm_player.Route)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Route::IsInitialized() const {
  return true;
}

void Route::Swap(Route* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Route::InternalSwap(Route* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(start_pos_, other->start_pos_);
  swap(over_pos_, other->over_pos_);
}

::google::protobuf::Metadata Route::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_proto_2fcommunication_5fplayer_2eproto);
  return ::file_level_metadata_proto_2fcommunication_5fplayer_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Parachute::InitAsDefaultInstance() {
  ::comm_player::_Parachute_default_instance_._instance.get_mutable()->landing_point_ = const_cast< ::comm_player::XYPosition*>(
      ::comm_player::XYPosition::internal_default_instance());
}
class Parachute::HasBitSetters {
 public:
  static const ::comm_player::XYPosition& landing_point(const Parachute* msg);
};

const ::comm_player::XYPosition&
Parachute::HasBitSetters::landing_point(const Parachute* msg) {
  return *msg->landing_point_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Parachute::kRoleFieldNumber;
const int Parachute::kLandingPointFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Parachute::Parachute()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:comm_player.Parachute)
}
Parachute::Parachute(const Parachute& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_landing_point()) {
    landing_point_ = new ::comm_player::XYPosition(*from.landing_point_);
  } else {
    landing_point_ = nullptr;
  }
  role_ = from.role_;
  // @@protoc_insertion_point(copy_constructor:comm_player.Parachute)
}

void Parachute::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_Parachute_proto_2fcommunication_5fplayer_2eproto.base);
  ::memset(&landing_point_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&role_) -
      reinterpret_cast<char*>(&landing_point_)) + sizeof(role_));
}

Parachute::~Parachute() {
  // @@protoc_insertion_point(destructor:comm_player.Parachute)
  SharedDtor();
}

void Parachute::SharedDtor() {
  if (this != internal_default_instance()) delete landing_point_;
}

void Parachute::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Parachute& Parachute::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Parachute_proto_2fcommunication_5fplayer_2eproto.base);
  return *internal_default_instance();
}


void Parachute::Clear() {
// @@protoc_insertion_point(message_clear_start:comm_player.Parachute)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && landing_point_ != nullptr) {
    delete landing_point_;
  }
  landing_point_ = nullptr;
  role_ = 0;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Parachute::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Parachute*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // int32 role = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_role(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // .comm_player.XYPosition landing_point = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::comm_player::XYPosition::_InternalParse;
        object = msg->mutable_landing_point();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Parachute::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:comm_player.Parachute)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 role = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &role_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .comm_player.XYPosition landing_point = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_landing_point()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:comm_player.Parachute)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:comm_player.Parachute)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Parachute::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:comm_player.Parachute)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 role = 1;
  if (this->role() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->role(), output);
  }

  // .comm_player.XYPosition landing_point = 2;
  if (this->has_landing_point()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, HasBitSetters::landing_point(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:comm_player.Parachute)
}

::google::protobuf::uint8* Parachute::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:comm_player.Parachute)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 role = 1;
  if (this->role() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->role(), target);
  }

  // .comm_player.XYPosition landing_point = 2;
  if (this->has_landing_point()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, HasBitSetters::landing_point(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:comm_player.Parachute)
  return target;
}

size_t Parachute::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:comm_player.Parachute)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .comm_player.XYPosition landing_point = 2;
  if (this->has_landing_point()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *landing_point_);
  }

  // int32 role = 1;
  if (this->role() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->role());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Parachute::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:comm_player.Parachute)
  GOOGLE_DCHECK_NE(&from, this);
  const Parachute* source =
      ::google::protobuf::DynamicCastToGenerated<Parachute>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:comm_player.Parachute)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:comm_player.Parachute)
    MergeFrom(*source);
  }
}

void Parachute::MergeFrom(const Parachute& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:comm_player.Parachute)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_landing_point()) {
    mutable_landing_point()->::comm_player::XYPosition::MergeFrom(from.landing_point());
  }
  if (from.role() != 0) {
    set_role(from.role());
  }
}

void Parachute::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:comm_player.Parachute)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Parachute::CopyFrom(const Parachute& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:comm_player.Parachute)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Parachute::IsInitialized() const {
  return true;
}

void Parachute::Swap(Parachute* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Parachute::InternalSwap(Parachute* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(landing_point_, other->landing_point_);
  swap(role_, other->role_);
}

::google::protobuf::Metadata Parachute::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_proto_2fcommunication_5fplayer_2eproto);
  return ::file_level_metadata_proto_2fcommunication_5fplayer_2eproto[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace comm_player
namespace google {
namespace protobuf {
template<> PROTOBUF_NOINLINE ::comm_player::PolarPosition* Arena::CreateMaybeMessage< ::comm_player::PolarPosition >(Arena* arena) {
  return Arena::CreateInternal< ::comm_player::PolarPosition >(arena);
}
template<> PROTOBUF_NOINLINE ::comm_player::XYPosition* Arena::CreateMaybeMessage< ::comm_player::XYPosition >(Arena* arena) {
  return Arena::CreateInternal< ::comm_player::XYPosition >(arena);
}
template<> PROTOBUF_NOINLINE ::comm_player::Item* Arena::CreateMaybeMessage< ::comm_player::Item >(Arena* arena) {
  return Arena::CreateInternal< ::comm_player::Item >(arena);
}
template<> PROTOBUF_NOINLINE ::comm_player::SelfInfo* Arena::CreateMaybeMessage< ::comm_player::SelfInfo >(Arena* arena) {
  return Arena::CreateInternal< ::comm_player::SelfInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::comm_player::OtherInfo* Arena::CreateMaybeMessage< ::comm_player::OtherInfo >(Arena* arena) {
  return Arena::CreateInternal< ::comm_player::OtherInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::comm_player::Sound* Arena::CreateMaybeMessage< ::comm_player::Sound >(Arena* arena) {
  return Arena::CreateInternal< ::comm_player::Sound >(arena);
}
template<> PROTOBUF_NOINLINE ::comm_player::PlayerInfo* Arena::CreateMaybeMessage< ::comm_player::PlayerInfo >(Arena* arena) {
  return Arena::CreateInternal< ::comm_player::PlayerInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::comm_player::Command* Arena::CreateMaybeMessage< ::comm_player::Command >(Arena* arena) {
  return Arena::CreateInternal< ::comm_player::Command >(arena);
}
template<> PROTOBUF_NOINLINE ::comm_player::Route* Arena::CreateMaybeMessage< ::comm_player::Route >(Arena* arena) {
  return Arena::CreateInternal< ::comm_player::Route >(arena);
}
template<> PROTOBUF_NOINLINE ::comm_player::Parachute* Arena::CreateMaybeMessage< ::comm_player::Parachute >(Arena* arena) {
  return Arena::CreateInternal< ::comm_player::Parachute >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
