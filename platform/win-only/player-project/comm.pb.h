// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: comm.proto

#ifndef PROTOBUF_INCLUDED_comm_2eproto
#define PROTOBUF_INCLUDED_comm_2eproto
#ifdef comm_EXPORTS
#define COMM_API __declspec(dllexport)
#else
#define COMM_API __declspec(dllimport)
#endif // DLL_EXPORTS
#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_comm_2eproto COMM_API

namespace protobuf_comm_2eproto {
// Internal implementation detail -- do not use these members.
struct COMM_API TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[10];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void COMM_API AddDescriptors();
}  // namespace protobuf_comm_2eproto
namespace comm {
class Command;
class CommandDefaultTypeInternal;
COMM_API extern CommandDefaultTypeInternal _Command_default_instance_;
class Item;
class ItemDefaultTypeInternal;
COMM_API extern ItemDefaultTypeInternal _Item_default_instance_;
class OtherInfo;
class OtherInfoDefaultTypeInternal;
COMM_API extern OtherInfoDefaultTypeInternal _OtherInfo_default_instance_;
class PlayerInfo;
class PlayerInfoDefaultTypeInternal;
COMM_API extern PlayerInfoDefaultTypeInternal _PlayerInfo_default_instance_;
class PoisonInfo;
class PoisonInfoDefaultTypeInternal;
COMM_API extern PoisonInfoDefaultTypeInternal _PoisonInfo_default_instance_;
class PolarPosition;
class PolarPositionDefaultTypeInternal;
COMM_API extern PolarPositionDefaultTypeInternal _PolarPosition_default_instance_;
class Route;
class RouteDefaultTypeInternal;
COMM_API extern RouteDefaultTypeInternal _Route_default_instance_;
class SelfInfo;
class SelfInfoDefaultTypeInternal;
COMM_API extern SelfInfoDefaultTypeInternal _SelfInfo_default_instance_;
class Sound;
class SoundDefaultTypeInternal;
COMM_API extern SoundDefaultTypeInternal _Sound_default_instance_;
class XYPosition;
class XYPositionDefaultTypeInternal;
COMM_API extern XYPositionDefaultTypeInternal _XYPosition_default_instance_;
}  // namespace comm
namespace google {
namespace protobuf {
template<> COMM_API ::comm::Command* Arena::CreateMaybeMessage<::comm::Command>(Arena*);
template<> COMM_API ::comm::Item* Arena::CreateMaybeMessage<::comm::Item>(Arena*);
template<> COMM_API ::comm::OtherInfo* Arena::CreateMaybeMessage<::comm::OtherInfo>(Arena*);
template<> COMM_API ::comm::PlayerInfo* Arena::CreateMaybeMessage<::comm::PlayerInfo>(Arena*);
template<> COMM_API ::comm::PoisonInfo* Arena::CreateMaybeMessage<::comm::PoisonInfo>(Arena*);
template<> COMM_API ::comm::PolarPosition* Arena::CreateMaybeMessage<::comm::PolarPosition>(Arena*);
template<> COMM_API ::comm::Route* Arena::CreateMaybeMessage<::comm::Route>(Arena*);
template<> COMM_API ::comm::SelfInfo* Arena::CreateMaybeMessage<::comm::SelfInfo>(Arena*);
template<> COMM_API ::comm::Sound* Arena::CreateMaybeMessage<::comm::Sound>(Arena*);
template<> COMM_API ::comm::XYPosition* Arena::CreateMaybeMessage<::comm::XYPosition>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace comm {

enum CommandType {
  MOVE = 0,
  SHOOT = 1,
  PICKUP = 2,
  RADIO = 3,
  PARACHUTE = 4,
  CommandType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  CommandType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
COMM_API bool CommandType_IsValid(int value);
const CommandType CommandType_MIN = MOVE;
const CommandType CommandType_MAX = PARACHUTE;
const int CommandType_ARRAYSIZE = CommandType_MAX + 1;

COMM_API const ::google::protobuf::EnumDescriptor* CommandType_descriptor();
inline const ::std::string& CommandType_Name(CommandType value) {
  return ::google::protobuf::internal::NameOfEnum(
    CommandType_descriptor(), value);
}
inline bool CommandType_Parse(
    const ::std::string& name, CommandType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CommandType>(
    CommandType_descriptor(), name, value);
}
// ===================================================================

class COMM_API PolarPosition : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:comm.PolarPosition) */ {
 public:
  PolarPosition();
  virtual ~PolarPosition();

  PolarPosition(const PolarPosition& from);

  inline PolarPosition& operator=(const PolarPosition& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PolarPosition(PolarPosition&& from) noexcept
    : PolarPosition() {
    *this = ::std::move(from);
  }

  inline PolarPosition& operator=(PolarPosition&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PolarPosition& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PolarPosition* internal_default_instance() {
    return reinterpret_cast<const PolarPosition*>(
               &_PolarPosition_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(PolarPosition* other);
  friend void swap(PolarPosition& a, PolarPosition& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PolarPosition* New() const final {
    return CreateMaybeMessage<PolarPosition>(NULL);
  }

  PolarPosition* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PolarPosition>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PolarPosition& from);
  void MergeFrom(const PolarPosition& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PolarPosition* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // double distance = 1;
  void clear_distance();
  static const int kDistanceFieldNumber = 1;
  double distance() const;
  void set_distance(double value);

  // double angle = 2;
  void clear_angle();
  static const int kAngleFieldNumber = 2;
  double angle() const;
  void set_angle(double value);

  // @@protoc_insertion_point(class_scope:comm.PolarPosition)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  double distance_;
  double angle_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_comm_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class COMM_API XYPosition : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:comm.XYPosition) */ {
 public:
  XYPosition();
  virtual ~XYPosition();

  XYPosition(const XYPosition& from);

  inline XYPosition& operator=(const XYPosition& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  XYPosition(XYPosition&& from) noexcept
    : XYPosition() {
    *this = ::std::move(from);
  }

  inline XYPosition& operator=(XYPosition&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const XYPosition& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const XYPosition* internal_default_instance() {
    return reinterpret_cast<const XYPosition*>(
               &_XYPosition_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(XYPosition* other);
  friend void swap(XYPosition& a, XYPosition& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline XYPosition* New() const final {
    return CreateMaybeMessage<XYPosition>(NULL);
  }

  XYPosition* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<XYPosition>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const XYPosition& from);
  void MergeFrom(const XYPosition& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(XYPosition* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // double x = 1;
  void clear_x();
  static const int kXFieldNumber = 1;
  double x() const;
  void set_x(double value);

  // double y = 2;
  void clear_y();
  static const int kYFieldNumber = 2;
  double y() const;
  void set_y(double value);

  // @@protoc_insertion_point(class_scope:comm.XYPosition)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  double x_;
  double y_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_comm_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class COMM_API Item : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:comm.Item) */ {
 public:
  Item();
  virtual ~Item();

  Item(const Item& from);

  inline Item& operator=(const Item& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Item(Item&& from) noexcept
    : Item() {
    *this = ::std::move(from);
  }

  inline Item& operator=(Item&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Item& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Item* internal_default_instance() {
    return reinterpret_cast<const Item*>(
               &_Item_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(Item* other);
  friend void swap(Item& a, Item& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Item* New() const final {
    return CreateMaybeMessage<Item>(NULL);
  }

  Item* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Item>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Item& from);
  void MergeFrom(const Item& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Item* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .comm.PolarPosition pos = 3;
  bool has_pos() const;
  void clear_pos();
  static const int kPosFieldNumber = 3;
  private:
  const ::comm::PolarPosition& _internal_pos() const;
  public:
  const ::comm::PolarPosition& pos() const;
  ::comm::PolarPosition* release_pos();
  ::comm::PolarPosition* mutable_pos();
  void set_allocated_pos(::comm::PolarPosition* pos);

  // int32 item_ID = 1;
  void clear_item_id();
  static const int kItemIDFieldNumber = 1;
  ::google::protobuf::int32 item_id() const;
  void set_item_id(::google::protobuf::int32 value);

  // int32 type = 2;
  void clear_type();
  static const int kTypeFieldNumber = 2;
  ::google::protobuf::int32 type() const;
  void set_type(::google::protobuf::int32 value);

  // int32 durability = 4;
  void clear_durability();
  static const int kDurabilityFieldNumber = 4;
  ::google::protobuf::int32 durability() const;
  void set_durability(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:comm.Item)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::comm::PolarPosition* pos_;
  ::google::protobuf::int32 item_id_;
  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 durability_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_comm_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class COMM_API PoisonInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:comm.PoisonInfo) */ {
 public:
  PoisonInfo();
  virtual ~PoisonInfo();

  PoisonInfo(const PoisonInfo& from);

  inline PoisonInfo& operator=(const PoisonInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PoisonInfo(PoisonInfo&& from) noexcept
    : PoisonInfo() {
    *this = ::std::move(from);
  }

  inline PoisonInfo& operator=(PoisonInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PoisonInfo& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PoisonInfo* internal_default_instance() {
    return reinterpret_cast<const PoisonInfo*>(
               &_PoisonInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(PoisonInfo* other);
  friend void swap(PoisonInfo& a, PoisonInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PoisonInfo* New() const final {
    return CreateMaybeMessage<PoisonInfo>(NULL);
  }

  PoisonInfo* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PoisonInfo>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PoisonInfo& from);
  void MergeFrom(const PoisonInfo& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PoisonInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .comm.XYPosition current_center = 1;
  bool has_current_center() const;
  void clear_current_center();
  static const int kCurrentCenterFieldNumber = 1;
  private:
  const ::comm::XYPosition& _internal_current_center() const;
  public:
  const ::comm::XYPosition& current_center() const;
  ::comm::XYPosition* release_current_center();
  ::comm::XYPosition* mutable_current_center();
  void set_allocated_current_center(::comm::XYPosition* current_center);

  // .comm.XYPosition next_center = 2;
  bool has_next_center() const;
  void clear_next_center();
  static const int kNextCenterFieldNumber = 2;
  private:
  const ::comm::XYPosition& _internal_next_center() const;
  public:
  const ::comm::XYPosition& next_center() const;
  ::comm::XYPosition* release_next_center();
  ::comm::XYPosition* mutable_next_center();
  void set_allocated_next_center(::comm::XYPosition* next_center);

  // double current_radius = 3;
  void clear_current_radius();
  static const int kCurrentRadiusFieldNumber = 3;
  double current_radius() const;
  void set_current_radius(double value);

  // double next_radius = 4;
  void clear_next_radius();
  static const int kNextRadiusFieldNumber = 4;
  double next_radius() const;
  void set_next_radius(double value);

  // int32 rest_frames = 5;
  void clear_rest_frames();
  static const int kRestFramesFieldNumber = 5;
  ::google::protobuf::int32 rest_frames() const;
  void set_rest_frames(::google::protobuf::int32 value);

  // int32 move_flag = 6;
  void clear_move_flag();
  static const int kMoveFlagFieldNumber = 6;
  ::google::protobuf::int32 move_flag() const;
  void set_move_flag(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:comm.PoisonInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::comm::XYPosition* current_center_;
  ::comm::XYPosition* next_center_;
  double current_radius_;
  double next_radius_;
  ::google::protobuf::int32 rest_frames_;
  ::google::protobuf::int32 move_flag_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_comm_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class COMM_API SelfInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:comm.SelfInfo) */ {
 public:
  SelfInfo();
  virtual ~SelfInfo();

  SelfInfo(const SelfInfo& from);

  inline SelfInfo& operator=(const SelfInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SelfInfo(SelfInfo&& from) noexcept
    : SelfInfo() {
    *this = ::std::move(from);
  }

  inline SelfInfo& operator=(SelfInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SelfInfo& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SelfInfo* internal_default_instance() {
    return reinterpret_cast<const SelfInfo*>(
               &_SelfInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  void Swap(SelfInfo* other);
  friend void swap(SelfInfo& a, SelfInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SelfInfo* New() const final {
    return CreateMaybeMessage<SelfInfo>(NULL);
  }

  SelfInfo* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<SelfInfo>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const SelfInfo& from);
  void MergeFrom(const SelfInfo& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SelfInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .comm.Item bag = 11;
  int bag_size() const;
  void clear_bag();
  static const int kBagFieldNumber = 11;
  ::comm::Item* mutable_bag(int index);
  ::google::protobuf::RepeatedPtrField< ::comm::Item >*
      mutable_bag();
  const ::comm::Item& bag(int index) const;
  ::comm::Item* add_bag();
  const ::google::protobuf::RepeatedPtrField< ::comm::Item >&
      bag() const;

  // .comm.XYPosition pos = 10;
  bool has_pos() const;
  void clear_pos();
  static const int kPosFieldNumber = 10;
  private:
  const ::comm::XYPosition& _internal_pos() const;
  public:
  const ::comm::XYPosition& pos() const;
  ::comm::XYPosition* release_pos();
  ::comm::XYPosition* mutable_pos();
  void set_allocated_pos(::comm::XYPosition* pos);

  // double health_point = 1;
  void clear_health_point();
  static const int kHealthPointFieldNumber = 1;
  double health_point() const;
  void set_health_point(double value);

  // double health_point_limit = 2;
  void clear_health_point_limit();
  static const int kHealthPointLimitFieldNumber = 2;
  double health_point_limit() const;
  void set_health_point_limit(double value);

  // double move_angle = 3;
  void clear_move_angle();
  static const int kMoveAngleFieldNumber = 3;
  double move_angle() const;
  void set_move_angle(double value);

  // double view_angle = 4;
  void clear_view_angle();
  static const int kViewAngleFieldNumber = 4;
  double view_angle() const;
  void set_view_angle(double value);

  // double move_speed = 5;
  void clear_move_speed();
  static const int kMoveSpeedFieldNumber = 5;
  double move_speed() const;
  void set_move_speed(double value);

  // int32 vocation = 6;
  void clear_vocation();
  static const int kVocationFieldNumber = 6;
  ::google::protobuf::int32 vocation() const;
  void set_vocation(::google::protobuf::int32 value);

  // int32 status = 7;
  void clear_status();
  static const int kStatusFieldNumber = 7;
  ::google::protobuf::int32 status() const;
  void set_status(::google::protobuf::int32 value);

  // int32 move_cd = 8;
  void clear_move_cd();
  static const int kMoveCdFieldNumber = 8;
  ::google::protobuf::int32 move_cd() const;
  void set_move_cd(::google::protobuf::int32 value);

  // int32 attack_cd = 9;
  void clear_attack_cd();
  static const int kAttackCdFieldNumber = 9;
  ::google::protobuf::int32 attack_cd() const;
  void set_attack_cd(::google::protobuf::int32 value);

  // double view_width = 12;
  void clear_view_width();
  static const int kViewWidthFieldNumber = 12;
  double view_width() const;
  void set_view_width(double value);

  // double view_distance = 13;
  void clear_view_distance();
  static const int kViewDistanceFieldNumber = 13;
  double view_distance() const;
  void set_view_distance(double value);

  // @@protoc_insertion_point(class_scope:comm.SelfInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::comm::Item > bag_;
  ::comm::XYPosition* pos_;
  double health_point_;
  double health_point_limit_;
  double move_angle_;
  double view_angle_;
  double move_speed_;
  ::google::protobuf::int32 vocation_;
  ::google::protobuf::int32 status_;
  ::google::protobuf::int32 move_cd_;
  ::google::protobuf::int32 attack_cd_;
  double view_width_;
  double view_distance_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_comm_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class COMM_API OtherInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:comm.OtherInfo) */ {
 public:
  OtherInfo();
  virtual ~OtherInfo();

  OtherInfo(const OtherInfo& from);

  inline OtherInfo& operator=(const OtherInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  OtherInfo(OtherInfo&& from) noexcept
    : OtherInfo() {
    *this = ::std::move(from);
  }

  inline OtherInfo& operator=(OtherInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const OtherInfo& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const OtherInfo* internal_default_instance() {
    return reinterpret_cast<const OtherInfo*>(
               &_OtherInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  void Swap(OtherInfo* other);
  friend void swap(OtherInfo& a, OtherInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline OtherInfo* New() const final {
    return CreateMaybeMessage<OtherInfo>(NULL);
  }

  OtherInfo* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<OtherInfo>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const OtherInfo& from);
  void MergeFrom(const OtherInfo& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(OtherInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .comm.PolarPosition pos = 7;
  bool has_pos() const;
  void clear_pos();
  static const int kPosFieldNumber = 7;
  private:
  const ::comm::PolarPosition& _internal_pos() const;
  public:
  const ::comm::PolarPosition& pos() const;
  ::comm::PolarPosition* release_pos();
  ::comm::PolarPosition* mutable_pos();
  void set_allocated_pos(::comm::PolarPosition* pos);

  // int32 player_ID = 1;
  void clear_player_id();
  static const int kPlayerIDFieldNumber = 1;
  ::google::protobuf::int32 player_id() const;
  void set_player_id(::google::protobuf::int32 value);

  // int32 status = 2;
  void clear_status();
  static const int kStatusFieldNumber = 2;
  ::google::protobuf::int32 status() const;
  void set_status(::google::protobuf::int32 value);

  // double move_angle = 3;
  void clear_move_angle();
  static const int kMoveAngleFieldNumber = 3;
  double move_angle() const;
  void set_move_angle(double value);

  // double view_angle = 4;
  void clear_view_angle();
  static const int kViewAngleFieldNumber = 4;
  double view_angle() const;
  void set_view_angle(double value);

  // double move_speed = 5;
  void clear_move_speed();
  static const int kMoveSpeedFieldNumber = 5;
  double move_speed() const;
  void set_move_speed(double value);

  // int32 vocation = 6;
  void clear_vocation();
  static const int kVocationFieldNumber = 6;
  ::google::protobuf::int32 vocation() const;
  void set_vocation(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:comm.OtherInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::comm::PolarPosition* pos_;
  ::google::protobuf::int32 player_id_;
  ::google::protobuf::int32 status_;
  double move_angle_;
  double view_angle_;
  double move_speed_;
  ::google::protobuf::int32 vocation_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_comm_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class COMM_API Sound : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:comm.Sound) */ {
 public:
  Sound();
  virtual ~Sound();

  Sound(const Sound& from);

  inline Sound& operator=(const Sound& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Sound(Sound&& from) noexcept
    : Sound() {
    *this = ::std::move(from);
  }

  inline Sound& operator=(Sound&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Sound& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Sound* internal_default_instance() {
    return reinterpret_cast<const Sound*>(
               &_Sound_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  void Swap(Sound* other);
  friend void swap(Sound& a, Sound& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Sound* New() const final {
    return CreateMaybeMessage<Sound>(NULL);
  }

  Sound* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Sound>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Sound& from);
  void MergeFrom(const Sound& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Sound* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 sender = 1;
  void clear_sender();
  static const int kSenderFieldNumber = 1;
  ::google::protobuf::int32 sender() const;
  void set_sender(::google::protobuf::int32 value);

  // int32 delay = 2;
  void clear_delay();
  static const int kDelayFieldNumber = 2;
  ::google::protobuf::int32 delay() const;
  void set_delay(::google::protobuf::int32 value);

  // int32 parameter = 3;
  void clear_parameter();
  static const int kParameterFieldNumber = 3;
  ::google::protobuf::int32 parameter() const;
  void set_parameter(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:comm.Sound)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 sender_;
  ::google::protobuf::int32 delay_;
  ::google::protobuf::int32 parameter_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_comm_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class COMM_API PlayerInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:comm.PlayerInfo) */ {
 public:
  PlayerInfo();
  virtual ~PlayerInfo();

  PlayerInfo(const PlayerInfo& from);

  inline PlayerInfo& operator=(const PlayerInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PlayerInfo(PlayerInfo&& from) noexcept
    : PlayerInfo() {
    *this = ::std::move(from);
  }

  inline PlayerInfo& operator=(PlayerInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PlayerInfo& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PlayerInfo* internal_default_instance() {
    return reinterpret_cast<const PlayerInfo*>(
               &_PlayerInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  void Swap(PlayerInfo* other);
  friend void swap(PlayerInfo& a, PlayerInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PlayerInfo* New() const final {
    return CreateMaybeMessage<PlayerInfo>(NULL);
  }

  PlayerInfo* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PlayerInfo>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PlayerInfo& from);
  void MergeFrom(const PlayerInfo& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PlayerInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 landform_id = 2;
  int landform_id_size() const;
  void clear_landform_id();
  static const int kLandformIdFieldNumber = 2;
  ::google::protobuf::int32 landform_id(int index) const;
  void set_landform_id(int index, ::google::protobuf::int32 value);
  void add_landform_id(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      landform_id() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_landform_id();

  // repeated .comm.Item items = 3;
  int items_size() const;
  void clear_items();
  static const int kItemsFieldNumber = 3;
  ::comm::Item* mutable_items(int index);
  ::google::protobuf::RepeatedPtrField< ::comm::Item >*
      mutable_items();
  const ::comm::Item& items(int index) const;
  ::comm::Item* add_items();
  const ::google::protobuf::RepeatedPtrField< ::comm::Item >&
      items() const;

  // repeated .comm.OtherInfo others = 4;
  int others_size() const;
  void clear_others();
  static const int kOthersFieldNumber = 4;
  ::comm::OtherInfo* mutable_others(int index);
  ::google::protobuf::RepeatedPtrField< ::comm::OtherInfo >*
      mutable_others();
  const ::comm::OtherInfo& others(int index) const;
  ::comm::OtherInfo* add_others();
  const ::google::protobuf::RepeatedPtrField< ::comm::OtherInfo >&
      others() const;

  // repeated .comm.Sound sounds = 5;
  int sounds_size() const;
  void clear_sounds();
  static const int kSoundsFieldNumber = 5;
  ::comm::Sound* mutable_sounds(int index);
  ::google::protobuf::RepeatedPtrField< ::comm::Sound >*
      mutable_sounds();
  const ::comm::Sound& sounds(int index) const;
  ::comm::Sound* add_sounds();
  const ::google::protobuf::RepeatedPtrField< ::comm::Sound >&
      sounds() const;

  // .comm.SelfInfo self = 1;
  bool has_self() const;
  void clear_self();
  static const int kSelfFieldNumber = 1;
  private:
  const ::comm::SelfInfo& _internal_self() const;
  public:
  const ::comm::SelfInfo& self() const;
  ::comm::SelfInfo* release_self();
  ::comm::SelfInfo* mutable_self();
  void set_allocated_self(::comm::SelfInfo* self);

  // .comm.PoisonInfo poison = 7;
  bool has_poison() const;
  void clear_poison();
  static const int kPoisonFieldNumber = 7;
  private:
  const ::comm::PoisonInfo& _internal_poison() const;
  public:
  const ::comm::PoisonInfo& poison() const;
  ::comm::PoisonInfo* release_poison();
  ::comm::PoisonInfo* mutable_poison();
  void set_allocated_poison(::comm::PoisonInfo* poison);

  // int32 player_ID = 6;
  void clear_player_id();
  static const int kPlayerIDFieldNumber = 6;
  ::google::protobuf::int32 player_id() const;
  void set_player_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:comm.PlayerInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > landform_id_;
  mutable int _landform_id_cached_byte_size_;
  ::google::protobuf::RepeatedPtrField< ::comm::Item > items_;
  ::google::protobuf::RepeatedPtrField< ::comm::OtherInfo > others_;
  ::google::protobuf::RepeatedPtrField< ::comm::Sound > sounds_;
  ::comm::SelfInfo* self_;
  ::comm::PoisonInfo* poison_;
  ::google::protobuf::int32 player_id_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_comm_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class COMM_API Command : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:comm.Command) */ {
 public:
  Command();
  virtual ~Command();

  Command(const Command& from);

  inline Command& operator=(const Command& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Command(Command&& from) noexcept
    : Command() {
    *this = ::std::move(from);
  }

  inline Command& operator=(Command&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Command& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Command* internal_default_instance() {
    return reinterpret_cast<const Command*>(
               &_Command_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  void Swap(Command* other);
  friend void swap(Command& a, Command& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Command* New() const final {
    return CreateMaybeMessage<Command>(NULL);
  }

  Command* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Command>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Command& from);
  void MergeFrom(const Command& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Command* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .comm.XYPosition landing_point = 7;
  bool has_landing_point() const;
  void clear_landing_point();
  static const int kLandingPointFieldNumber = 7;
  private:
  const ::comm::XYPosition& _internal_landing_point() const;
  public:
  const ::comm::XYPosition& landing_point() const;
  ::comm::XYPosition* release_landing_point();
  ::comm::XYPosition* mutable_landing_point();
  void set_allocated_landing_point(::comm::XYPosition* landing_point);

  // .comm.CommandType command_type = 1;
  void clear_command_type();
  static const int kCommandTypeFieldNumber = 1;
  ::comm::CommandType command_type() const;
  void set_command_type(::comm::CommandType value);

  // int32 target_ID = 2;
  void clear_target_id();
  static const int kTargetIDFieldNumber = 2;
  ::google::protobuf::int32 target_id() const;
  void set_target_id(::google::protobuf::int32 value);

  // double move_angle = 3;
  void clear_move_angle();
  static const int kMoveAngleFieldNumber = 3;
  double move_angle() const;
  void set_move_angle(double value);

  // double view_angle = 4;
  void clear_view_angle();
  static const int kViewAngleFieldNumber = 4;
  double view_angle() const;
  void set_view_angle(double value);

  // int32 parameter = 5;
  void clear_parameter();
  static const int kParameterFieldNumber = 5;
  ::google::protobuf::int32 parameter() const;
  void set_parameter(::google::protobuf::int32 value);

  // int32 role = 6;
  void clear_role();
  static const int kRoleFieldNumber = 6;
  ::google::protobuf::int32 role() const;
  void set_role(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:comm.Command)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::comm::XYPosition* landing_point_;
  int command_type_;
  ::google::protobuf::int32 target_id_;
  double move_angle_;
  double view_angle_;
  ::google::protobuf::int32 parameter_;
  ::google::protobuf::int32 role_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_comm_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class COMM_API Route : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:comm.Route) */ {
 public:
  Route();
  virtual ~Route();

  Route(const Route& from);

  inline Route& operator=(const Route& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Route(Route&& from) noexcept
    : Route() {
    *this = ::std::move(from);
  }

  inline Route& operator=(Route&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Route& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Route* internal_default_instance() {
    return reinterpret_cast<const Route*>(
               &_Route_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  void Swap(Route* other);
  friend void swap(Route& a, Route& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Route* New() const final {
    return CreateMaybeMessage<Route>(NULL);
  }

  Route* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Route>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Route& from);
  void MergeFrom(const Route& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Route* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 teammates = 3;
  int teammates_size() const;
  void clear_teammates();
  static const int kTeammatesFieldNumber = 3;
  ::google::protobuf::int32 teammates(int index) const;
  void set_teammates(int index, ::google::protobuf::int32 value);
  void add_teammates(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      teammates() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_teammates();

  // .comm.XYPosition start_pos = 1;
  bool has_start_pos() const;
  void clear_start_pos();
  static const int kStartPosFieldNumber = 1;
  private:
  const ::comm::XYPosition& _internal_start_pos() const;
  public:
  const ::comm::XYPosition& start_pos() const;
  ::comm::XYPosition* release_start_pos();
  ::comm::XYPosition* mutable_start_pos();
  void set_allocated_start_pos(::comm::XYPosition* start_pos);

  // .comm.XYPosition over_pos = 2;
  bool has_over_pos() const;
  void clear_over_pos();
  static const int kOverPosFieldNumber = 2;
  private:
  const ::comm::XYPosition& _internal_over_pos() const;
  public:
  const ::comm::XYPosition& over_pos() const;
  ::comm::XYPosition* release_over_pos();
  ::comm::XYPosition* mutable_over_pos();
  void set_allocated_over_pos(::comm::XYPosition* over_pos);

  // @@protoc_insertion_point(class_scope:comm.Route)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > teammates_;
  mutable int _teammates_cached_byte_size_;
  ::comm::XYPosition* start_pos_;
  ::comm::XYPosition* over_pos_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_comm_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// PolarPosition

// double distance = 1;
inline void PolarPosition::clear_distance() {
  distance_ = 0;
}
inline double PolarPosition::distance() const {
  // @@protoc_insertion_point(field_get:comm.PolarPosition.distance)
  return distance_;
}
inline void PolarPosition::set_distance(double value) {
  
  distance_ = value;
  // @@protoc_insertion_point(field_set:comm.PolarPosition.distance)
}

// double angle = 2;
inline void PolarPosition::clear_angle() {
  angle_ = 0;
}
inline double PolarPosition::angle() const {
  // @@protoc_insertion_point(field_get:comm.PolarPosition.angle)
  return angle_;
}
inline void PolarPosition::set_angle(double value) {
  
  angle_ = value;
  // @@protoc_insertion_point(field_set:comm.PolarPosition.angle)
}

// -------------------------------------------------------------------

// XYPosition

// double x = 1;
inline void XYPosition::clear_x() {
  x_ = 0;
}
inline double XYPosition::x() const {
  // @@protoc_insertion_point(field_get:comm.XYPosition.x)
  return x_;
}
inline void XYPosition::set_x(double value) {
  
  x_ = value;
  // @@protoc_insertion_point(field_set:comm.XYPosition.x)
}

// double y = 2;
inline void XYPosition::clear_y() {
  y_ = 0;
}
inline double XYPosition::y() const {
  // @@protoc_insertion_point(field_get:comm.XYPosition.y)
  return y_;
}
inline void XYPosition::set_y(double value) {
  
  y_ = value;
  // @@protoc_insertion_point(field_set:comm.XYPosition.y)
}

// -------------------------------------------------------------------

// Item

// int32 item_ID = 1;
inline void Item::clear_item_id() {
  item_id_ = 0;
}
inline ::google::protobuf::int32 Item::item_id() const {
  // @@protoc_insertion_point(field_get:comm.Item.item_ID)
  return item_id_;
}
inline void Item::set_item_id(::google::protobuf::int32 value) {
  
  item_id_ = value;
  // @@protoc_insertion_point(field_set:comm.Item.item_ID)
}

// int32 type = 2;
inline void Item::clear_type() {
  type_ = 0;
}
inline ::google::protobuf::int32 Item::type() const {
  // @@protoc_insertion_point(field_get:comm.Item.type)
  return type_;
}
inline void Item::set_type(::google::protobuf::int32 value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:comm.Item.type)
}

// .comm.PolarPosition pos = 3;
inline bool Item::has_pos() const {
  return this != internal_default_instance() && pos_ != NULL;
}
inline void Item::clear_pos() {
  if (GetArenaNoVirtual() == NULL && pos_ != NULL) {
    delete pos_;
  }
  pos_ = NULL;
}
inline const ::comm::PolarPosition& Item::_internal_pos() const {
  return *pos_;
}
inline const ::comm::PolarPosition& Item::pos() const {
  const ::comm::PolarPosition* p = pos_;
  // @@protoc_insertion_point(field_get:comm.Item.pos)
  return p != NULL ? *p : *reinterpret_cast<const ::comm::PolarPosition*>(
      &::comm::_PolarPosition_default_instance_);
}
inline ::comm::PolarPosition* Item::release_pos() {
  // @@protoc_insertion_point(field_release:comm.Item.pos)
  
  ::comm::PolarPosition* temp = pos_;
  pos_ = NULL;
  return temp;
}
inline ::comm::PolarPosition* Item::mutable_pos() {
  
  if (pos_ == NULL) {
    auto* p = CreateMaybeMessage<::comm::PolarPosition>(GetArenaNoVirtual());
    pos_ = p;
  }
  // @@protoc_insertion_point(field_mutable:comm.Item.pos)
  return pos_;
}
inline void Item::set_allocated_pos(::comm::PolarPosition* pos) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete pos_;
  }
  if (pos) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      pos = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, pos, submessage_arena);
    }
    
  } else {
    
  }
  pos_ = pos;
  // @@protoc_insertion_point(field_set_allocated:comm.Item.pos)
}

// int32 durability = 4;
inline void Item::clear_durability() {
  durability_ = 0;
}
inline ::google::protobuf::int32 Item::durability() const {
  // @@protoc_insertion_point(field_get:comm.Item.durability)
  return durability_;
}
inline void Item::set_durability(::google::protobuf::int32 value) {
  
  durability_ = value;
  // @@protoc_insertion_point(field_set:comm.Item.durability)
}

// -------------------------------------------------------------------

// PoisonInfo

// .comm.XYPosition current_center = 1;
inline bool PoisonInfo::has_current_center() const {
  return this != internal_default_instance() && current_center_ != NULL;
}
inline void PoisonInfo::clear_current_center() {
  if (GetArenaNoVirtual() == NULL && current_center_ != NULL) {
    delete current_center_;
  }
  current_center_ = NULL;
}
inline const ::comm::XYPosition& PoisonInfo::_internal_current_center() const {
  return *current_center_;
}
inline const ::comm::XYPosition& PoisonInfo::current_center() const {
  const ::comm::XYPosition* p = current_center_;
  // @@protoc_insertion_point(field_get:comm.PoisonInfo.current_center)
  return p != NULL ? *p : *reinterpret_cast<const ::comm::XYPosition*>(
      &::comm::_XYPosition_default_instance_);
}
inline ::comm::XYPosition* PoisonInfo::release_current_center() {
  // @@protoc_insertion_point(field_release:comm.PoisonInfo.current_center)
  
  ::comm::XYPosition* temp = current_center_;
  current_center_ = NULL;
  return temp;
}
inline ::comm::XYPosition* PoisonInfo::mutable_current_center() {
  
  if (current_center_ == NULL) {
    auto* p = CreateMaybeMessage<::comm::XYPosition>(GetArenaNoVirtual());
    current_center_ = p;
  }
  // @@protoc_insertion_point(field_mutable:comm.PoisonInfo.current_center)
  return current_center_;
}
inline void PoisonInfo::set_allocated_current_center(::comm::XYPosition* current_center) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete current_center_;
  }
  if (current_center) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      current_center = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, current_center, submessage_arena);
    }
    
  } else {
    
  }
  current_center_ = current_center;
  // @@protoc_insertion_point(field_set_allocated:comm.PoisonInfo.current_center)
}

// .comm.XYPosition next_center = 2;
inline bool PoisonInfo::has_next_center() const {
  return this != internal_default_instance() && next_center_ != NULL;
}
inline void PoisonInfo::clear_next_center() {
  if (GetArenaNoVirtual() == NULL && next_center_ != NULL) {
    delete next_center_;
  }
  next_center_ = NULL;
}
inline const ::comm::XYPosition& PoisonInfo::_internal_next_center() const {
  return *next_center_;
}
inline const ::comm::XYPosition& PoisonInfo::next_center() const {
  const ::comm::XYPosition* p = next_center_;
  // @@protoc_insertion_point(field_get:comm.PoisonInfo.next_center)
  return p != NULL ? *p : *reinterpret_cast<const ::comm::XYPosition*>(
      &::comm::_XYPosition_default_instance_);
}
inline ::comm::XYPosition* PoisonInfo::release_next_center() {
  // @@protoc_insertion_point(field_release:comm.PoisonInfo.next_center)
  
  ::comm::XYPosition* temp = next_center_;
  next_center_ = NULL;
  return temp;
}
inline ::comm::XYPosition* PoisonInfo::mutable_next_center() {
  
  if (next_center_ == NULL) {
    auto* p = CreateMaybeMessage<::comm::XYPosition>(GetArenaNoVirtual());
    next_center_ = p;
  }
  // @@protoc_insertion_point(field_mutable:comm.PoisonInfo.next_center)
  return next_center_;
}
inline void PoisonInfo::set_allocated_next_center(::comm::XYPosition* next_center) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete next_center_;
  }
  if (next_center) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      next_center = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, next_center, submessage_arena);
    }
    
  } else {
    
  }
  next_center_ = next_center;
  // @@protoc_insertion_point(field_set_allocated:comm.PoisonInfo.next_center)
}

// double current_radius = 3;
inline void PoisonInfo::clear_current_radius() {
  current_radius_ = 0;
}
inline double PoisonInfo::current_radius() const {
  // @@protoc_insertion_point(field_get:comm.PoisonInfo.current_radius)
  return current_radius_;
}
inline void PoisonInfo::set_current_radius(double value) {
  
  current_radius_ = value;
  // @@protoc_insertion_point(field_set:comm.PoisonInfo.current_radius)
}

// double next_radius = 4;
inline void PoisonInfo::clear_next_radius() {
  next_radius_ = 0;
}
inline double PoisonInfo::next_radius() const {
  // @@protoc_insertion_point(field_get:comm.PoisonInfo.next_radius)
  return next_radius_;
}
inline void PoisonInfo::set_next_radius(double value) {
  
  next_radius_ = value;
  // @@protoc_insertion_point(field_set:comm.PoisonInfo.next_radius)
}

// int32 rest_frames = 5;
inline void PoisonInfo::clear_rest_frames() {
  rest_frames_ = 0;
}
inline ::google::protobuf::int32 PoisonInfo::rest_frames() const {
  // @@protoc_insertion_point(field_get:comm.PoisonInfo.rest_frames)
  return rest_frames_;
}
inline void PoisonInfo::set_rest_frames(::google::protobuf::int32 value) {
  
  rest_frames_ = value;
  // @@protoc_insertion_point(field_set:comm.PoisonInfo.rest_frames)
}

// int32 move_flag = 6;
inline void PoisonInfo::clear_move_flag() {
  move_flag_ = 0;
}
inline ::google::protobuf::int32 PoisonInfo::move_flag() const {
  // @@protoc_insertion_point(field_get:comm.PoisonInfo.move_flag)
  return move_flag_;
}
inline void PoisonInfo::set_move_flag(::google::protobuf::int32 value) {
  
  move_flag_ = value;
  // @@protoc_insertion_point(field_set:comm.PoisonInfo.move_flag)
}

// -------------------------------------------------------------------

// SelfInfo

// double health_point = 1;
inline void SelfInfo::clear_health_point() {
  health_point_ = 0;
}
inline double SelfInfo::health_point() const {
  // @@protoc_insertion_point(field_get:comm.SelfInfo.health_point)
  return health_point_;
}
inline void SelfInfo::set_health_point(double value) {
  
  health_point_ = value;
  // @@protoc_insertion_point(field_set:comm.SelfInfo.health_point)
}

// double health_point_limit = 2;
inline void SelfInfo::clear_health_point_limit() {
  health_point_limit_ = 0;
}
inline double SelfInfo::health_point_limit() const {
  // @@protoc_insertion_point(field_get:comm.SelfInfo.health_point_limit)
  return health_point_limit_;
}
inline void SelfInfo::set_health_point_limit(double value) {
  
  health_point_limit_ = value;
  // @@protoc_insertion_point(field_set:comm.SelfInfo.health_point_limit)
}

// double move_angle = 3;
inline void SelfInfo::clear_move_angle() {
  move_angle_ = 0;
}
inline double SelfInfo::move_angle() const {
  // @@protoc_insertion_point(field_get:comm.SelfInfo.move_angle)
  return move_angle_;
}
inline void SelfInfo::set_move_angle(double value) {
  
  move_angle_ = value;
  // @@protoc_insertion_point(field_set:comm.SelfInfo.move_angle)
}

// double view_angle = 4;
inline void SelfInfo::clear_view_angle() {
  view_angle_ = 0;
}
inline double SelfInfo::view_angle() const {
  // @@protoc_insertion_point(field_get:comm.SelfInfo.view_angle)
  return view_angle_;
}
inline void SelfInfo::set_view_angle(double value) {
  
  view_angle_ = value;
  // @@protoc_insertion_point(field_set:comm.SelfInfo.view_angle)
}

// double move_speed = 5;
inline void SelfInfo::clear_move_speed() {
  move_speed_ = 0;
}
inline double SelfInfo::move_speed() const {
  // @@protoc_insertion_point(field_get:comm.SelfInfo.move_speed)
  return move_speed_;
}
inline void SelfInfo::set_move_speed(double value) {
  
  move_speed_ = value;
  // @@protoc_insertion_point(field_set:comm.SelfInfo.move_speed)
}

// int32 vocation = 6;
inline void SelfInfo::clear_vocation() {
  vocation_ = 0;
}
inline ::google::protobuf::int32 SelfInfo::vocation() const {
  // @@protoc_insertion_point(field_get:comm.SelfInfo.vocation)
  return vocation_;
}
inline void SelfInfo::set_vocation(::google::protobuf::int32 value) {
  
  vocation_ = value;
  // @@protoc_insertion_point(field_set:comm.SelfInfo.vocation)
}

// int32 status = 7;
inline void SelfInfo::clear_status() {
  status_ = 0;
}
inline ::google::protobuf::int32 SelfInfo::status() const {
  // @@protoc_insertion_point(field_get:comm.SelfInfo.status)
  return status_;
}
inline void SelfInfo::set_status(::google::protobuf::int32 value) {
  
  status_ = value;
  // @@protoc_insertion_point(field_set:comm.SelfInfo.status)
}

// int32 move_cd = 8;
inline void SelfInfo::clear_move_cd() {
  move_cd_ = 0;
}
inline ::google::protobuf::int32 SelfInfo::move_cd() const {
  // @@protoc_insertion_point(field_get:comm.SelfInfo.move_cd)
  return move_cd_;
}
inline void SelfInfo::set_move_cd(::google::protobuf::int32 value) {
  
  move_cd_ = value;
  // @@protoc_insertion_point(field_set:comm.SelfInfo.move_cd)
}

// int32 attack_cd = 9;
inline void SelfInfo::clear_attack_cd() {
  attack_cd_ = 0;
}
inline ::google::protobuf::int32 SelfInfo::attack_cd() const {
  // @@protoc_insertion_point(field_get:comm.SelfInfo.attack_cd)
  return attack_cd_;
}
inline void SelfInfo::set_attack_cd(::google::protobuf::int32 value) {
  
  attack_cd_ = value;
  // @@protoc_insertion_point(field_set:comm.SelfInfo.attack_cd)
}

// .comm.XYPosition pos = 10;
inline bool SelfInfo::has_pos() const {
  return this != internal_default_instance() && pos_ != NULL;
}
inline void SelfInfo::clear_pos() {
  if (GetArenaNoVirtual() == NULL && pos_ != NULL) {
    delete pos_;
  }
  pos_ = NULL;
}
inline const ::comm::XYPosition& SelfInfo::_internal_pos() const {
  return *pos_;
}
inline const ::comm::XYPosition& SelfInfo::pos() const {
  const ::comm::XYPosition* p = pos_;
  // @@protoc_insertion_point(field_get:comm.SelfInfo.pos)
  return p != NULL ? *p : *reinterpret_cast<const ::comm::XYPosition*>(
      &::comm::_XYPosition_default_instance_);
}
inline ::comm::XYPosition* SelfInfo::release_pos() {
  // @@protoc_insertion_point(field_release:comm.SelfInfo.pos)
  
  ::comm::XYPosition* temp = pos_;
  pos_ = NULL;
  return temp;
}
inline ::comm::XYPosition* SelfInfo::mutable_pos() {
  
  if (pos_ == NULL) {
    auto* p = CreateMaybeMessage<::comm::XYPosition>(GetArenaNoVirtual());
    pos_ = p;
  }
  // @@protoc_insertion_point(field_mutable:comm.SelfInfo.pos)
  return pos_;
}
inline void SelfInfo::set_allocated_pos(::comm::XYPosition* pos) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete pos_;
  }
  if (pos) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      pos = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, pos, submessage_arena);
    }
    
  } else {
    
  }
  pos_ = pos;
  // @@protoc_insertion_point(field_set_allocated:comm.SelfInfo.pos)
}

// repeated .comm.Item bag = 11;
inline int SelfInfo::bag_size() const {
  return bag_.size();
}
inline void SelfInfo::clear_bag() {
  bag_.Clear();
}
inline ::comm::Item* SelfInfo::mutable_bag(int index) {
  // @@protoc_insertion_point(field_mutable:comm.SelfInfo.bag)
  return bag_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::comm::Item >*
SelfInfo::mutable_bag() {
  // @@protoc_insertion_point(field_mutable_list:comm.SelfInfo.bag)
  return &bag_;
}
inline const ::comm::Item& SelfInfo::bag(int index) const {
  // @@protoc_insertion_point(field_get:comm.SelfInfo.bag)
  return bag_.Get(index);
}
inline ::comm::Item* SelfInfo::add_bag() {
  // @@protoc_insertion_point(field_add:comm.SelfInfo.bag)
  return bag_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::comm::Item >&
SelfInfo::bag() const {
  // @@protoc_insertion_point(field_list:comm.SelfInfo.bag)
  return bag_;
}

// double view_width = 12;
inline void SelfInfo::clear_view_width() {
  view_width_ = 0;
}
inline double SelfInfo::view_width() const {
  // @@protoc_insertion_point(field_get:comm.SelfInfo.view_width)
  return view_width_;
}
inline void SelfInfo::set_view_width(double value) {
  
  view_width_ = value;
  // @@protoc_insertion_point(field_set:comm.SelfInfo.view_width)
}

// double view_distance = 13;
inline void SelfInfo::clear_view_distance() {
  view_distance_ = 0;
}
inline double SelfInfo::view_distance() const {
  // @@protoc_insertion_point(field_get:comm.SelfInfo.view_distance)
  return view_distance_;
}
inline void SelfInfo::set_view_distance(double value) {
  
  view_distance_ = value;
  // @@protoc_insertion_point(field_set:comm.SelfInfo.view_distance)
}

// -------------------------------------------------------------------

// OtherInfo

// int32 player_ID = 1;
inline void OtherInfo::clear_player_id() {
  player_id_ = 0;
}
inline ::google::protobuf::int32 OtherInfo::player_id() const {
  // @@protoc_insertion_point(field_get:comm.OtherInfo.player_ID)
  return player_id_;
}
inline void OtherInfo::set_player_id(::google::protobuf::int32 value) {
  
  player_id_ = value;
  // @@protoc_insertion_point(field_set:comm.OtherInfo.player_ID)
}

// int32 status = 2;
inline void OtherInfo::clear_status() {
  status_ = 0;
}
inline ::google::protobuf::int32 OtherInfo::status() const {
  // @@protoc_insertion_point(field_get:comm.OtherInfo.status)
  return status_;
}
inline void OtherInfo::set_status(::google::protobuf::int32 value) {
  
  status_ = value;
  // @@protoc_insertion_point(field_set:comm.OtherInfo.status)
}

// double move_angle = 3;
inline void OtherInfo::clear_move_angle() {
  move_angle_ = 0;
}
inline double OtherInfo::move_angle() const {
  // @@protoc_insertion_point(field_get:comm.OtherInfo.move_angle)
  return move_angle_;
}
inline void OtherInfo::set_move_angle(double value) {
  
  move_angle_ = value;
  // @@protoc_insertion_point(field_set:comm.OtherInfo.move_angle)
}

// double view_angle = 4;
inline void OtherInfo::clear_view_angle() {
  view_angle_ = 0;
}
inline double OtherInfo::view_angle() const {
  // @@protoc_insertion_point(field_get:comm.OtherInfo.view_angle)
  return view_angle_;
}
inline void OtherInfo::set_view_angle(double value) {
  
  view_angle_ = value;
  // @@protoc_insertion_point(field_set:comm.OtherInfo.view_angle)
}

// double move_speed = 5;
inline void OtherInfo::clear_move_speed() {
  move_speed_ = 0;
}
inline double OtherInfo::move_speed() const {
  // @@protoc_insertion_point(field_get:comm.OtherInfo.move_speed)
  return move_speed_;
}
inline void OtherInfo::set_move_speed(double value) {
  
  move_speed_ = value;
  // @@protoc_insertion_point(field_set:comm.OtherInfo.move_speed)
}

// int32 vocation = 6;
inline void OtherInfo::clear_vocation() {
  vocation_ = 0;
}
inline ::google::protobuf::int32 OtherInfo::vocation() const {
  // @@protoc_insertion_point(field_get:comm.OtherInfo.vocation)
  return vocation_;
}
inline void OtherInfo::set_vocation(::google::protobuf::int32 value) {
  
  vocation_ = value;
  // @@protoc_insertion_point(field_set:comm.OtherInfo.vocation)
}

// .comm.PolarPosition pos = 7;
inline bool OtherInfo::has_pos() const {
  return this != internal_default_instance() && pos_ != NULL;
}
inline void OtherInfo::clear_pos() {
  if (GetArenaNoVirtual() == NULL && pos_ != NULL) {
    delete pos_;
  }
  pos_ = NULL;
}
inline const ::comm::PolarPosition& OtherInfo::_internal_pos() const {
  return *pos_;
}
inline const ::comm::PolarPosition& OtherInfo::pos() const {
  const ::comm::PolarPosition* p = pos_;
  // @@protoc_insertion_point(field_get:comm.OtherInfo.pos)
  return p != NULL ? *p : *reinterpret_cast<const ::comm::PolarPosition*>(
      &::comm::_PolarPosition_default_instance_);
}
inline ::comm::PolarPosition* OtherInfo::release_pos() {
  // @@protoc_insertion_point(field_release:comm.OtherInfo.pos)
  
  ::comm::PolarPosition* temp = pos_;
  pos_ = NULL;
  return temp;
}
inline ::comm::PolarPosition* OtherInfo::mutable_pos() {
  
  if (pos_ == NULL) {
    auto* p = CreateMaybeMessage<::comm::PolarPosition>(GetArenaNoVirtual());
    pos_ = p;
  }
  // @@protoc_insertion_point(field_mutable:comm.OtherInfo.pos)
  return pos_;
}
inline void OtherInfo::set_allocated_pos(::comm::PolarPosition* pos) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete pos_;
  }
  if (pos) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      pos = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, pos, submessage_arena);
    }
    
  } else {
    
  }
  pos_ = pos;
  // @@protoc_insertion_point(field_set_allocated:comm.OtherInfo.pos)
}

// -------------------------------------------------------------------

// Sound

// int32 sender = 1;
inline void Sound::clear_sender() {
  sender_ = 0;
}
inline ::google::protobuf::int32 Sound::sender() const {
  // @@protoc_insertion_point(field_get:comm.Sound.sender)
  return sender_;
}
inline void Sound::set_sender(::google::protobuf::int32 value) {
  
  sender_ = value;
  // @@protoc_insertion_point(field_set:comm.Sound.sender)
}

// int32 delay = 2;
inline void Sound::clear_delay() {
  delay_ = 0;
}
inline ::google::protobuf::int32 Sound::delay() const {
  // @@protoc_insertion_point(field_get:comm.Sound.delay)
  return delay_;
}
inline void Sound::set_delay(::google::protobuf::int32 value) {
  
  delay_ = value;
  // @@protoc_insertion_point(field_set:comm.Sound.delay)
}

// int32 parameter = 3;
inline void Sound::clear_parameter() {
  parameter_ = 0;
}
inline ::google::protobuf::int32 Sound::parameter() const {
  // @@protoc_insertion_point(field_get:comm.Sound.parameter)
  return parameter_;
}
inline void Sound::set_parameter(::google::protobuf::int32 value) {
  
  parameter_ = value;
  // @@protoc_insertion_point(field_set:comm.Sound.parameter)
}

// -------------------------------------------------------------------

// PlayerInfo

// .comm.SelfInfo self = 1;
inline bool PlayerInfo::has_self() const {
  return this != internal_default_instance() && self_ != NULL;
}
inline void PlayerInfo::clear_self() {
  if (GetArenaNoVirtual() == NULL && self_ != NULL) {
    delete self_;
  }
  self_ = NULL;
}
inline const ::comm::SelfInfo& PlayerInfo::_internal_self() const {
  return *self_;
}
inline const ::comm::SelfInfo& PlayerInfo::self() const {
  const ::comm::SelfInfo* p = self_;
  // @@protoc_insertion_point(field_get:comm.PlayerInfo.self)
  return p != NULL ? *p : *reinterpret_cast<const ::comm::SelfInfo*>(
      &::comm::_SelfInfo_default_instance_);
}
inline ::comm::SelfInfo* PlayerInfo::release_self() {
  // @@protoc_insertion_point(field_release:comm.PlayerInfo.self)
  
  ::comm::SelfInfo* temp = self_;
  self_ = NULL;
  return temp;
}
inline ::comm::SelfInfo* PlayerInfo::mutable_self() {
  
  if (self_ == NULL) {
    auto* p = CreateMaybeMessage<::comm::SelfInfo>(GetArenaNoVirtual());
    self_ = p;
  }
  // @@protoc_insertion_point(field_mutable:comm.PlayerInfo.self)
  return self_;
}
inline void PlayerInfo::set_allocated_self(::comm::SelfInfo* self) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete self_;
  }
  if (self) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      self = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, self, submessage_arena);
    }
    
  } else {
    
  }
  self_ = self;
  // @@protoc_insertion_point(field_set_allocated:comm.PlayerInfo.self)
}

// repeated int32 landform_id = 2;
inline int PlayerInfo::landform_id_size() const {
  return landform_id_.size();
}
inline void PlayerInfo::clear_landform_id() {
  landform_id_.Clear();
}
inline ::google::protobuf::int32 PlayerInfo::landform_id(int index) const {
  // @@protoc_insertion_point(field_get:comm.PlayerInfo.landform_id)
  return landform_id_.Get(index);
}
inline void PlayerInfo::set_landform_id(int index, ::google::protobuf::int32 value) {
  landform_id_.Set(index, value);
  // @@protoc_insertion_point(field_set:comm.PlayerInfo.landform_id)
}
inline void PlayerInfo::add_landform_id(::google::protobuf::int32 value) {
  landform_id_.Add(value);
  // @@protoc_insertion_point(field_add:comm.PlayerInfo.landform_id)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
PlayerInfo::landform_id() const {
  // @@protoc_insertion_point(field_list:comm.PlayerInfo.landform_id)
  return landform_id_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
PlayerInfo::mutable_landform_id() {
  // @@protoc_insertion_point(field_mutable_list:comm.PlayerInfo.landform_id)
  return &landform_id_;
}

// repeated .comm.Item items = 3;
inline int PlayerInfo::items_size() const {
  return items_.size();
}
inline void PlayerInfo::clear_items() {
  items_.Clear();
}
inline ::comm::Item* PlayerInfo::mutable_items(int index) {
  // @@protoc_insertion_point(field_mutable:comm.PlayerInfo.items)
  return items_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::comm::Item >*
PlayerInfo::mutable_items() {
  // @@protoc_insertion_point(field_mutable_list:comm.PlayerInfo.items)
  return &items_;
}
inline const ::comm::Item& PlayerInfo::items(int index) const {
  // @@protoc_insertion_point(field_get:comm.PlayerInfo.items)
  return items_.Get(index);
}
inline ::comm::Item* PlayerInfo::add_items() {
  // @@protoc_insertion_point(field_add:comm.PlayerInfo.items)
  return items_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::comm::Item >&
PlayerInfo::items() const {
  // @@protoc_insertion_point(field_list:comm.PlayerInfo.items)
  return items_;
}

// repeated .comm.OtherInfo others = 4;
inline int PlayerInfo::others_size() const {
  return others_.size();
}
inline void PlayerInfo::clear_others() {
  others_.Clear();
}
inline ::comm::OtherInfo* PlayerInfo::mutable_others(int index) {
  // @@protoc_insertion_point(field_mutable:comm.PlayerInfo.others)
  return others_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::comm::OtherInfo >*
PlayerInfo::mutable_others() {
  // @@protoc_insertion_point(field_mutable_list:comm.PlayerInfo.others)
  return &others_;
}
inline const ::comm::OtherInfo& PlayerInfo::others(int index) const {
  // @@protoc_insertion_point(field_get:comm.PlayerInfo.others)
  return others_.Get(index);
}
inline ::comm::OtherInfo* PlayerInfo::add_others() {
  // @@protoc_insertion_point(field_add:comm.PlayerInfo.others)
  return others_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::comm::OtherInfo >&
PlayerInfo::others() const {
  // @@protoc_insertion_point(field_list:comm.PlayerInfo.others)
  return others_;
}

// repeated .comm.Sound sounds = 5;
inline int PlayerInfo::sounds_size() const {
  return sounds_.size();
}
inline void PlayerInfo::clear_sounds() {
  sounds_.Clear();
}
inline ::comm::Sound* PlayerInfo::mutable_sounds(int index) {
  // @@protoc_insertion_point(field_mutable:comm.PlayerInfo.sounds)
  return sounds_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::comm::Sound >*
PlayerInfo::mutable_sounds() {
  // @@protoc_insertion_point(field_mutable_list:comm.PlayerInfo.sounds)
  return &sounds_;
}
inline const ::comm::Sound& PlayerInfo::sounds(int index) const {
  // @@protoc_insertion_point(field_get:comm.PlayerInfo.sounds)
  return sounds_.Get(index);
}
inline ::comm::Sound* PlayerInfo::add_sounds() {
  // @@protoc_insertion_point(field_add:comm.PlayerInfo.sounds)
  return sounds_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::comm::Sound >&
PlayerInfo::sounds() const {
  // @@protoc_insertion_point(field_list:comm.PlayerInfo.sounds)
  return sounds_;
}

// int32 player_ID = 6;
inline void PlayerInfo::clear_player_id() {
  player_id_ = 0;
}
inline ::google::protobuf::int32 PlayerInfo::player_id() const {
  // @@protoc_insertion_point(field_get:comm.PlayerInfo.player_ID)
  return player_id_;
}
inline void PlayerInfo::set_player_id(::google::protobuf::int32 value) {
  
  player_id_ = value;
  // @@protoc_insertion_point(field_set:comm.PlayerInfo.player_ID)
}

// .comm.PoisonInfo poison = 7;
inline bool PlayerInfo::has_poison() const {
  return this != internal_default_instance() && poison_ != NULL;
}
inline void PlayerInfo::clear_poison() {
  if (GetArenaNoVirtual() == NULL && poison_ != NULL) {
    delete poison_;
  }
  poison_ = NULL;
}
inline const ::comm::PoisonInfo& PlayerInfo::_internal_poison() const {
  return *poison_;
}
inline const ::comm::PoisonInfo& PlayerInfo::poison() const {
  const ::comm::PoisonInfo* p = poison_;
  // @@protoc_insertion_point(field_get:comm.PlayerInfo.poison)
  return p != NULL ? *p : *reinterpret_cast<const ::comm::PoisonInfo*>(
      &::comm::_PoisonInfo_default_instance_);
}
inline ::comm::PoisonInfo* PlayerInfo::release_poison() {
  // @@protoc_insertion_point(field_release:comm.PlayerInfo.poison)
  
  ::comm::PoisonInfo* temp = poison_;
  poison_ = NULL;
  return temp;
}
inline ::comm::PoisonInfo* PlayerInfo::mutable_poison() {
  
  if (poison_ == NULL) {
    auto* p = CreateMaybeMessage<::comm::PoisonInfo>(GetArenaNoVirtual());
    poison_ = p;
  }
  // @@protoc_insertion_point(field_mutable:comm.PlayerInfo.poison)
  return poison_;
}
inline void PlayerInfo::set_allocated_poison(::comm::PoisonInfo* poison) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete poison_;
  }
  if (poison) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      poison = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, poison, submessage_arena);
    }
    
  } else {
    
  }
  poison_ = poison;
  // @@protoc_insertion_point(field_set_allocated:comm.PlayerInfo.poison)
}

// -------------------------------------------------------------------

// Command

// .comm.CommandType command_type = 1;
inline void Command::clear_command_type() {
  command_type_ = 0;
}
inline ::comm::CommandType Command::command_type() const {
  // @@protoc_insertion_point(field_get:comm.Command.command_type)
  return static_cast< ::comm::CommandType >(command_type_);
}
inline void Command::set_command_type(::comm::CommandType value) {
  
  command_type_ = value;
  // @@protoc_insertion_point(field_set:comm.Command.command_type)
}

// int32 target_ID = 2;
inline void Command::clear_target_id() {
  target_id_ = 0;
}
inline ::google::protobuf::int32 Command::target_id() const {
  // @@protoc_insertion_point(field_get:comm.Command.target_ID)
  return target_id_;
}
inline void Command::set_target_id(::google::protobuf::int32 value) {
  
  target_id_ = value;
  // @@protoc_insertion_point(field_set:comm.Command.target_ID)
}

// double move_angle = 3;
inline void Command::clear_move_angle() {
  move_angle_ = 0;
}
inline double Command::move_angle() const {
  // @@protoc_insertion_point(field_get:comm.Command.move_angle)
  return move_angle_;
}
inline void Command::set_move_angle(double value) {
  
  move_angle_ = value;
  // @@protoc_insertion_point(field_set:comm.Command.move_angle)
}

// double view_angle = 4;
inline void Command::clear_view_angle() {
  view_angle_ = 0;
}
inline double Command::view_angle() const {
  // @@protoc_insertion_point(field_get:comm.Command.view_angle)
  return view_angle_;
}
inline void Command::set_view_angle(double value) {
  
  view_angle_ = value;
  // @@protoc_insertion_point(field_set:comm.Command.view_angle)
}

// int32 parameter = 5;
inline void Command::clear_parameter() {
  parameter_ = 0;
}
inline ::google::protobuf::int32 Command::parameter() const {
  // @@protoc_insertion_point(field_get:comm.Command.parameter)
  return parameter_;
}
inline void Command::set_parameter(::google::protobuf::int32 value) {
  
  parameter_ = value;
  // @@protoc_insertion_point(field_set:comm.Command.parameter)
}

// int32 role = 6;
inline void Command::clear_role() {
  role_ = 0;
}
inline ::google::protobuf::int32 Command::role() const {
  // @@protoc_insertion_point(field_get:comm.Command.role)
  return role_;
}
inline void Command::set_role(::google::protobuf::int32 value) {
  
  role_ = value;
  // @@protoc_insertion_point(field_set:comm.Command.role)
}

// .comm.XYPosition landing_point = 7;
inline bool Command::has_landing_point() const {
  return this != internal_default_instance() && landing_point_ != NULL;
}
inline void Command::clear_landing_point() {
  if (GetArenaNoVirtual() == NULL && landing_point_ != NULL) {
    delete landing_point_;
  }
  landing_point_ = NULL;
}
inline const ::comm::XYPosition& Command::_internal_landing_point() const {
  return *landing_point_;
}
inline const ::comm::XYPosition& Command::landing_point() const {
  const ::comm::XYPosition* p = landing_point_;
  // @@protoc_insertion_point(field_get:comm.Command.landing_point)
  return p != NULL ? *p : *reinterpret_cast<const ::comm::XYPosition*>(
      &::comm::_XYPosition_default_instance_);
}
inline ::comm::XYPosition* Command::release_landing_point() {
  // @@protoc_insertion_point(field_release:comm.Command.landing_point)
  
  ::comm::XYPosition* temp = landing_point_;
  landing_point_ = NULL;
  return temp;
}
inline ::comm::XYPosition* Command::mutable_landing_point() {
  
  if (landing_point_ == NULL) {
    auto* p = CreateMaybeMessage<::comm::XYPosition>(GetArenaNoVirtual());
    landing_point_ = p;
  }
  // @@protoc_insertion_point(field_mutable:comm.Command.landing_point)
  return landing_point_;
}
inline void Command::set_allocated_landing_point(::comm::XYPosition* landing_point) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete landing_point_;
  }
  if (landing_point) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      landing_point = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, landing_point, submessage_arena);
    }
    
  } else {
    
  }
  landing_point_ = landing_point;
  // @@protoc_insertion_point(field_set_allocated:comm.Command.landing_point)
}

// -------------------------------------------------------------------

// Route

// .comm.XYPosition start_pos = 1;
inline bool Route::has_start_pos() const {
  return this != internal_default_instance() && start_pos_ != NULL;
}
inline void Route::clear_start_pos() {
  if (GetArenaNoVirtual() == NULL && start_pos_ != NULL) {
    delete start_pos_;
  }
  start_pos_ = NULL;
}
inline const ::comm::XYPosition& Route::_internal_start_pos() const {
  return *start_pos_;
}
inline const ::comm::XYPosition& Route::start_pos() const {
  const ::comm::XYPosition* p = start_pos_;
  // @@protoc_insertion_point(field_get:comm.Route.start_pos)
  return p != NULL ? *p : *reinterpret_cast<const ::comm::XYPosition*>(
      &::comm::_XYPosition_default_instance_);
}
inline ::comm::XYPosition* Route::release_start_pos() {
  // @@protoc_insertion_point(field_release:comm.Route.start_pos)
  
  ::comm::XYPosition* temp = start_pos_;
  start_pos_ = NULL;
  return temp;
}
inline ::comm::XYPosition* Route::mutable_start_pos() {
  
  if (start_pos_ == NULL) {
    auto* p = CreateMaybeMessage<::comm::XYPosition>(GetArenaNoVirtual());
    start_pos_ = p;
  }
  // @@protoc_insertion_point(field_mutable:comm.Route.start_pos)
  return start_pos_;
}
inline void Route::set_allocated_start_pos(::comm::XYPosition* start_pos) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete start_pos_;
  }
  if (start_pos) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      start_pos = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, start_pos, submessage_arena);
    }
    
  } else {
    
  }
  start_pos_ = start_pos;
  // @@protoc_insertion_point(field_set_allocated:comm.Route.start_pos)
}

// .comm.XYPosition over_pos = 2;
inline bool Route::has_over_pos() const {
  return this != internal_default_instance() && over_pos_ != NULL;
}
inline void Route::clear_over_pos() {
  if (GetArenaNoVirtual() == NULL && over_pos_ != NULL) {
    delete over_pos_;
  }
  over_pos_ = NULL;
}
inline const ::comm::XYPosition& Route::_internal_over_pos() const {
  return *over_pos_;
}
inline const ::comm::XYPosition& Route::over_pos() const {
  const ::comm::XYPosition* p = over_pos_;
  // @@protoc_insertion_point(field_get:comm.Route.over_pos)
  return p != NULL ? *p : *reinterpret_cast<const ::comm::XYPosition*>(
      &::comm::_XYPosition_default_instance_);
}
inline ::comm::XYPosition* Route::release_over_pos() {
  // @@protoc_insertion_point(field_release:comm.Route.over_pos)
  
  ::comm::XYPosition* temp = over_pos_;
  over_pos_ = NULL;
  return temp;
}
inline ::comm::XYPosition* Route::mutable_over_pos() {
  
  if (over_pos_ == NULL) {
    auto* p = CreateMaybeMessage<::comm::XYPosition>(GetArenaNoVirtual());
    over_pos_ = p;
  }
  // @@protoc_insertion_point(field_mutable:comm.Route.over_pos)
  return over_pos_;
}
inline void Route::set_allocated_over_pos(::comm::XYPosition* over_pos) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete over_pos_;
  }
  if (over_pos) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      over_pos = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, over_pos, submessage_arena);
    }
    
  } else {
    
  }
  over_pos_ = over_pos;
  // @@protoc_insertion_point(field_set_allocated:comm.Route.over_pos)
}

// repeated int32 teammates = 3;
inline int Route::teammates_size() const {
  return teammates_.size();
}
inline void Route::clear_teammates() {
  teammates_.Clear();
}
inline ::google::protobuf::int32 Route::teammates(int index) const {
  // @@protoc_insertion_point(field_get:comm.Route.teammates)
  return teammates_.Get(index);
}
inline void Route::set_teammates(int index, ::google::protobuf::int32 value) {
  teammates_.Set(index, value);
  // @@protoc_insertion_point(field_set:comm.Route.teammates)
}
inline void Route::add_teammates(::google::protobuf::int32 value) {
  teammates_.Add(value);
  // @@protoc_insertion_point(field_add:comm.Route.teammates)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
Route::teammates() const {
  // @@protoc_insertion_point(field_list:comm.Route.teammates)
  return teammates_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
Route::mutable_teammates() {
  // @@protoc_insertion_point(field_mutable_list:comm.Route.teammates)
  return &teammates_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace comm

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::comm::CommandType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::comm::CommandType>() {
  return ::comm::CommandType_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_comm_2eproto
